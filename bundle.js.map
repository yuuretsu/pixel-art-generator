{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/tracery-grammar/tracery.js","../src/FormulaVisualizator/math-functions.ts","../src/FormulaVisualizator/drawing.ts","../node_modules/esprima/dist/esprima.js","../src/FormulaVisualizator/index.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.35.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\n * @author Kate\n */\n\nvar tracery = function() {\n\n    var TraceryNode = function(parent, childIndex, settings) {\n        this.errors = [];\n\n        // No input? Add an error, but continue anyways\n        if (settings.raw === undefined) {\n            this.errors.push(\"Empty input for node\");\n            settings.raw = \"\";\n        }\n\n        // If the root node of an expansion, it will have the grammar passed as the 'parent'\n        //  set the grammar from the 'parent', and set all other values for a root node\n        if ( parent instanceof tracery.Grammar) {\n            this.grammar = parent;\n            this.parent = null;\n            this.depth = 0;\n            this.childIndex = 0;\n        } else {\n            this.grammar = parent.grammar;\n            this.parent = parent;\n            this.depth = parent.depth + 1;\n            this.childIndex = childIndex;\n        }\n\n        this.raw = settings.raw;\n        this.type = settings.type;\n        this.isExpanded = false;\n\n        if (!this.grammar) {\n            this.errors.push(\"No grammar specified for this node \" + this);\n        }\n\n    };\n\n    TraceryNode.prototype.toString = function() {\n        return \"Node('\" + this.raw + \"' \" + this.type + \" d:\" + this.depth + \")\";\n    };\n\n    // Expand the node (with the given child rule)\n    //  Make children if the node has any\n    TraceryNode.prototype.expandChildren = function(childRule, preventRecursion) {\n        this.children = [];\n        this.finishedText = \"\";\n\n        // Set the rule for making children,\n        // and expand it into section\n        this.childRule = childRule;\n        if (this.childRule !== undefined) {\n            var sections = tracery.parse(childRule);\n\n            // Add errors to this\n            if (sections.errors.length > 0) {\n                this.errors = this.errors.concat(sections.errors);\n\n            }\n\n            for (var i = 0; i < sections.length; i++) {\n                this.children[i] = new TraceryNode(this, i, sections[i]);\n                if (!preventRecursion)\n                    this.children[i].expand(preventRecursion);\n\n                // Add in the finished text\n                this.finishedText += this.children[i].finishedText;\n            }\n        } else {\n            // In normal operation, this shouldn't ever happen\n            this.errors.push(\"No child rule provided, can't expand children\");\n        }\n    };\n\n    // Expand this rule (possibly creating children)\n    TraceryNode.prototype.expand = function(preventRecursion) {\n\n        if (!this.isExpanded) {\n            this.isExpanded = true;\n\n            this.expansionErrors = [];\n\n            // Types of nodes\n            // -1: raw, needs parsing\n            //  0: Plaintext\n            //  1: Tag (\"#symbol.mod.mod2.mod3#\" or \"#[pushTarget:pushRule]symbol.mod\")\n            //  2: Action (\"[pushTarget:pushRule], [pushTarget:POP]\", more in the future)\n\n            switch(this.type) {\n            // Raw rule\n            case -1:\n\n                this.expandChildren(this.raw, preventRecursion);\n                break;\n\n            // plaintext, do nothing but copy text into finsihed text\n            case 0:\n                this.finishedText = this.raw;\n                break;\n\n            // Tag\n            case 1:\n                // Parse to find any actions, and figure out what the symbol is\n                this.preactions = [];\n                this.postactions = [];\n\n                var parsed = tracery.parseTag(this.raw);\n\n                // Break into symbol actions and modifiers\n                this.symbol = parsed.symbol;\n                this.modifiers = parsed.modifiers;\n\n                // Create all the preactions from the raw syntax\n                for (var i = 0; i < parsed.preactions.length; i++) {\n                    this.preactions[i] = new NodeAction(this, parsed.preactions[i].raw);\n                }\n                for (var i = 0; i < parsed.postactions.length; i++) {\n                    //   this.postactions[i] = new NodeAction(this, parsed.postactions[i].raw);\n                }\n\n                // Make undo actions for all preactions (pops for each push)\n                for (var i = 0; i < this.preactions.length; i++) {\n                    if (this.preactions[i].type === 0)\n                        this.postactions.push(this.preactions[i].createUndo());\n                }\n\n                // Activate all the preactions\n                for (var i = 0; i < this.preactions.length; i++) {\n                    this.preactions[i].activate();\n                }\n\n                this.finishedText = this.raw;\n\n                // Expand (passing the node, this allows tracking of recursion depth)\n\n                var selectedRule = this.grammar.selectRule(this.symbol, this, this.errors);\n\n                this.expandChildren(selectedRule, preventRecursion);\n\n                // Apply modifiers\n                // TODO: Update parse function to not trigger on hashtags within parenthesis within tags,\n                //   so that modifier parameters can contain tags \"#story.replace(#protagonist#, #newCharacter#)#\"\n                for (var i = 0; i < this.modifiers.length; i++) {\n                    var modName = this.modifiers[i];\n                    var modParams = [];\n                    if (modName.indexOf(\"(\") > 0) {\n                        var regExp = /\\(([^)]+)\\)/;\n\n                        // Todo: ignore any escaped commas.  For now, commas always split\n                        var results = regExp.exec(this.modifiers[i]);\n                        if (!results || results.length < 2) {\n                        } else {\n                            var modParams = results[1].split(\",\");\n                            modName = this.modifiers[i].substring(0, modName.indexOf(\"(\"));\n                        }\n\n                    }\n\n                    var mod = this.grammar.modifiers[modName];\n\n                    // Missing modifier?\n                    if (!mod) {\n                        this.errors.push(\"Missing modifier \" + modName);\n                        this.finishedText += \"((.\" + modName + \"))\";\n                    } else {\n                        this.finishedText = mod(this.finishedText, modParams);\n\n                    }\n\n                }\n\n                // Perform post-actions\n                for (var i = 0; i < this.postactions.length; i++) {\n                    this.postactions[i].activate();\n                }\n                break;\n            case 2:\n\n                // Just a bare action?  Expand it!\n                this.action = new NodeAction(this, this.raw);\n                this.action.activate();\n\n                // No visible text for an action\n                // TODO: some visible text for if there is a failure to perform the action?\n                this.finishedText = \"\";\n                break;\n\n            }\n\n        } else {\n            //console.warn(\"Already expanded \" + this);\n        }\n\n    };\n\n    TraceryNode.prototype.clearEscapeChars = function() {\n\n        this.finishedText = this.finishedText.replace(/\\\\\\\\/g, \"DOUBLEBACKSLASH\").replace(/\\\\/g, \"\").replace(/DOUBLEBACKSLASH/g, \"\\\\\");\n    };\n\n    // An action that occurs when a node is expanded\n    // Types of actions:\n    // 0 Push: [key:rule]\n    // 1 Pop: [key:POP]\n    // 2 function: [functionName(param0,param1)] (TODO!)\n    function NodeAction(node, raw) {\n        /*\n         if (!node)\n         console.warn(\"No node for NodeAction\");\n         if (!raw)\n         console.warn(\"No raw commands for NodeAction\");\n         */\n\n        this.node = node;\n\n        var sections = raw.split(\":\");\n        this.target = sections[0];\n\n        // No colon? A function!\n        if (sections.length === 1) {\n            this.type = 2;\n\n        }\n\n        // Colon? It's either a push or a pop\n        else {\n            this.rule = sections[1];\n            if (this.rule === \"POP\") {\n                this.type = 1;\n            } else {\n                this.type = 0;\n            }\n        }\n    }\n\n\n    NodeAction.prototype.createUndo = function() {\n        if (this.type === 0) {\n            return new NodeAction(this.node, this.target + \":POP\");\n        }\n        // TODO Not sure how to make Undo actions for functions or POPs\n        return null;\n    };\n\n    NodeAction.prototype.activate = function() {\n        var grammar = this.node.grammar;\n        switch(this.type) {\n        case 0:\n            // split into sections (the way to denote an array of rules)\n            this.ruleSections = this.rule.split(\",\");\n            this.finishedRules = [];\n            this.ruleNodes = [];\n            for (var i = 0; i < this.ruleSections.length; i++) {\n                var n = new TraceryNode(grammar, 0, {\n                    type : -1,\n                    raw : this.ruleSections[i]\n                });\n\n                n.expand();\n\n                this.finishedRules.push(n.finishedText);\n            }\n\n            // TODO: escape commas properly\n            grammar.pushRules(this.target, this.finishedRules, this);\n            break;\n        case 1:\n            grammar.popRules(this.target);\n            break;\n        case 2:\n            grammar.flatten(this.target, true);\n            break;\n        }\n\n    };\n\n    NodeAction.prototype.toText = function() {\n        switch(this.type) {\n        case 0:\n            return this.target + \":\" + this.rule;\n        case 1:\n            return this.target + \":POP\";\n        case 2:\n            return \"((some function))\";\n        default:\n            return \"((Unknown Action))\";\n        }\n    };\n\n    // Sets of rules\n    // Can also contain conditional or fallback sets of rulesets)\n    function RuleSet(grammar, raw) {\n        this.raw = raw;\n        this.grammar = grammar;\n        this.falloff = 1;\n\n        if (Array.isArray(raw)) {\n            this.defaultRules = raw;\n        } else if ( typeof raw === 'string' || raw instanceof String) {\n            this.defaultRules = [raw];\n        } else if (raw === 'object') {\n            // TODO: support for conditional and hierarchical rule sets\n        }\n\n    };\n\n    RuleSet.prototype.selectRule = function(errors) {\n        // console.log(\"Get rule\", this.raw);\n        // Is there a conditional?\n        if (this.conditionalRule) {\n            var value = this.grammar.expand(this.conditionalRule, true);\n            // does this value match any of the conditionals?\n            if (this.conditionalValues[value]) {\n                var v = this.conditionalValues[value].selectRule(errors);\n                if (v !== null && v !== undefined)\n                    return v;\n            }\n            // No returned value?\n        }\n\n        // Is there a ranked order?\n        if (this.ranking) {\n            for (var i = 0; i < this.ranking.length; i++) {\n                var v = this.ranking.selectRule();\n                if (v !== null && v !== undefined)\n                    return v;\n            }\n\n            // Still no returned value?\n        }\n\n        if (this.defaultRules !== undefined) {\n            var index = 0;\n            // Select from this basic array of rules\n\n            // Get the distribution from the grammar if there is no other\n            var distribution = this.distribution;\n            if (!distribution)\n                distribution = this.grammar.distribution;\n\n            switch(distribution) {\n            case \"shuffle\":\n\n                // create a shuffle desk\n                if (!this.shuffledDeck || this.shuffledDeck.length === 0) {\n                    // make an array\n                    this.shuffledDeck = fyshuffle(Array.apply(null, {\n                        length : this.defaultRules.length\n                    }).map(Number.call, Number), this.falloff);\n\n                }\n\n                index = this.shuffledDeck.pop();\n\n                break;\n            case \"weighted\":\n                errors.push(\"Weighted distribution not yet implemented\");\n                break;\n            case \"falloff\":\n                errors.push(\"Falloff distribution not yet implemented\");\n                break;\n            default:\n\n                index = Math.floor(Math.pow(Math.random(), this.falloff) * this.defaultRules.length);\n                break;\n            }\n\n            if (!this.defaultUses)\n                this.defaultUses = [];\n            this.defaultUses[index] = ++this.defaultUses[index] || 1;\n            return this.defaultRules[index];\n        }\n\n        errors.push(\"No default rules defined for \" + this);\n        return null;\n\n    };\n\n    RuleSet.prototype.clearState = function() {\n\n        if (this.defaultUses) {\n            this.defaultUses = [];\n        }\n    };\n\n    function fyshuffle(array, falloff) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    var Symbol = function(grammar, key, rawRules) {\n        // Symbols can be made with a single value, and array, or array of objects of (conditions/values)\n        this.key = key;\n        this.grammar = grammar;\n        this.rawRules = rawRules;\n\n        this.baseRules = new RuleSet(this.grammar, rawRules);\n        this.clearState();\n\n    };\n\n    Symbol.prototype.clearState = function() {\n\n        // Clear the stack and clear all ruleset usages\n        this.stack = [this.baseRules];\n\n        this.uses = [];\n        this.baseRules.clearState();\n    };\n\n    Symbol.prototype.pushRules = function(rawRules) {\n        var rules = new RuleSet(this.grammar, rawRules);\n        this.stack.push(rules);\n    };\n\n    Symbol.prototype.popRules = function() {\n        this.stack.pop();\n    };\n\n    Symbol.prototype.selectRule = function(node, errors) {\n        this.uses.push({\n            node : node\n        });\n\n        if (this.stack.length === 0) {\n            errors.push(\"The rule stack for '\" + this.key + \"' is empty, too many pops?\");\n            return \"((\" + this.key + \"))\";\n        }\n\n        return this.stack[this.stack.length - 1].selectRule();\n    };\n\n    Symbol.prototype.getActiveRules = function() {\n        if (this.stack.length === 0) {\n            return null;\n        }\n        return this.stack[this.stack.length - 1].selectRule();\n    };\n\n    Symbol.prototype.rulesToJSON = function() {\n        return JSON.stringify(this.rawRules);\n    };\n\n    var Grammar = function(raw, settings) {\n        this.modifiers = {};\n        this.loadFromRawObj(raw);\n    };\n\n    Grammar.prototype.clearState = function() {\n        var keys = Object.keys(this.symbols);\n        for (var i = 0; i < keys.length; i++) {\n            this.symbols[keys[i]].clearState();\n        }\n    };\n\n    Grammar.prototype.addModifiers = function(mods) {\n\n        // copy over the base modifiers\n        for (var key in mods) {\n            if (mods.hasOwnProperty(key)) {\n                this.modifiers[key] = mods[key];\n            }\n        };\n\n    };\n\n    Grammar.prototype.loadFromRawObj = function(raw) {\n\n        this.raw = raw;\n        this.symbols = {};\n        this.subgrammars = [];\n\n        if (this.raw) {\n            // Add all rules to the grammar\n            for (var key in this.raw) {\n                if (this.raw.hasOwnProperty(key)) {\n                    this.symbols[key] = new Symbol(this, key, this.raw[key]);\n                }\n            }\n        }\n    };\n\n    Grammar.prototype.createRoot = function(rule) {\n        // Create a node and subnodes\n        var root = new TraceryNode(this, 0, {\n            type : -1,\n            raw : rule,\n        });\n\n        return root;\n    };\n\n    Grammar.prototype.expand = function(rule, allowEscapeChars) {\n        var root = this.createRoot(rule);\n        root.expand();\n        if (!allowEscapeChars)\n            root.clearEscapeChars();\n\n        return root;\n    };\n\n    Grammar.prototype.flatten = function(rule, allowEscapeChars) {\n        var root = this.expand(rule, allowEscapeChars);\n\n        return root.finishedText;\n    };\n\n    Grammar.prototype.toJSON = function() {\n        var keys = Object.keys(this.symbols);\n        var symbolJSON = [];\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            symbolJSON.push(' \"' + key + '\" : ' + this.symbols[key].rulesToJSON());\n        }\n        return \"{\\n\" + symbolJSON.join(\",\\n\") + \"\\n}\";\n    };\n\n    // Create or push rules\n    Grammar.prototype.pushRules = function(key, rawRules, sourceAction) {\n\n        if (this.symbols[key] === undefined) {\n            this.symbols[key] = new Symbol(this, key, rawRules);\n            if (sourceAction)\n                this.symbols[key].isDynamic = true;\n        } else {\n            this.symbols[key].pushRules(rawRules);\n        }\n    };\n\n    Grammar.prototype.popRules = function(key) {\n        if (!this.symbols[key])\n            this.errors.push(\"Can't pop: no symbol for key \" + key);\n        this.symbols[key].popRules();\n    };\n\n    Grammar.prototype.selectRule = function(key, node, errors) {\n        if (this.symbols[key]) {\n            var rule = this.symbols[key].selectRule(node, errors);\n\n            return rule;\n        }\n\n        // Failover to alternative subgrammars\n        for (var i = 0; i < this.subgrammars.length; i++) {\n\n            if (this.subgrammars[i].symbols[key])\n                return this.subgrammars[i].symbols[key].selectRule();\n        }\n\n        // No symbol?\n        errors.push(\"No symbol for '\" + key + \"'\");\n        return \"((\" + key + \"))\";\n    };\n\n    // Parses a plaintext rule in the tracery syntax\n    tracery = {\n\n        createGrammar : function(raw) {\n            return new Grammar(raw);\n        },\n\n        // Parse the contents of a tag\n        parseTag : function(tagContents) {\n\n            var parsed = {\n                symbol : undefined,\n                preactions : [],\n                postactions : [],\n                modifiers : []\n            };\n            var sections = tracery.parse(tagContents);\n            var symbolSection = undefined;\n            for (var i = 0; i < sections.length; i++) {\n                if (sections[i].type === 0) {\n                    if (symbolSection === undefined) {\n                        symbolSection = sections[i].raw;\n                    } else {\n                        throw (\"multiple main sections in \" + tagContents);\n                    }\n                } else {\n                    parsed.preactions.push(sections[i]);\n                }\n            }\n\n            if (symbolSection === undefined) {\n                //   throw (\"no main section in \" + tagContents);\n            } else {\n                var components = symbolSection.split(\".\");\n                parsed.symbol = components[0];\n                parsed.modifiers = components.slice(1);\n            }\n            return parsed;\n        },\n\n        parse : function(rule) {\n            var depth = 0;\n            var inTag = false;\n            var sections = [];\n            var escaped = false;\n\n            var errors = [];\n            var start = 0;\n\n            var escapedSubstring = \"\";\n            var lastEscapedChar = undefined;\n\n            if (rule === null) {\n                var sections = [];\n                sections.errors = errors;\n\n                return sections;\n            }\n\n            function createSection(start, end, type) {\n                if (end - start < 1) {\n                    if (type === 1)\n                        errors.push(start + \": empty tag\");\n                    if (type === 2)\n                        errors.push(start + \": empty action\");\n\n                }\n                var rawSubstring;\n                if (lastEscapedChar !== undefined) {\n                    rawSubstring = escapedSubstring + \"\\\\\" + rule.substring(lastEscapedChar + 1, end);\n\n                } else {\n                    rawSubstring = rule.substring(start, end);\n                }\n                sections.push({\n                    type : type,\n                    raw : rawSubstring\n                });\n                lastEscapedChar = undefined;\n                escapedSubstring = \"\";\n            };\n\n            for (var i = 0; i < rule.length; i++) {\n\n                if (!escaped) {\n                    var c = rule.charAt(i);\n\n                    switch(c) {\n\n                    // Enter a deeper bracketed section\n                    case '[':\n                        if (depth === 0 && !inTag) {\n                            if (start < i)\n                                createSection(start, i, 0);\n                            start = i + 1;\n                        }\n                        depth++;\n                        break;\n\n                    case ']':\n                        depth--;\n\n                        // End a bracketed section\n                        if (depth === 0 && !inTag) {\n                            createSection(start, i, 2);\n                            start = i + 1;\n                        }\n                        break;\n\n                    // Hashtag\n                    //   ignore if not at depth 0, that means we are in a bracket\n                    case '#':\n                        if (depth === 0) {\n                            if (inTag) {\n                                createSection(start, i, 1);\n                                start = i + 1;\n                            } else {\n                                if (start < i)\n                                    createSection(start, i, 0);\n                                start = i + 1;\n                            }\n                            inTag = !inTag;\n                        }\n                        break;\n\n                    case '\\\\':\n                        escaped = true;\n                        escapedSubstring = escapedSubstring + rule.substring(start, i);\n                        start = i + 1;\n                        lastEscapedChar = i;\n                        break;\n                    }\n                } else {\n                    escaped = false;\n                }\n            }\n            if (start < rule.length)\n                createSection(start, rule.length, 0);\n\n            if (inTag) {\n                errors.push(\"Unclosed tag\");\n            }\n            if (depth > 0) {\n                errors.push(\"Too many [\");\n            }\n            if (depth < 0) {\n                errors.push(\"Too many ]\");\n            }\n\n            // Strip out empty plaintext sections\n\n            sections = sections.filter(function(section) {\n                if (section.type === 0 && section.raw.length === 0)\n                    return false;\n                return true;\n            });\n            sections.errors = errors;\n            return sections;\n        },\n    };\n\n    function isVowel(c) {\n        var c2 = c.toLowerCase();\n        return (c2 === 'a') || (c2 === 'e') || (c2 === 'i') || (c2 === 'o') || (c2 === 'u');\n    };\n\n    function isAlphaNum(c) {\n        return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9');\n    };\n    function escapeRegExp(str) {\n        return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n    }\n\n    var baseEngModifiers = {\n\n        replace : function(s, params) {\n            //http://stackoverflow.com/questions/1144783/replacing-all-occurrences-of-a-string-in-javascript\n            return s.replace(new RegExp(escapeRegExp(params[0]), 'g'), params[1]);\n        },\n\n        capitalizeAll : function(s) {\n            var s2 = \"\";\n            var capNext = true;\n            for (var i = 0; i < s.length; i++) {\n\n                if (!isAlphaNum(s.charAt(i))) {\n                    capNext = true;\n                    s2 += s.charAt(i);\n                } else {\n                    if (!capNext) {\n                        s2 += s.charAt(i);\n                    } else {\n                        s2 += s.charAt(i).toUpperCase();\n                        capNext = false;\n                    }\n\n                }\n            }\n            return s2;\n        },\n\n        capitalize : function(s) {\n            return s.charAt(0).toUpperCase() + s.substring(1);\n        },\n\n        a : function(s) {\n            if (s.length > 0) {\n                if (s.charAt(0).toLowerCase() === 'u') {\n                    if (s.length > 2) {\n                        if (s.charAt(2).toLowerCase() === 'i')\n                            return \"a \" + s;\n                    }\n                }\n\n                if (isVowel(s.charAt(0))) {\n                    return \"an \" + s;\n                }\n            }\n\n            return \"a \" + s;\n\n        },\n\n        firstS : function(s) {\n            console.log(s);\n            var s2 = s.split(\" \");\n\n            var finished = baseEngModifiers.s(s2[0]) + \" \" + s2.slice(1).join(\" \");\n            console.log(finished);\n            return finished;\n        },\n\n        s : function(s) {\n            switch (s.charAt(s.length -1)) {\n            case 's':\n                return s + \"es\";\n                break;\n            case 'h':\n                return s + \"es\";\n                break;\n            case 'x':\n                return s + \"es\";\n                break;\n            case 'y':\n                if (!isVowel(s.charAt(s.length - 2)))\n                    return s.substring(0, s.length - 1) + \"ies\";\n                else\n                    return s + \"s\";\n                break;\n            default:\n                return s + \"s\";\n            }\n        },\n        ed : function(s) {\n            switch (s.charAt(s.length -1)) {\n            case 's':\n                return s + \"ed\";\n                break;\n            case 'e':\n                return s + \"d\";\n                break;\n            case 'h':\n                return s + \"ed\";\n                break;\n            case 'x':\n                return s + \"ed\";\n                break;\n            case 'y':\n                if (!isVowel(s.charAt(s.length - 2)))\n                    return s.substring(0, s.length - 1) + \"ied\";\n                else\n                    return s + \"d\";\n                break;\n            default:\n                return s + \"ed\";\n            }\n        }\n    };\n\n    tracery.baseEngModifiers = baseEngModifiers; \n    // Externalize\n    tracery.TraceryNode = TraceryNode;\n\n    tracery.Grammar = Grammar;\n    tracery.Symbol = Symbol;\n    tracery.RuleSet = RuleSet;\n    return tracery;\n}();\n\nmodule.exports = tracery; ","export function* range(from, to) {\r\n    while (from < to) {\r\n        yield from++;\r\n    }\r\n}\r\nexport function randFloat(bottom, top) {\r\n    return Math.random() * (top - bottom) + bottom;\r\n}\r\nexport function randInt(bottom, top) {\r\n    return Math.floor(randFloat(bottom, top));\r\n}\r\nexport function randChoice(arr) {\r\n    return arr[randInt(0, arr.length)];\r\n}\r\nexport function fixNumber(min, max, number) {\r\n    return number >= min ? number % max : max - (-number % max);\r\n}\r\nexport function normalizeNumber(min, max, number) {\r\n    return (number - min) / (max - min);\r\n}\r\nexport function limNumber(min, max, number) {\r\n    return Math.max(Math.min(number, max), min);\r\n}\r\nexport function interpolate(a, b, t) {\r\n    return a + (b - a) * t;\r\n}\r\n","import { randInt, interpolate, limNumber, randFloat } from \"./math-functions\";\r\nexport class Rgba {\r\n    constructor(red, green, blue, alpha) {\r\n        this.red = red;\r\n        this.green = green;\r\n        this.blue = blue;\r\n        this.alpha = alpha;\r\n    }\r\n    static randRgb() {\r\n        return new Rgba(randInt(0, 256), randInt(0, 256), randInt(0, 256), 255);\r\n    }\r\n    interpolate(other, t) {\r\n        return new Rgba(interpolate(this.red, other.red, t), interpolate(this.green, other.green, t), interpolate(this.blue, other.blue, t), interpolate(this.alpha, other.alpha, t));\r\n    }\r\n    normalise() {\r\n        return new Rgba(limNumber(0, 255, this.red), limNumber(0, 255, this.green), limNumber(0, 255, this.blue), limNumber(0, 255, this.alpha));\r\n    }\r\n    mutateRgb(value) {\r\n        return new Rgba(this.red + randFloat(-value, value), this.green + randFloat(-value, value), this.blue + randFloat(-value, value), this.alpha).normalise();\r\n    }\r\n    difference(other) {\r\n        return ((Math.abs(this.red - other.red) +\r\n            Math.abs(this.green - other.green) +\r\n            Math.abs(this.blue - other.blue) +\r\n            Math.abs(this.alpha - other.alpha)) / Rgba.MAX_DIF);\r\n    }\r\n}\r\nRgba.MAX_DIF = 255 * 4;\r\nexport class Canvas {\r\n    constructor(width, height, node) {\r\n        this.node = node || document.createElement(\"canvas\");\r\n        this.node.width = width;\r\n        this.node.height = height;\r\n        this.ctx = this.node.getContext(\"2d\");\r\n    }\r\n}\r\nexport class PixelsData extends Canvas {\r\n    constructor(width, height, node) {\r\n        super(width, height, node);\r\n        this.data = this.ctx.createImageData(this.node.width, this.node.height);\r\n    }\r\n    setPixel(x, y, color) {\r\n        const POINTER = (y * this.data.width + x) * 4;\r\n        this.data.data[POINTER] = color.red;\r\n        this.data.data[POINTER + 1] = color.green;\r\n        this.data.data[POINTER + 2] = color.blue;\r\n        this.data.data[POINTER + 3] = color.alpha;\r\n    }\r\n    update() {\r\n        this.ctx.putImageData(this.data, 0, 0);\r\n        return this;\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n/* istanbul ignore next */\n\telse if(typeof exports === 'object')\n\t\texports[\"esprima\"] = factory();\n\telse\n\t\troot[\"esprima\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar comment_handler_1 = __webpack_require__(1);\n\tvar jsx_parser_1 = __webpack_require__(3);\n\tvar parser_1 = __webpack_require__(8);\n\tvar tokenizer_1 = __webpack_require__(15);\n\tfunction parse(code, options, delegate) {\n\t    var commentHandler = null;\n\t    var proxyDelegate = function (node, metadata) {\n\t        if (delegate) {\n\t            delegate(node, metadata);\n\t        }\n\t        if (commentHandler) {\n\t            commentHandler.visit(node, metadata);\n\t        }\n\t    };\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\n\t    var collectComment = false;\n\t    if (options) {\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\n\t        if (collectComment || attachComment) {\n\t            commentHandler = new comment_handler_1.CommentHandler();\n\t            commentHandler.attach = attachComment;\n\t            options.comment = true;\n\t            parserDelegate = proxyDelegate;\n\t        }\n\t    }\n\t    var isModule = false;\n\t    if (options && typeof options.sourceType === 'string') {\n\t        isModule = (options.sourceType === 'module');\n\t    }\n\t    var parser;\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n\t    }\n\t    else {\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\n\t    }\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\n\t    var ast = program;\n\t    if (collectComment && commentHandler) {\n\t        ast.comments = commentHandler.comments;\n\t    }\n\t    if (parser.config.tokens) {\n\t        ast.tokens = parser.tokens;\n\t    }\n\t    if (parser.config.tolerant) {\n\t        ast.errors = parser.errorHandler.errors;\n\t    }\n\t    return ast;\n\t}\n\texports.parse = parse;\n\tfunction parseModule(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'module';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseModule = parseModule;\n\tfunction parseScript(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'script';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseScript = parseScript;\n\tfunction tokenize(code, options, delegate) {\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\n\t    var tokens;\n\t    tokens = [];\n\t    try {\n\t        while (true) {\n\t            var token = tokenizer.getNextToken();\n\t            if (!token) {\n\t                break;\n\t            }\n\t            if (delegate) {\n\t                token = delegate(token);\n\t            }\n\t            tokens.push(token);\n\t        }\n\t    }\n\t    catch (e) {\n\t        tokenizer.errorHandler.tolerate(e);\n\t    }\n\t    if (tokenizer.errorHandler.tolerant) {\n\t        tokens.errors = tokenizer.errors();\n\t    }\n\t    return tokens;\n\t}\n\texports.tokenize = tokenize;\n\tvar syntax_1 = __webpack_require__(2);\n\texports.Syntax = syntax_1.Syntax;\n\t// Sync with *.json manifests.\n\texports.version = '4.0.1';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\tvar CommentHandler = (function () {\n\t    function CommentHandler() {\n\t        this.attach = false;\n\t        this.comments = [];\n\t        this.stack = [];\n\t        this.leading = [];\n\t        this.trailing = [];\n\t    }\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n\t        //  innnerComments for properties empty block\n\t        //  `function a() {/** comments **\\/}`\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n\t            var innerComments = [];\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\n\t                var entry = this.leading[i];\n\t                if (metadata.end.offset >= entry.start) {\n\t                    innerComments.unshift(entry.comment);\n\t                    this.leading.splice(i, 1);\n\t                    this.trailing.splice(i, 1);\n\t                }\n\t            }\n\t            if (innerComments.length) {\n\t                node.innerComments = innerComments;\n\t            }\n\t        }\n\t    };\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\n\t        var trailingComments = [];\n\t        if (this.trailing.length > 0) {\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\n\t                var entry_1 = this.trailing[i];\n\t                if (entry_1.start >= metadata.end.offset) {\n\t                    trailingComments.unshift(entry_1.comment);\n\t                }\n\t            }\n\t            this.trailing.length = 0;\n\t            return trailingComments;\n\t        }\n\t        var entry = this.stack[this.stack.length - 1];\n\t        if (entry && entry.node.trailingComments) {\n\t            var firstComment = entry.node.trailingComments[0];\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n\t                trailingComments = entry.node.trailingComments;\n\t                delete entry.node.trailingComments;\n\t            }\n\t        }\n\t        return trailingComments;\n\t    };\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\n\t        var leadingComments = [];\n\t        var target;\n\t        while (this.stack.length > 0) {\n\t            var entry = this.stack[this.stack.length - 1];\n\t            if (entry && entry.start >= metadata.start.offset) {\n\t                target = entry.node;\n\t                this.stack.pop();\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (target) {\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\n\t            for (var i = count - 1; i >= 0; --i) {\n\t                var comment = target.leadingComments[i];\n\t                if (comment.range[1] <= metadata.start.offset) {\n\t                    leadingComments.unshift(comment);\n\t                    target.leadingComments.splice(i, 1);\n\t                }\n\t            }\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\n\t                delete target.leadingComments;\n\t            }\n\t            return leadingComments;\n\t        }\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\n\t            var entry = this.leading[i];\n\t            if (entry.start <= metadata.start.offset) {\n\t                leadingComments.unshift(entry.comment);\n\t                this.leading.splice(i, 1);\n\t            }\n\t        }\n\t        return leadingComments;\n\t    };\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n\t            return;\n\t        }\n\t        this.insertInnerComments(node, metadata);\n\t        var trailingComments = this.findTrailingComments(metadata);\n\t        var leadingComments = this.findLeadingComments(metadata);\n\t        if (leadingComments.length > 0) {\n\t            node.leadingComments = leadingComments;\n\t        }\n\t        if (trailingComments.length > 0) {\n\t            node.trailingComments = trailingComments;\n\t        }\n\t        this.stack.push({\n\t            node: node,\n\t            start: metadata.start.offset\n\t        });\n\t    };\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\n\t        var comment = {\n\t            type: type,\n\t            value: node.value\n\t        };\n\t        if (node.range) {\n\t            comment.range = node.range;\n\t        }\n\t        if (node.loc) {\n\t            comment.loc = node.loc;\n\t        }\n\t        this.comments.push(comment);\n\t        if (this.attach) {\n\t            var entry = {\n\t                comment: {\n\t                    type: type,\n\t                    value: node.value,\n\t                    range: [metadata.start.offset, metadata.end.offset]\n\t                },\n\t                start: metadata.start.offset\n\t            };\n\t            if (node.loc) {\n\t                entry.comment.loc = node.loc;\n\t            }\n\t            node.type = type;\n\t            this.leading.push(entry);\n\t            this.trailing.push(entry);\n\t        }\n\t    };\n\t    CommentHandler.prototype.visit = function (node, metadata) {\n\t        if (node.type === 'LineComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (node.type === 'BlockComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (this.attach) {\n\t            this.visitNode(node, metadata);\n\t        }\n\t    };\n\t    return CommentHandler;\n\t}());\n\texports.CommentHandler = CommentHandler;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.Syntax = {\n\t    AssignmentExpression: 'AssignmentExpression',\n\t    AssignmentPattern: 'AssignmentPattern',\n\t    ArrayExpression: 'ArrayExpression',\n\t    ArrayPattern: 'ArrayPattern',\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\n\t    AwaitExpression: 'AwaitExpression',\n\t    BlockStatement: 'BlockStatement',\n\t    BinaryExpression: 'BinaryExpression',\n\t    BreakStatement: 'BreakStatement',\n\t    CallExpression: 'CallExpression',\n\t    CatchClause: 'CatchClause',\n\t    ClassBody: 'ClassBody',\n\t    ClassDeclaration: 'ClassDeclaration',\n\t    ClassExpression: 'ClassExpression',\n\t    ConditionalExpression: 'ConditionalExpression',\n\t    ContinueStatement: 'ContinueStatement',\n\t    DoWhileStatement: 'DoWhileStatement',\n\t    DebuggerStatement: 'DebuggerStatement',\n\t    EmptyStatement: 'EmptyStatement',\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\n\t    ExportSpecifier: 'ExportSpecifier',\n\t    ExpressionStatement: 'ExpressionStatement',\n\t    ForStatement: 'ForStatement',\n\t    ForOfStatement: 'ForOfStatement',\n\t    ForInStatement: 'ForInStatement',\n\t    FunctionDeclaration: 'FunctionDeclaration',\n\t    FunctionExpression: 'FunctionExpression',\n\t    Identifier: 'Identifier',\n\t    IfStatement: 'IfStatement',\n\t    ImportDeclaration: 'ImportDeclaration',\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n\t    ImportSpecifier: 'ImportSpecifier',\n\t    Literal: 'Literal',\n\t    LabeledStatement: 'LabeledStatement',\n\t    LogicalExpression: 'LogicalExpression',\n\t    MemberExpression: 'MemberExpression',\n\t    MetaProperty: 'MetaProperty',\n\t    MethodDefinition: 'MethodDefinition',\n\t    NewExpression: 'NewExpression',\n\t    ObjectExpression: 'ObjectExpression',\n\t    ObjectPattern: 'ObjectPattern',\n\t    Program: 'Program',\n\t    Property: 'Property',\n\t    RestElement: 'RestElement',\n\t    ReturnStatement: 'ReturnStatement',\n\t    SequenceExpression: 'SequenceExpression',\n\t    SpreadElement: 'SpreadElement',\n\t    Super: 'Super',\n\t    SwitchCase: 'SwitchCase',\n\t    SwitchStatement: 'SwitchStatement',\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\n\t    TemplateElement: 'TemplateElement',\n\t    TemplateLiteral: 'TemplateLiteral',\n\t    ThisExpression: 'ThisExpression',\n\t    ThrowStatement: 'ThrowStatement',\n\t    TryStatement: 'TryStatement',\n\t    UnaryExpression: 'UnaryExpression',\n\t    UpdateExpression: 'UpdateExpression',\n\t    VariableDeclaration: 'VariableDeclaration',\n\t    VariableDeclarator: 'VariableDeclarator',\n\t    WhileStatement: 'WhileStatement',\n\t    WithStatement: 'WithStatement',\n\t    YieldExpression: 'YieldExpression'\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar character_1 = __webpack_require__(4);\n\tvar JSXNode = __webpack_require__(5);\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\tvar Node = __webpack_require__(7);\n\tvar parser_1 = __webpack_require__(8);\n\tvar token_1 = __webpack_require__(13);\n\tvar xhtml_entities_1 = __webpack_require__(14);\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\tfunction getQualifiedElementName(elementName) {\n\t    var qualifiedName;\n\t    switch (elementName.type) {\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n\t            var id = elementName;\n\t            qualifiedName = id.name;\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n\t            var ns = elementName;\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\n\t                getQualifiedElementName(ns.name);\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n\t            var expr = elementName;\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\n\t                getQualifiedElementName(expr.property);\n\t            break;\n\t        /* istanbul ignore next */\n\t        default:\n\t            break;\n\t    }\n\t    return qualifiedName;\n\t}\n\tvar JSXParser = (function (_super) {\n\t    __extends(JSXParser, _super);\n\t    function JSXParser(code, options, delegate) {\n\t        return _super.call(this, code, options, delegate) || this;\n\t    }\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n\t    };\n\t    JSXParser.prototype.startJSX = function () {\n\t        // Unwind the scanner before the lookahead token.\n\t        this.scanner.index = this.startMarker.index;\n\t        this.scanner.lineNumber = this.startMarker.line;\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n\t    };\n\t    JSXParser.prototype.finishJSX = function () {\n\t        // Prime the next lookahead.\n\t        this.nextToken();\n\t    };\n\t    JSXParser.prototype.reenterJSX = function () {\n\t        this.startJSX();\n\t        this.expectJSX('}');\n\t        // Pop the closing '}' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t    };\n\t    JSXParser.prototype.createJSXNode = function () {\n\t        this.collectComments();\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.createJSXChildNode = function () {\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\n\t        var result = '&';\n\t        var valid = true;\n\t        var terminated = false;\n\t        var numeric = false;\n\t        var hex = false;\n\t        while (!this.scanner.eof() && valid && !terminated) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === quote) {\n\t                break;\n\t            }\n\t            terminated = (ch === ';');\n\t            result += ch;\n\t            ++this.scanner.index;\n\t            if (!terminated) {\n\t                switch (result.length) {\n\t                    case 2:\n\t                        // e.g. '&#123;'\n\t                        numeric = (ch === '#');\n\t                        break;\n\t                    case 3:\n\t                        if (numeric) {\n\t                            // e.g. '&#x41;'\n\t                            hex = (ch === 'x');\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n\t                            numeric = numeric && !hex;\n\t                        }\n\t                        break;\n\t                    default:\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t        if (valid && terminated && result.length > 2) {\n\t            // e.g. '&#x41;' becomes just '#x41'\n\t            var str = result.substr(1, result.length - 2);\n\t            if (numeric && str.length > 1) {\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\n\t            }\n\t            else if (hex && str.length > 2) {\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n\t            }\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n\t                result = xhtml_entities_1.XHTMLEntities[str];\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\t    JSXParser.prototype.lexJSX = function () {\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\n\t        // < > / : = { }\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n\t            var value = this.scanner.source[this.scanner.index++];\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index - 1,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // \" '\n\t        if (cp === 34 || cp === 39) {\n\t            var start = this.scanner.index;\n\t            var quote = this.scanner.source[this.scanner.index++];\n\t            var str = '';\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source[this.scanner.index++];\n\t                if (ch === quote) {\n\t                    break;\n\t                }\n\t                else if (ch === '&') {\n\t                    str += this.scanXHTMLEntity(quote);\n\t                }\n\t                else {\n\t                    str += ch;\n\t                }\n\t            }\n\t            return {\n\t                type: 8 /* StringLiteral */,\n\t                value: str,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // ... or .\n\t        if (cp === 46) {\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\n\t            var start = this.scanner.index;\n\t            this.scanner.index += value.length;\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // `\n\t        if (cp === 96) {\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\n\t            return {\n\t                type: 10 /* Template */,\n\t                value: '',\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // Identifer can not contain backslash (char code 92).\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\n\t            var start = this.scanner.index;\n\t            ++this.scanner.index;\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\n\t                    ++this.scanner.index;\n\t                }\n\t                else if (ch === 45) {\n\t                    // Hyphen (char code 45) can be part of an identifier.\n\t                    ++this.scanner.index;\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\n\t            return {\n\t                type: 100 /* Identifier */,\n\t                value: id,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        return this.scanner.lex();\n\t    };\n\t    JSXParser.prototype.nextJSXToken = function () {\n\t        this.collectComments();\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = this.lexJSX();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        if (this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.nextJSXText = function () {\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var start = this.scanner.index;\n\t        var text = '';\n\t        while (!this.scanner.eof()) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === '{' || ch === '<') {\n\t                break;\n\t            }\n\t            ++this.scanner.index;\n\t            text += ch;\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.scanner.lineNumber;\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n\t                    ++this.scanner.index;\n\t                }\n\t                this.scanner.lineStart = this.scanner.index;\n\t            }\n\t        }\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = {\n\t            type: 101 /* Text */,\n\t            value: text,\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: this.scanner.lineStart,\n\t            start: start,\n\t            end: this.scanner.index\n\t        };\n\t        if ((text.length > 0) && this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.peekJSXToken = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.lexJSX();\n\t        this.scanner.restoreState(state);\n\t        return next;\n\t    };\n\t    // Expect the next JSX token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    JSXParser.prototype.expectJSX = function (value) {\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next JSX token matches the specified punctuator.\n\t    JSXParser.prototype.matchJSX = function (value) {\n\t        var next = this.peekJSXToken();\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\n\t    };\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 100 /* Identifier */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n\t    };\n\t    JSXParser.prototype.parseJSXElementName = function () {\n\t        var node = this.createJSXNode();\n\t        var elementName = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = elementName;\n\t            this.expectJSX(':');\n\t            var name_1 = this.parseJSXIdentifier();\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n\t        }\n\t        else if (this.matchJSX('.')) {\n\t            while (this.matchJSX('.')) {\n\t                var object = elementName;\n\t                this.expectJSX('.');\n\t                var property = this.parseJSXIdentifier();\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n\t            }\n\t        }\n\t        return elementName;\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\n\t        var node = this.createJSXNode();\n\t        var attributeName;\n\t        var identifier = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = identifier;\n\t            this.expectJSX(':');\n\t            var name_2 = this.parseJSXIdentifier();\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n\t        }\n\t        else {\n\t            attributeName = identifier;\n\t        }\n\t        return attributeName;\n\t    };\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 8 /* StringLiteral */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.finishJSX();\n\t        if (this.match('}')) {\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n\t        }\n\t        var expression = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n\t    };\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var name = this.parseJSXAttributeName();\n\t        var value = null;\n\t        if (this.matchJSX('=')) {\n\t            this.expectJSX('=');\n\t            value = this.parseJSXAttributeValue();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n\t    };\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.expectJSX('...');\n\t        this.finishJSX();\n\t        var argument = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributes = function () {\n\t        var attributes = [];\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\n\t                this.parseJSXNameValueAttribute();\n\t            attributes.push(attribute);\n\t        }\n\t        return attributes;\n\t    };\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        if (this.matchJSX('/')) {\n\t            this.expectJSX('/');\n\t            var name_3 = this.parseJSXElementName();\n\t            this.expectJSX('>');\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n\t        }\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\n\t        var node = this.createJSXChildNode();\n\t        this.collectComments();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        var expression;\n\t        if (this.matchJSX('}')) {\n\t            expression = this.parseJSXEmptyExpression();\n\t            this.expectJSX('}');\n\t        }\n\t        else {\n\t            this.finishJSX();\n\t            expression = this.parseAssignmentExpression();\n\t            this.reenterJSX();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXChildren = function () {\n\t        var children = [];\n\t        while (!this.scanner.eof()) {\n\t            var node = this.createJSXChildNode();\n\t            var token = this.nextJSXText();\n\t            if (token.start < token.end) {\n\t                var raw = this.getTokenRaw(token);\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n\t                children.push(child);\n\t            }\n\t            if (this.scanner.source[this.scanner.index] === '{') {\n\t                var container = this.parseJSXExpressionContainer();\n\t                children.push(container);\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return children;\n\t    };\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\n\t        var stack = [];\n\t        while (!this.scanner.eof()) {\n\t            el.children = el.children.concat(this.parseJSXChildren());\n\t            var node = this.createJSXChildNode();\n\t            var element = this.parseJSXBoundaryElement();\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n\t                var opening = element;\n\t                if (opening.selfClosing) {\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n\t                    el.children.push(child);\n\t                }\n\t                else {\n\t                    stack.push(el);\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\n\t                }\n\t            }\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n\t                el.closing = element;\n\t                var open_1 = getQualifiedElementName(el.opening.name);\n\t                var close_1 = getQualifiedElementName(el.closing.name);\n\t                if (open_1 !== close_1) {\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n\t                }\n\t                if (stack.length > 0) {\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n\t                    el = stack[stack.length - 1];\n\t                    el.children.push(child);\n\t                    stack.pop();\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t    JSXParser.prototype.parseJSXElement = function () {\n\t        var node = this.createJSXNode();\n\t        var opening = this.parseJSXOpeningElement();\n\t        var children = [];\n\t        var closing = null;\n\t        if (!opening.selfClosing) {\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\n\t            children = el.children;\n\t            closing = el.closing;\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n\t    };\n\t    JSXParser.prototype.parseJSXRoot = function () {\n\t        // Pop the opening '<' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t        this.startJSX();\n\t        var element = this.parseJSXElement();\n\t        this.finishJSX();\n\t        return element;\n\t    };\n\t    JSXParser.prototype.isStartOfExpression = function () {\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n\t    };\n\t    return JSXParser;\n\t}(parser_1.Parser));\n\texports.JSXParser = JSXParser;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// See also tools/generate-unicode-regex.js.\n\tvar Regex = {\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t};\n\texports.Character = {\n\t    /* tslint:disable:no-bitwise */\n\t    fromCodePoint: function (cp) {\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-white-space\n\t    isWhiteSpace: function (cp) {\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\n\t    isLineTerminator: function (cp) {\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    isIdentifierStart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    isIdentifierPart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    isDecimalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\n\t    },\n\t    isHexDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp >= 0x41 && cp <= 0x46) ||\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\n\t    },\n\t    isOctalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\t/* tslint:disable:max-classes-per-file */\n\tvar JSXClosingElement = (function () {\n\t    function JSXClosingElement(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n\t        this.name = name;\n\t    }\n\t    return JSXClosingElement;\n\t}());\n\texports.JSXClosingElement = JSXClosingElement;\n\tvar JSXElement = (function () {\n\t    function JSXElement(openingElement, children, closingElement) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n\t        this.openingElement = openingElement;\n\t        this.children = children;\n\t        this.closingElement = closingElement;\n\t    }\n\t    return JSXElement;\n\t}());\n\texports.JSXElement = JSXElement;\n\tvar JSXEmptyExpression = (function () {\n\t    function JSXEmptyExpression() {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n\t    }\n\t    return JSXEmptyExpression;\n\t}());\n\texports.JSXEmptyExpression = JSXEmptyExpression;\n\tvar JSXExpressionContainer = (function () {\n\t    function JSXExpressionContainer(expression) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n\t        this.expression = expression;\n\t    }\n\t    return JSXExpressionContainer;\n\t}());\n\texports.JSXExpressionContainer = JSXExpressionContainer;\n\tvar JSXIdentifier = (function () {\n\t    function JSXIdentifier(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n\t        this.name = name;\n\t    }\n\t    return JSXIdentifier;\n\t}());\n\texports.JSXIdentifier = JSXIdentifier;\n\tvar JSXMemberExpression = (function () {\n\t    function JSXMemberExpression(object, property) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return JSXMemberExpression;\n\t}());\n\texports.JSXMemberExpression = JSXMemberExpression;\n\tvar JSXAttribute = (function () {\n\t    function JSXAttribute(name, value) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n\t        this.name = name;\n\t        this.value = value;\n\t    }\n\t    return JSXAttribute;\n\t}());\n\texports.JSXAttribute = JSXAttribute;\n\tvar JSXNamespacedName = (function () {\n\t    function JSXNamespacedName(namespace, name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n\t        this.namespace = namespace;\n\t        this.name = name;\n\t    }\n\t    return JSXNamespacedName;\n\t}());\n\texports.JSXNamespacedName = JSXNamespacedName;\n\tvar JSXOpeningElement = (function () {\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n\t        this.name = name;\n\t        this.selfClosing = selfClosing;\n\t        this.attributes = attributes;\n\t    }\n\t    return JSXOpeningElement;\n\t}());\n\texports.JSXOpeningElement = JSXOpeningElement;\n\tvar JSXSpreadAttribute = (function () {\n\t    function JSXSpreadAttribute(argument) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n\t        this.argument = argument;\n\t    }\n\t    return JSXSpreadAttribute;\n\t}());\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\n\tvar JSXText = (function () {\n\t    function JSXText(value, raw) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return JSXText;\n\t}());\n\texports.JSXText = JSXText;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.JSXSyntax = {\n\t    JSXAttribute: 'JSXAttribute',\n\t    JSXClosingElement: 'JSXClosingElement',\n\t    JSXElement: 'JSXElement',\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\n\t    JSXIdentifier: 'JSXIdentifier',\n\t    JSXMemberExpression: 'JSXMemberExpression',\n\t    JSXNamespacedName: 'JSXNamespacedName',\n\t    JSXOpeningElement: 'JSXOpeningElement',\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\n\t    JSXText: 'JSXText'\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\t/* tslint:disable:max-classes-per-file */\n\tvar ArrayExpression = (function () {\n\t    function ArrayExpression(elements) {\n\t        this.type = syntax_1.Syntax.ArrayExpression;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayExpression;\n\t}());\n\texports.ArrayExpression = ArrayExpression;\n\tvar ArrayPattern = (function () {\n\t    function ArrayPattern(elements) {\n\t        this.type = syntax_1.Syntax.ArrayPattern;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayPattern;\n\t}());\n\texports.ArrayPattern = ArrayPattern;\n\tvar ArrowFunctionExpression = (function () {\n\t    function ArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = false;\n\t    }\n\t    return ArrowFunctionExpression;\n\t}());\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\n\tvar AssignmentExpression = (function () {\n\t    function AssignmentExpression(operator, left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentExpression;\n\t}());\n\texports.AssignmentExpression = AssignmentExpression;\n\tvar AssignmentPattern = (function () {\n\t    function AssignmentPattern(left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentPattern;\n\t}());\n\texports.AssignmentPattern = AssignmentPattern;\n\tvar AsyncArrowFunctionExpression = (function () {\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = true;\n\t    }\n\t    return AsyncArrowFunctionExpression;\n\t}());\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\tvar AsyncFunctionDeclaration = (function () {\n\t    function AsyncFunctionDeclaration(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionDeclaration;\n\t}());\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\tvar AsyncFunctionExpression = (function () {\n\t    function AsyncFunctionExpression(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionExpression;\n\t}());\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\n\tvar AwaitExpression = (function () {\n\t    function AwaitExpression(argument) {\n\t        this.type = syntax_1.Syntax.AwaitExpression;\n\t        this.argument = argument;\n\t    }\n\t    return AwaitExpression;\n\t}());\n\texports.AwaitExpression = AwaitExpression;\n\tvar BinaryExpression = (function () {\n\t    function BinaryExpression(operator, left, right) {\n\t        var logical = (operator === '||' || operator === '&&');\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return BinaryExpression;\n\t}());\n\texports.BinaryExpression = BinaryExpression;\n\tvar BlockStatement = (function () {\n\t    function BlockStatement(body) {\n\t        this.type = syntax_1.Syntax.BlockStatement;\n\t        this.body = body;\n\t    }\n\t    return BlockStatement;\n\t}());\n\texports.BlockStatement = BlockStatement;\n\tvar BreakStatement = (function () {\n\t    function BreakStatement(label) {\n\t        this.type = syntax_1.Syntax.BreakStatement;\n\t        this.label = label;\n\t    }\n\t    return BreakStatement;\n\t}());\n\texports.BreakStatement = BreakStatement;\n\tvar CallExpression = (function () {\n\t    function CallExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.CallExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return CallExpression;\n\t}());\n\texports.CallExpression = CallExpression;\n\tvar CatchClause = (function () {\n\t    function CatchClause(param, body) {\n\t        this.type = syntax_1.Syntax.CatchClause;\n\t        this.param = param;\n\t        this.body = body;\n\t    }\n\t    return CatchClause;\n\t}());\n\texports.CatchClause = CatchClause;\n\tvar ClassBody = (function () {\n\t    function ClassBody(body) {\n\t        this.type = syntax_1.Syntax.ClassBody;\n\t        this.body = body;\n\t    }\n\t    return ClassBody;\n\t}());\n\texports.ClassBody = ClassBody;\n\tvar ClassDeclaration = (function () {\n\t    function ClassDeclaration(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassDeclaration;\n\t}());\n\texports.ClassDeclaration = ClassDeclaration;\n\tvar ClassExpression = (function () {\n\t    function ClassExpression(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassExpression;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassExpression;\n\t}());\n\texports.ClassExpression = ClassExpression;\n\tvar ComputedMemberExpression = (function () {\n\t    function ComputedMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = true;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return ComputedMemberExpression;\n\t}());\n\texports.ComputedMemberExpression = ComputedMemberExpression;\n\tvar ConditionalExpression = (function () {\n\t    function ConditionalExpression(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return ConditionalExpression;\n\t}());\n\texports.ConditionalExpression = ConditionalExpression;\n\tvar ContinueStatement = (function () {\n\t    function ContinueStatement(label) {\n\t        this.type = syntax_1.Syntax.ContinueStatement;\n\t        this.label = label;\n\t    }\n\t    return ContinueStatement;\n\t}());\n\texports.ContinueStatement = ContinueStatement;\n\tvar DebuggerStatement = (function () {\n\t    function DebuggerStatement() {\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\n\t    }\n\t    return DebuggerStatement;\n\t}());\n\texports.DebuggerStatement = DebuggerStatement;\n\tvar Directive = (function () {\n\t    function Directive(expression, directive) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t        this.directive = directive;\n\t    }\n\t    return Directive;\n\t}());\n\texports.Directive = Directive;\n\tvar DoWhileStatement = (function () {\n\t    function DoWhileStatement(body, test) {\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\n\t        this.body = body;\n\t        this.test = test;\n\t    }\n\t    return DoWhileStatement;\n\t}());\n\texports.DoWhileStatement = DoWhileStatement;\n\tvar EmptyStatement = (function () {\n\t    function EmptyStatement() {\n\t        this.type = syntax_1.Syntax.EmptyStatement;\n\t    }\n\t    return EmptyStatement;\n\t}());\n\texports.EmptyStatement = EmptyStatement;\n\tvar ExportAllDeclaration = (function () {\n\t    function ExportAllDeclaration(source) {\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\n\t        this.source = source;\n\t    }\n\t    return ExportAllDeclaration;\n\t}());\n\texports.ExportAllDeclaration = ExportAllDeclaration;\n\tvar ExportDefaultDeclaration = (function () {\n\t    function ExportDefaultDeclaration(declaration) {\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n\t        this.declaration = declaration;\n\t    }\n\t    return ExportDefaultDeclaration;\n\t}());\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\tvar ExportNamedDeclaration = (function () {\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\n\t        this.declaration = declaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ExportNamedDeclaration;\n\t}());\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\n\tvar ExportSpecifier = (function () {\n\t    function ExportSpecifier(local, exported) {\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\n\t        this.exported = exported;\n\t        this.local = local;\n\t    }\n\t    return ExportSpecifier;\n\t}());\n\texports.ExportSpecifier = ExportSpecifier;\n\tvar ExpressionStatement = (function () {\n\t    function ExpressionStatement(expression) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t    }\n\t    return ExpressionStatement;\n\t}());\n\texports.ExpressionStatement = ExpressionStatement;\n\tvar ForInStatement = (function () {\n\t    function ForInStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForInStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t        this.each = false;\n\t    }\n\t    return ForInStatement;\n\t}());\n\texports.ForInStatement = ForInStatement;\n\tvar ForOfStatement = (function () {\n\t    function ForOfStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForOfStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t    }\n\t    return ForOfStatement;\n\t}());\n\texports.ForOfStatement = ForOfStatement;\n\tvar ForStatement = (function () {\n\t    function ForStatement(init, test, update, body) {\n\t        this.type = syntax_1.Syntax.ForStatement;\n\t        this.init = init;\n\t        this.test = test;\n\t        this.update = update;\n\t        this.body = body;\n\t    }\n\t    return ForStatement;\n\t}());\n\texports.ForStatement = ForStatement;\n\tvar FunctionDeclaration = (function () {\n\t    function FunctionDeclaration(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionDeclaration;\n\t}());\n\texports.FunctionDeclaration = FunctionDeclaration;\n\tvar FunctionExpression = (function () {\n\t    function FunctionExpression(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionExpression;\n\t}());\n\texports.FunctionExpression = FunctionExpression;\n\tvar Identifier = (function () {\n\t    function Identifier(name) {\n\t        this.type = syntax_1.Syntax.Identifier;\n\t        this.name = name;\n\t    }\n\t    return Identifier;\n\t}());\n\texports.Identifier = Identifier;\n\tvar IfStatement = (function () {\n\t    function IfStatement(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.IfStatement;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return IfStatement;\n\t}());\n\texports.IfStatement = IfStatement;\n\tvar ImportDeclaration = (function () {\n\t    function ImportDeclaration(specifiers, source) {\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ImportDeclaration;\n\t}());\n\texports.ImportDeclaration = ImportDeclaration;\n\tvar ImportDefaultSpecifier = (function () {\n\t    function ImportDefaultSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportDefaultSpecifier;\n\t}());\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\tvar ImportNamespaceSpecifier = (function () {\n\t    function ImportNamespaceSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportNamespaceSpecifier;\n\t}());\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\tvar ImportSpecifier = (function () {\n\t    function ImportSpecifier(local, imported) {\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\n\t        this.local = local;\n\t        this.imported = imported;\n\t    }\n\t    return ImportSpecifier;\n\t}());\n\texports.ImportSpecifier = ImportSpecifier;\n\tvar LabeledStatement = (function () {\n\t    function LabeledStatement(label, body) {\n\t        this.type = syntax_1.Syntax.LabeledStatement;\n\t        this.label = label;\n\t        this.body = body;\n\t    }\n\t    return LabeledStatement;\n\t}());\n\texports.LabeledStatement = LabeledStatement;\n\tvar Literal = (function () {\n\t    function Literal(value, raw) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return Literal;\n\t}());\n\texports.Literal = Literal;\n\tvar MetaProperty = (function () {\n\t    function MetaProperty(meta, property) {\n\t        this.type = syntax_1.Syntax.MetaProperty;\n\t        this.meta = meta;\n\t        this.property = property;\n\t    }\n\t    return MetaProperty;\n\t}());\n\texports.MetaProperty = MetaProperty;\n\tvar MethodDefinition = (function () {\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\n\t        this.type = syntax_1.Syntax.MethodDefinition;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.static = isStatic;\n\t    }\n\t    return MethodDefinition;\n\t}());\n\texports.MethodDefinition = MethodDefinition;\n\tvar Module = (function () {\n\t    function Module(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'module';\n\t    }\n\t    return Module;\n\t}());\n\texports.Module = Module;\n\tvar NewExpression = (function () {\n\t    function NewExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.NewExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return NewExpression;\n\t}());\n\texports.NewExpression = NewExpression;\n\tvar ObjectExpression = (function () {\n\t    function ObjectExpression(properties) {\n\t        this.type = syntax_1.Syntax.ObjectExpression;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectExpression;\n\t}());\n\texports.ObjectExpression = ObjectExpression;\n\tvar ObjectPattern = (function () {\n\t    function ObjectPattern(properties) {\n\t        this.type = syntax_1.Syntax.ObjectPattern;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectPattern;\n\t}());\n\texports.ObjectPattern = ObjectPattern;\n\tvar Property = (function () {\n\t    function Property(kind, key, computed, value, method, shorthand) {\n\t        this.type = syntax_1.Syntax.Property;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.method = method;\n\t        this.shorthand = shorthand;\n\t    }\n\t    return Property;\n\t}());\n\texports.Property = Property;\n\tvar RegexLiteral = (function () {\n\t    function RegexLiteral(value, raw, pattern, flags) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t        this.regex = { pattern: pattern, flags: flags };\n\t    }\n\t    return RegexLiteral;\n\t}());\n\texports.RegexLiteral = RegexLiteral;\n\tvar RestElement = (function () {\n\t    function RestElement(argument) {\n\t        this.type = syntax_1.Syntax.RestElement;\n\t        this.argument = argument;\n\t    }\n\t    return RestElement;\n\t}());\n\texports.RestElement = RestElement;\n\tvar ReturnStatement = (function () {\n\t    function ReturnStatement(argument) {\n\t        this.type = syntax_1.Syntax.ReturnStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ReturnStatement;\n\t}());\n\texports.ReturnStatement = ReturnStatement;\n\tvar Script = (function () {\n\t    function Script(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'script';\n\t    }\n\t    return Script;\n\t}());\n\texports.Script = Script;\n\tvar SequenceExpression = (function () {\n\t    function SequenceExpression(expressions) {\n\t        this.type = syntax_1.Syntax.SequenceExpression;\n\t        this.expressions = expressions;\n\t    }\n\t    return SequenceExpression;\n\t}());\n\texports.SequenceExpression = SequenceExpression;\n\tvar SpreadElement = (function () {\n\t    function SpreadElement(argument) {\n\t        this.type = syntax_1.Syntax.SpreadElement;\n\t        this.argument = argument;\n\t    }\n\t    return SpreadElement;\n\t}());\n\texports.SpreadElement = SpreadElement;\n\tvar StaticMemberExpression = (function () {\n\t    function StaticMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = false;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return StaticMemberExpression;\n\t}());\n\texports.StaticMemberExpression = StaticMemberExpression;\n\tvar Super = (function () {\n\t    function Super() {\n\t        this.type = syntax_1.Syntax.Super;\n\t    }\n\t    return Super;\n\t}());\n\texports.Super = Super;\n\tvar SwitchCase = (function () {\n\t    function SwitchCase(test, consequent) {\n\t        this.type = syntax_1.Syntax.SwitchCase;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t    }\n\t    return SwitchCase;\n\t}());\n\texports.SwitchCase = SwitchCase;\n\tvar SwitchStatement = (function () {\n\t    function SwitchStatement(discriminant, cases) {\n\t        this.type = syntax_1.Syntax.SwitchStatement;\n\t        this.discriminant = discriminant;\n\t        this.cases = cases;\n\t    }\n\t    return SwitchStatement;\n\t}());\n\texports.SwitchStatement = SwitchStatement;\n\tvar TaggedTemplateExpression = (function () {\n\t    function TaggedTemplateExpression(tag, quasi) {\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\n\t        this.tag = tag;\n\t        this.quasi = quasi;\n\t    }\n\t    return TaggedTemplateExpression;\n\t}());\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\n\tvar TemplateElement = (function () {\n\t    function TemplateElement(value, tail) {\n\t        this.type = syntax_1.Syntax.TemplateElement;\n\t        this.value = value;\n\t        this.tail = tail;\n\t    }\n\t    return TemplateElement;\n\t}());\n\texports.TemplateElement = TemplateElement;\n\tvar TemplateLiteral = (function () {\n\t    function TemplateLiteral(quasis, expressions) {\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\n\t        this.quasis = quasis;\n\t        this.expressions = expressions;\n\t    }\n\t    return TemplateLiteral;\n\t}());\n\texports.TemplateLiteral = TemplateLiteral;\n\tvar ThisExpression = (function () {\n\t    function ThisExpression() {\n\t        this.type = syntax_1.Syntax.ThisExpression;\n\t    }\n\t    return ThisExpression;\n\t}());\n\texports.ThisExpression = ThisExpression;\n\tvar ThrowStatement = (function () {\n\t    function ThrowStatement(argument) {\n\t        this.type = syntax_1.Syntax.ThrowStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ThrowStatement;\n\t}());\n\texports.ThrowStatement = ThrowStatement;\n\tvar TryStatement = (function () {\n\t    function TryStatement(block, handler, finalizer) {\n\t        this.type = syntax_1.Syntax.TryStatement;\n\t        this.block = block;\n\t        this.handler = handler;\n\t        this.finalizer = finalizer;\n\t    }\n\t    return TryStatement;\n\t}());\n\texports.TryStatement = TryStatement;\n\tvar UnaryExpression = (function () {\n\t    function UnaryExpression(operator, argument) {\n\t        this.type = syntax_1.Syntax.UnaryExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = true;\n\t    }\n\t    return UnaryExpression;\n\t}());\n\texports.UnaryExpression = UnaryExpression;\n\tvar UpdateExpression = (function () {\n\t    function UpdateExpression(operator, argument, prefix) {\n\t        this.type = syntax_1.Syntax.UpdateExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = prefix;\n\t    }\n\t    return UpdateExpression;\n\t}());\n\texports.UpdateExpression = UpdateExpression;\n\tvar VariableDeclaration = (function () {\n\t    function VariableDeclaration(declarations, kind) {\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\n\t        this.declarations = declarations;\n\t        this.kind = kind;\n\t    }\n\t    return VariableDeclaration;\n\t}());\n\texports.VariableDeclaration = VariableDeclaration;\n\tvar VariableDeclarator = (function () {\n\t    function VariableDeclarator(id, init) {\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\n\t        this.id = id;\n\t        this.init = init;\n\t    }\n\t    return VariableDeclarator;\n\t}());\n\texports.VariableDeclarator = VariableDeclarator;\n\tvar WhileStatement = (function () {\n\t    function WhileStatement(test, body) {\n\t        this.type = syntax_1.Syntax.WhileStatement;\n\t        this.test = test;\n\t        this.body = body;\n\t    }\n\t    return WhileStatement;\n\t}());\n\texports.WhileStatement = WhileStatement;\n\tvar WithStatement = (function () {\n\t    function WithStatement(object, body) {\n\t        this.type = syntax_1.Syntax.WithStatement;\n\t        this.object = object;\n\t        this.body = body;\n\t    }\n\t    return WithStatement;\n\t}());\n\texports.WithStatement = WithStatement;\n\tvar YieldExpression = (function () {\n\t    function YieldExpression(argument, delegate) {\n\t        this.type = syntax_1.Syntax.YieldExpression;\n\t        this.argument = argument;\n\t        this.delegate = delegate;\n\t    }\n\t    return YieldExpression;\n\t}());\n\texports.YieldExpression = YieldExpression;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar messages_1 = __webpack_require__(11);\n\tvar Node = __webpack_require__(7);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar syntax_1 = __webpack_require__(2);\n\tvar token_1 = __webpack_require__(13);\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\tvar Parser = (function () {\n\t    function Parser(code, options, delegate) {\n\t        if (options === void 0) { options = {}; }\n\t        this.config = {\n\t            range: (typeof options.range === 'boolean') && options.range,\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\n\t            source: null,\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\n\t        };\n\t        if (this.config.loc && options.source && options.source !== null) {\n\t            this.config.source = String(options.source);\n\t        }\n\t        this.delegate = delegate;\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = this.config.tolerant;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = this.config.comment;\n\t        this.operatorPrecedence = {\n\t            ')': 0,\n\t            ';': 0,\n\t            ',': 0,\n\t            '=': 0,\n\t            ']': 0,\n\t            '||': 1,\n\t            '&&': 2,\n\t            '|': 3,\n\t            '^': 4,\n\t            '&': 5,\n\t            '==': 6,\n\t            '!=': 6,\n\t            '===': 6,\n\t            '!==': 6,\n\t            '<': 7,\n\t            '>': 7,\n\t            '<=': 7,\n\t            '>=': 7,\n\t            '<<': 8,\n\t            '>>': 8,\n\t            '>>>': 8,\n\t            '+': 9,\n\t            '-': 9,\n\t            '*': 11,\n\t            '/': 11,\n\t            '%': 11\n\t        };\n\t        this.lookahead = {\n\t            type: 2 /* EOF */,\n\t            value: '',\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: 0,\n\t            start: 0,\n\t            end: 0\n\t        };\n\t        this.hasLineTerminator = false;\n\t        this.context = {\n\t            isModule: false,\n\t            await: false,\n\t            allowIn: true,\n\t            allowStrictDirective: true,\n\t            allowYield: true,\n\t            firstCoverInitializedNameError: null,\n\t            isAssignmentTarget: false,\n\t            isBindingElement: false,\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            labelSet: {},\n\t            strict: false\n\t        };\n\t        this.tokens = [];\n\t        this.startMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.lastMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.nextToken();\n\t        this.lastMarker = {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    }\n\t    Parser.prototype.throwError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.lastMarker.line;\n\t        var column = this.lastMarker.column + 1;\n\t        throw this.errorHandler.createError(index, line, column, msg);\n\t    };\n\t    Parser.prototype.tolerateError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.scanner.lineNumber;\n\t        var column = this.lastMarker.column + 1;\n\t        this.errorHandler.tolerateError(index, line, column, msg);\n\t    };\n\t    // Throw an exception because of the token.\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\n\t        var value;\n\t        if (token) {\n\t            if (!message) {\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\n\t                                    messages_1.Messages.UnexpectedToken;\n\t                if (token.type === 4 /* Keyword */) {\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.UnexpectedReserved;\n\t                    }\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.StrictReservedWord;\n\t                    }\n\t                }\n\t            }\n\t            value = token.value;\n\t        }\n\t        else {\n\t            value = 'ILLEGAL';\n\t        }\n\t        msg = msg.replace('%0', value);\n\t        if (token && typeof token.lineNumber === 'number') {\n\t            var index = token.start;\n\t            var line = token.lineNumber;\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n\t            var column = token.start - lastMarkerLineStart + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t        else {\n\t            var index = this.lastMarker.index;\n\t            var line = this.lastMarker.line;\n\t            var column = this.lastMarker.column + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t    };\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\n\t        throw this.unexpectedTokenError(token, message);\n\t    };\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n\t    };\n\t    Parser.prototype.collectComments = function () {\n\t        if (!this.config.comment) {\n\t            this.scanner.scanComments();\n\t        }\n\t        else {\n\t            var comments = this.scanner.scanComments();\n\t            if (comments.length > 0 && this.delegate) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var node = void 0;\n\t                    node = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\n\t                    };\n\t                    if (this.config.range) {\n\t                        node.range = e.range;\n\t                    }\n\t                    if (this.config.loc) {\n\t                        node.loc = e.loc;\n\t                    }\n\t                    var metadata = {\n\t                        start: {\n\t                            line: e.loc.start.line,\n\t                            column: e.loc.start.column,\n\t                            offset: e.range[0]\n\t                        },\n\t                        end: {\n\t                            line: e.loc.end.line,\n\t                            column: e.loc.end.column,\n\t                            offset: e.range[1]\n\t                        }\n\t                    };\n\t                    this.delegate(node, metadata);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    // From internal representation to an external structure\n\t    Parser.prototype.getTokenRaw = function (token) {\n\t        return this.scanner.source.slice(token.start, token.end);\n\t    };\n\t    Parser.prototype.convertToken = function (token) {\n\t        var t = {\n\t            type: token_1.TokenName[token.type],\n\t            value: this.getTokenRaw(token)\n\t        };\n\t        if (this.config.range) {\n\t            t.range = [token.start, token.end];\n\t        }\n\t        if (this.config.loc) {\n\t            t.loc = {\n\t                start: {\n\t                    line: this.startMarker.line,\n\t                    column: this.startMarker.column\n\t                },\n\t                end: {\n\t                    line: this.scanner.lineNumber,\n\t                    column: this.scanner.index - this.scanner.lineStart\n\t                }\n\t            };\n\t        }\n\t        if (token.type === 9 /* RegularExpression */) {\n\t            var pattern = token.pattern;\n\t            var flags = token.flags;\n\t            t.regex = { pattern: pattern, flags: flags };\n\t        }\n\t        return t;\n\t    };\n\t    Parser.prototype.nextToken = function () {\n\t        var token = this.lookahead;\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        this.collectComments();\n\t        if (this.scanner.index !== this.startMarker.index) {\n\t            this.startMarker.index = this.scanner.index;\n\t            this.startMarker.line = this.scanner.lineNumber;\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        }\n\t        var next = this.scanner.lex();\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\n\t                next.type = 4 /* Keyword */;\n\t            }\n\t        }\n\t        this.lookahead = next;\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\n\t            this.tokens.push(this.convertToken(next));\n\t        }\n\t        return token;\n\t    };\n\t    Parser.prototype.nextRegexToken = function () {\n\t        this.collectComments();\n\t        var token = this.scanner.scanRegExp();\n\t        if (this.config.tokens) {\n\t            // Pop the previous token, '/' or '/='\n\t            // This is added from the lookahead token.\n\t            this.tokens.pop();\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        // Prime the next lookahead.\n\t        this.lookahead = token;\n\t        this.nextToken();\n\t        return token;\n\t    };\n\t    Parser.prototype.createNode = function () {\n\t        return {\n\t            index: this.startMarker.index,\n\t            line: this.startMarker.line,\n\t            column: this.startMarker.column\n\t        };\n\t    };\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\n\t        var column = token.start - token.lineStart;\n\t        var line = token.lineNumber;\n\t        if (column < 0) {\n\t            column += lastLineStart;\n\t            line--;\n\t        }\n\t        return {\n\t            index: token.start,\n\t            line: line,\n\t            column: column\n\t        };\n\t    };\n\t    Parser.prototype.finalize = function (marker, node) {\n\t        if (this.config.range) {\n\t            node.range = [marker.index, this.lastMarker.index];\n\t        }\n\t        if (this.config.loc) {\n\t            node.loc = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column\n\t                }\n\t            };\n\t            if (this.config.source) {\n\t                node.loc.source = this.config.source;\n\t            }\n\t        }\n\t        if (this.delegate) {\n\t            var metadata = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                    offset: marker.index\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column,\n\t                    offset: this.lastMarker.index\n\t                }\n\t            };\n\t            this.delegate(node, metadata);\n\t        }\n\t        return node;\n\t    };\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expect = function (value) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\t    Parser.prototype.expectCommaSeparator = function () {\n\t        if (this.config.tolerant) {\n\t            var token = this.lookahead;\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\n\t                this.nextToken();\n\t            }\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\n\t                this.nextToken();\n\t                this.tolerateUnexpectedToken(token);\n\t            }\n\t            else {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n\t            }\n\t        }\n\t        else {\n\t            this.expect(',');\n\t        }\n\t    };\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expectKeyword = function (keyword) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next token matches the specified punctuator.\n\t    Parser.prototype.match = function (value) {\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n\t    };\n\t    // Return true if the next token matches the specified keyword\n\t    Parser.prototype.matchKeyword = function (keyword) {\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token matches the specified contextual keyword\n\t    // (where an identifier is sometimes a keyword depending on the context)\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token is an assignment operator\n\t    Parser.prototype.matchAssign = function () {\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\n\t            return false;\n\t        }\n\t        var op = this.lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '**=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    };\n\t    // Cover grammar support.\n\t    //\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n\t    //\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\n\t    // after the outermost pair is closed. They are:\n\t    //\n\t    //   1. AssignmentExpression\n\t    //   2. BindingElements\n\t    //   3. AssignmentTargets\n\t    //\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n\t    // binding element or assignment target.\n\t    //\n\t    // The three productions have the relationship:\n\t    //\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n\t    //\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n\t    //\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n\t    // the CoverInitializedName check is conducted.\n\t    //\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n\t    // pattern. The CoverInitializedName check is deferred.\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        if (this.context.firstCoverInitializedNameError !== null) {\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n\t        }\n\t        this.context.isBindingElement = previousIsBindingElement;\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.consumeSemicolon = function () {\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else if (!this.hasLineTerminator) {\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.lastMarker.index = this.startMarker.index;\n\t            this.lastMarker.line = this.startMarker.line;\n\t            this.lastMarker.column = this.startMarker.column;\n\t        }\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\n\t    Parser.prototype.parsePrimaryExpression = function () {\n\t        var node = this.createNode();\n\t        var expr;\n\t        var token, raw;\n\t        switch (this.lookahead.type) {\n\t            case 3 /* Identifier */:\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n\t                    this.tolerateUnexpectedToken(this.lookahead);\n\t                }\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                break;\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t                if (this.context.strict && this.lookahead.octal) {\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 1 /* BooleanLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n\t                break;\n\t            case 5 /* NullLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\n\t                break;\n\t            case 10 /* Template */:\n\t                expr = this.parseTemplateLiteral();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                switch (this.lookahead.value) {\n\t                    case '(':\n\t                        this.context.isBindingElement = false;\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\n\t                        break;\n\t                    case '[':\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n\t                        break;\n\t                    case '{':\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n\t                        break;\n\t                    case '/':\n\t                    case '/=':\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                        this.scanner.index = this.startMarker.index;\n\t                        token = this.nextRegexToken();\n\t                        raw = this.getTokenRaw(token);\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n\t                        break;\n\t                    default:\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                }\n\t                break;\n\t            case 4 /* Keyword */:\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n\t                    expr = this.parseIdentifierName();\n\t                }\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                }\n\t                else {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    if (this.matchKeyword('function')) {\n\t                        expr = this.parseFunctionExpression();\n\t                    }\n\t                    else if (this.matchKeyword('this')) {\n\t                        this.nextToken();\n\t                        expr = this.finalize(node, new Node.ThisExpression());\n\t                    }\n\t                    else if (this.matchKeyword('class')) {\n\t                        expr = this.parseClassExpression();\n\t                    }\n\t                    else {\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                    }\n\t                }\n\t                break;\n\t            default:\n\t                expr = this.throwUnexpectedToken(this.nextToken());\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\n\t    Parser.prototype.parseSpreadElement = function () {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t        return this.finalize(node, new Node.SpreadElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayInitializer = function () {\n\t        var node = this.createNode();\n\t        var elements = [];\n\t        this.expect('[');\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else if (this.match('...')) {\n\t                var element = this.parseSpreadElement();\n\t                if (!this.match(']')) {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    this.expect(',');\n\t                }\n\t                elements.push(element);\n\t            }\n\t            else {\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\n\t    Parser.prototype.parsePropertyMethod = function (params) {\n\t        this.context.isAssignmentTarget = false;\n\t        this.context.isBindingElement = false;\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = params.simple;\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\t        if (this.context.strict && params.firstRestricted) {\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n\t        }\n\t        if (this.context.strict && params.stricted) {\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        return body;\n\t    };\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\n\t        var isGenerator = false;\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        var previousAwait = this.context.await;\n\t        this.context.allowYield = false;\n\t        this.context.await = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        this.context.await = previousAwait;\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n\t    };\n\t    Parser.prototype.parseObjectPropertyKey = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var key;\n\t        switch (token.type) {\n\t            case 8 /* StringLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t                if (this.context.strict && token.octal) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                var raw = this.getTokenRaw(token);\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 3 /* Identifier */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 4 /* Keyword */:\n\t                key = this.finalize(node, new Node.Identifier(token.value));\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                if (token.value === '[') {\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    this.expect(']');\n\t                }\n\t                else {\n\t                    key = this.throwUnexpectedToken(token);\n\t                }\n\t                break;\n\t            default:\n\t                key = this.throwUnexpectedToken(token);\n\t        }\n\t        return key;\n\t    };\n\t    Parser.prototype.isPropertyKey = function (key, value) {\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\n\t    };\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\n\t        var node = this.createNode();\n\t        var token = this.lookahead;\n\t        var kind;\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var shorthand = false;\n\t        var isAsync = false;\n\t        if (token.type === 3 /* Identifier */) {\n\t            var id = token.value;\n\t            this.nextToken();\n\t            computed = this.match('[');\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n\t        }\n\t        else if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n\t            kind = 'get';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.context.allowYield = false;\n\t            value = this.parseGetterMethod();\n\t        }\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n\t            kind = 'set';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseSetterMethod();\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        else {\n\t            if (!key) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            kind = 'init';\n\t            if (this.match(':') && !isAsync) {\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\n\t                    if (hasProto.value) {\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n\t                    }\n\t                    hasProto.value = true;\n\t                }\n\t                this.nextToken();\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t            }\n\t            else if (this.match('(')) {\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t                method = true;\n\t            }\n\t            else if (token.type === 3 /* Identifier */) {\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\n\t                if (this.match('=')) {\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\n\t                    this.nextToken();\n\t                    shorthand = true;\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\n\t                }\n\t                else {\n\t                    shorthand = true;\n\t                    value = id;\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectInitializer = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var properties = [];\n\t        var hasProto = { value: false };\n\t        while (!this.match('}')) {\n\t            properties.push(this.parseObjectProperty(hasProto));\n\t            if (!this.match('}')) {\n\t                this.expectCommaSeparator();\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\n\t    Parser.prototype.parseTemplateHead = function () {\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateElement = function () {\n\t        if (this.lookahead.type !== 10 /* Template */) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateLiteral = function () {\n\t        var node = this.createNode();\n\t        var expressions = [];\n\t        var quasis = [];\n\t        var quasi = this.parseTemplateHead();\n\t        quasis.push(quasi);\n\t        while (!quasi.tail) {\n\t            expressions.push(this.parseExpression());\n\t            quasi = this.parseTemplateElement();\n\t            quasis.push(quasi);\n\t        }\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t            case syntax_1.Syntax.MemberExpression:\n\t            case syntax_1.Syntax.RestElement:\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                break;\n\t            case syntax_1.Syntax.SpreadElement:\n\t                expr.type = syntax_1.Syntax.RestElement;\n\t                this.reinterpretExpressionAsPattern(expr.argument);\n\t                break;\n\t            case syntax_1.Syntax.ArrayExpression:\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\n\t                for (var i = 0; i < expr.elements.length; i++) {\n\t                    if (expr.elements[i] !== null) {\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectExpression:\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\n\t                for (var i = 0; i < expr.properties.length; i++) {\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.AssignmentExpression:\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\n\t                delete expr.operator;\n\t                this.reinterpretExpressionAsPattern(expr.left);\n\t                break;\n\t            default:\n\t                // Allow other node type for tolerant parsing.\n\t                break;\n\t        }\n\t    };\n\t    Parser.prototype.parseGroupExpression = function () {\n\t        var expr;\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.nextToken();\n\t            if (!this.match('=>')) {\n\t                this.expect('=>');\n\t            }\n\t            expr = {\n\t                type: ArrowParameterPlaceHolder,\n\t                params: [],\n\t                async: false\n\t            };\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var params = [];\n\t            if (this.match('...')) {\n\t                expr = this.parseRestElement(params);\n\t                this.expect(')');\n\t                if (!this.match('=>')) {\n\t                    this.expect('=>');\n\t                }\n\t                expr = {\n\t                    type: ArrowParameterPlaceHolder,\n\t                    params: [expr],\n\t                    async: false\n\t                };\n\t            }\n\t            else {\n\t                var arrow = false;\n\t                this.context.isBindingElement = true;\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                if (this.match(',')) {\n\t                    var expressions = [];\n\t                    this.context.isAssignmentTarget = false;\n\t                    expressions.push(expr);\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\n\t                        if (!this.match(',')) {\n\t                            break;\n\t                        }\n\t                        this.nextToken();\n\t                        if (this.match(')')) {\n\t                            this.nextToken();\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else if (this.match('...')) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            expressions.push(this.parseRestElement(params));\n\t                            this.expect(')');\n\t                            if (!this.match('=>')) {\n\t                                this.expect('=>');\n\t                            }\n\t                            this.context.isBindingElement = false;\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else {\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        if (arrow) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!arrow) {\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t                    }\n\t                }\n\t                if (!arrow) {\n\t                    this.expect(')');\n\t                    if (this.match('=>')) {\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: [expr],\n\t                                async: false\n\t                            };\n\t                        }\n\t                        if (!arrow) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\n\t                                }\n\t                            }\n\t                            else {\n\t                                this.reinterpretExpressionAsPattern(expr);\n\t                            }\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: parameters,\n\t                                async: false\n\t                            };\n\t                        }\n\t                    }\n\t                    this.context.isBindingElement = false;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\t    Parser.prototype.parseArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.isIdentifierName = function (token) {\n\t        return token.type === 3 /* Identifier */ ||\n\t            token.type === 4 /* Keyword */ ||\n\t            token.type === 1 /* BooleanLiteral */ ||\n\t            token.type === 5 /* NullLiteral */;\n\t    };\n\t    Parser.prototype.parseIdentifierName = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (!this.isIdentifierName(token)) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseNewExpression = function () {\n\t        var node = this.createNode();\n\t        var id = this.parseIdentifierName();\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n\t        var expr;\n\t        if (this.match('.')) {\n\t            this.nextToken();\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\n\t                var property = this.parseIdentifierName();\n\t                expr = new Node.MetaProperty(id, property);\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n\t            var args = this.match('(') ? this.parseArguments() : [];\n\t            expr = new Node.NewExpression(callee, args);\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return this.finalize(node, expr);\n\t    };\n\t    Parser.prototype.parseAsyncArgument = function () {\n\t        var arg = this.parseAssignmentExpression();\n\t        this.context.firstCoverInitializedNameError = null;\n\t        return arg;\n\t    };\n\t    Parser.prototype.parseAsyncArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n\t        var startToken = this.lookahead;\n\t        var maybeAsync = this.matchContextualKeyword('async');\n\t        var previousAllowIn = this.context.allowIn;\n\t        this.context.allowIn = true;\n\t        var expr;\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\n\t            expr = this.createNode();\n\t            this.nextToken();\n\t            expr = this.finalize(expr, new Node.Super());\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        }\n\t        while (true) {\n\t            if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('(')) {\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = false;\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\t                if (asyncArrow && this.match('=>')) {\n\t                    for (var i = 0; i < args.length; ++i) {\n\t                        this.reinterpretExpressionAsPattern(args[i]);\n\t                    }\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: args,\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            else if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.context.allowIn = previousAllowIn;\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseSuper = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('super');\n\t        if (!this.match('[') && !this.match('.')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return this.finalize(node, new Node.Super());\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n\t        var node = this.startNode(this.lookahead);\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        while (true) {\n\t            if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\n\t    Parser.prototype.parseUpdateExpression = function () {\n\t        var expr;\n\t        var startToken = this.lookahead;\n\t        if (this.match('++') || this.match('--')) {\n\t            var node = this.startNode(startToken);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n\t            }\n\t            if (!this.context.isAssignmentTarget) {\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t            }\n\t            var prefix = true;\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n\t                if (this.match('++') || this.match('--')) {\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n\t                    }\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    var operator = this.nextToken().value;\n\t                    var prefix = false;\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\n\t    Parser.prototype.parseAwaitExpression = function () {\n\t        var node = this.createNode();\n\t        this.nextToken();\n\t        var argument = this.parseUnaryExpression();\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\n\t    };\n\t    Parser.prototype.parseUnaryExpression = function () {\n\t        var expr;\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n\t            var node = this.startNode(this.lookahead);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\n\t            }\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\n\t            expr = this.parseAwaitExpression();\n\t        }\n\t        else {\n\t            expr = this.parseUpdateExpression();\n\t        }\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseExponentiationExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\t    Parser.prototype.binaryPrecedence = function (token) {\n\t        var op = token.value;\n\t        var precedence;\n\t        if (token.type === 7 /* Punctuator */) {\n\t            precedence = this.operatorPrecedence[op] || 0;\n\t        }\n\t        else if (token.type === 4 /* Keyword */) {\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\n\t        }\n\t        else {\n\t            precedence = 0;\n\t        }\n\t        return precedence;\n\t    };\n\t    Parser.prototype.parseBinaryExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n\t        var token = this.lookahead;\n\t        var prec = this.binaryPrecedence(token);\n\t        if (prec > 0) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var markers = [startToken, this.lookahead];\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            var stack = [left, token.value, right];\n\t            var precedences = [prec];\n\t            while (true) {\n\t                prec = this.binaryPrecedence(this.lookahead);\n\t                if (prec <= 0) {\n\t                    break;\n\t                }\n\t                // Reduce: make a binary expression from the three topmost entries.\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\n\t                    right = stack.pop();\n\t                    var operator = stack.pop();\n\t                    precedences.pop();\n\t                    left = stack.pop();\n\t                    markers.pop();\n\t                    var node = this.startNode(markers[markers.length - 1]);\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n\t                }\n\t                // Shift.\n\t                stack.push(this.nextToken().value);\n\t                precedences.push(prec);\n\t                markers.push(this.lookahead);\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n\t            }\n\t            // Final reduce to clean-up the stack.\n\t            var i = stack.length - 1;\n\t            expr = stack[i];\n\t            var lastMarker = markers.pop();\n\t            while (i > 1) {\n\t                var marker = markers.pop();\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\n\t                var node = this.startNode(marker, lastLineStart);\n\t                var operator = stack[i - 1];\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n\t                i -= 2;\n\t                lastMarker = marker;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\n\t    Parser.prototype.parseConditionalExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\t        if (this.match('?')) {\n\t            this.nextToken();\n\t            var previousAllowIn = this.context.allowIn;\n\t            this.context.allowIn = true;\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowIn = previousAllowIn;\n\t            this.expect(':');\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\n\t    Parser.prototype.checkPatternParam = function (options, param) {\n\t        switch (param.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                this.validateParam(options, param, param.name);\n\t                break;\n\t            case syntax_1.Syntax.RestElement:\n\t                this.checkPatternParam(options, param.argument);\n\t                break;\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                this.checkPatternParam(options, param.left);\n\t                break;\n\t            case syntax_1.Syntax.ArrayPattern:\n\t                for (var i = 0; i < param.elements.length; i++) {\n\t                    if (param.elements[i] !== null) {\n\t                        this.checkPatternParam(options, param.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectPattern:\n\t                for (var i = 0; i < param.properties.length; i++) {\n\t                    this.checkPatternParam(options, param.properties[i].value);\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t    };\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n\t        var params = [expr];\n\t        var options;\n\t        var asyncArrow = false;\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                break;\n\t            case ArrowParameterPlaceHolder:\n\t                params = expr.params;\n\t                asyncArrow = expr.async;\n\t                break;\n\t            default:\n\t                return null;\n\t        }\n\t        options = {\n\t            simple: true,\n\t            paramSet: {}\n\t        };\n\t        for (var i = 0; i < params.length; ++i) {\n\t            var param = params[i];\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\n\t                    if (param.right.argument) {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                    param.right.type = syntax_1.Syntax.Identifier;\n\t                    param.right.name = 'yield';\n\t                    delete param.right.argument;\n\t                    delete param.right.delegate;\n\t                }\n\t            }\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.checkPatternParam(options, param);\n\t            params[i] = param;\n\t        }\n\t        if (this.context.strict || !this.context.allowYield) {\n\t            for (var i = 0; i < params.length; ++i) {\n\t                var param = params[i];\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t                }\n\t            }\n\t        }\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\n\t            this.throwUnexpectedToken(token, options.message);\n\t        }\n\t        return {\n\t            simple: options.simple,\n\t            params: params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.parseAssignmentExpression = function () {\n\t        var expr;\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\n\t            expr = this.parseYieldExpression();\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var token = startToken;\n\t            expr = this.parseConditionalExpression();\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\n\t                    var arg = this.parsePrimaryExpression();\n\t                    this.reinterpretExpressionAsPattern(arg);\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: [arg],\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                var isAsync = expr.async;\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\n\t                if (list) {\n\t                    if (this.hasLineTerminator) {\n\t                        this.tolerateUnexpectedToken(this.lookahead);\n\t                    }\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                    var previousStrict = this.context.strict;\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t                    this.context.allowStrictDirective = list.simple;\n\t                    var previousAllowYield = this.context.allowYield;\n\t                    var previousAwait = this.context.await;\n\t                    this.context.allowYield = true;\n\t                    this.context.await = isAsync;\n\t                    var node = this.startNode(startToken);\n\t                    this.expect('=>');\n\t                    var body = void 0;\n\t                    if (this.match('{')) {\n\t                        var previousAllowIn = this.context.allowIn;\n\t                        this.context.allowIn = true;\n\t                        body = this.parseFunctionSourceElements();\n\t                        this.context.allowIn = previousAllowIn;\n\t                    }\n\t                    else {\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    }\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\t                    if (this.context.strict && list.firstRestricted) {\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\n\t                    }\n\t                    if (this.context.strict && list.stricted) {\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\n\t                    }\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n\t                    this.context.strict = previousStrict;\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\n\t                    this.context.allowYield = previousAllowYield;\n\t                    this.context.await = previousAwait;\n\t                }\n\t            }\n\t            else {\n\t                if (this.matchAssign()) {\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n\t                        var id = expr;\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n\t                        }\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t                        }\n\t                    }\n\t                    if (!this.match('=')) {\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                    }\n\t                    else {\n\t                        this.reinterpretExpressionAsPattern(expr);\n\t                    }\n\t                    token = this.nextToken();\n\t                    var operator = token.value;\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\n\t    Parser.prototype.parseExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        if (this.match(',')) {\n\t            var expressions = [];\n\t            expressions.push(expr);\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                if (!this.match(',')) {\n\t                    break;\n\t                }\n\t                this.nextToken();\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t            }\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-block\n\t    Parser.prototype.parseStatementListItem = function () {\n\t        var statement;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.isBindingElement = true;\n\t        if (this.lookahead.type === 4 /* Keyword */) {\n\t            switch (this.lookahead.value) {\n\t                case 'export':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n\t                    }\n\t                    statement = this.parseExportDeclaration();\n\t                    break;\n\t                case 'import':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n\t                    }\n\t                    statement = this.parseImportDeclaration();\n\t                    break;\n\t                case 'const':\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'function':\n\t                    statement = this.parseFunctionDeclaration();\n\t                    break;\n\t                case 'class':\n\t                    statement = this.parseClassDeclaration();\n\t                    break;\n\t                case 'let':\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n\t                    break;\n\t                default:\n\t                    statement = this.parseStatement();\n\t                    break;\n\t            }\n\t        }\n\t        else {\n\t            statement = this.parseStatement();\n\t        }\n\t        return statement;\n\t    };\n\t    Parser.prototype.parseBlock = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var block = [];\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            block.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.BlockStatement(block));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, kind);\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (kind === 'const') {\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n\t                if (this.match('=')) {\n\t                    this.nextToken();\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                }\n\t                else {\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n\t                }\n\t            }\n\t        }\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\n\t            this.expect('=');\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseBindingList = function (kind, options) {\n\t        var list = [this.parseLexicalBinding(kind, options)];\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseLexicalBinding(kind, options));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.isLexicalDeclaration = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.scanner.lex();\n\t        this.scanner.restoreState(state);\n\t        return (next.type === 3 /* Identifier */) ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\n\t    };\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var kind = this.nextToken().value;\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n\t        var declarations = this.parseBindingList(kind, options);\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params, kind);\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('[');\n\t        var elements = [];\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else {\n\t                if (this.match('...')) {\n\t                    elements.push(this.parseBindingRestElement(params, kind));\n\t                    break;\n\t                }\n\t                else {\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\n\t                }\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\n\t    };\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var computed = false;\n\t        var shorthand = false;\n\t        var method = false;\n\t        var key;\n\t        var value;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            var keyToken = this.lookahead;\n\t            key = this.parseVariableIdentifier();\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\t            if (this.match('=')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                this.nextToken();\n\t                var expr = this.parseAssignmentExpression();\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n\t            }\n\t            else if (!this.match(':')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                value = init;\n\t            }\n\t            else {\n\t                this.expect(':');\n\t                value = this.parsePatternWithDefault(params, kind);\n\t            }\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.expect(':');\n\t            value = this.parsePatternWithDefault(params, kind);\n\t        }\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var properties = [];\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            properties.push(this.parsePropertyPattern(params, kind));\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\n\t    };\n\t    Parser.prototype.parsePattern = function (params, kind) {\n\t        var pattern;\n\t        if (this.match('[')) {\n\t            pattern = this.parseArrayPattern(params, kind);\n\t        }\n\t        else if (this.match('{')) {\n\t            pattern = this.parseObjectPattern(params, kind);\n\t        }\n\t        else {\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n\t            }\n\t            params.push(this.lookahead);\n\t            pattern = this.parseVariableIdentifier(kind);\n\t        }\n\t        return pattern;\n\t    };\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\n\t        var startToken = this.lookahead;\n\t        var pattern = this.parsePattern(params, kind);\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = true;\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowYield = previousAllowYield;\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n\t        }\n\t        return pattern;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\n\t            if (this.context.strict) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else if (!this.context.allowYield) {\n\t                this.throwUnexpectedToken(token);\n\t            }\n\t        }\n\t        else if (token.type !== 3 /* Identifier */) {\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else {\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n\t                    this.throwUnexpectedToken(token);\n\t                }\n\t            }\n\t        }\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\n\t            this.tolerateUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, 'var');\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n\t            this.expect('=');\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\n\t        var opt = { inFor: options.inFor };\n\t        var list = [];\n\t        list.push(this.parseVariableDeclaration(opt));\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseVariableDeclaration(opt));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.parseVariableStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('var');\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\n\t    Parser.prototype.parseEmptyStatement = function () {\n\t        var node = this.createNode();\n\t        this.expect(';');\n\t        return this.finalize(node, new Node.EmptyStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\n\t    Parser.prototype.parseExpressionStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\n\t    Parser.prototype.parseIfClause = function () {\n\t        if (this.context.strict && this.matchKeyword('function')) {\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\n\t        }\n\t        return this.parseStatement();\n\t    };\n\t    Parser.prototype.parseIfStatement = function () {\n\t        var node = this.createNode();\n\t        var consequent;\n\t        var alternate = null;\n\t        this.expectKeyword('if');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            consequent = this.parseIfClause();\n\t            if (this.matchKeyword('else')) {\n\t                this.nextToken();\n\t                alternate = this.parseIfClause();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\n\t    Parser.prototype.parseDoWhileStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('do');\n\t        var previousInIteration = this.context.inIteration;\n\t        this.context.inIteration = true;\n\t        var body = this.parseStatement();\n\t        this.context.inIteration = previousInIteration;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\n\t    Parser.prototype.parseWhileStatement = function () {\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.parseStatement();\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\t    Parser.prototype.parseForStatement = function () {\n\t        var init = null;\n\t        var test = null;\n\t        var update = null;\n\t        var forIn = true;\n\t        var left, right;\n\t        var node = this.createNode();\n\t        this.expectKeyword('for');\n\t        this.expect('(');\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            if (this.matchKeyword('var')) {\n\t                init = this.createNode();\n\t                this.nextToken();\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\n\t                this.context.allowIn = previousAllowIn;\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\n\t                    var decl = declarations[0];\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n\t                    }\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.expect(';');\n\t                }\n\t            }\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n\t                init = this.createNode();\n\t                var kind = this.nextToken().value;\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\n\t                    init = this.finalize(init, new Node.Identifier(kind));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else {\n\t                    var previousAllowIn = this.context.allowIn;\n\t                    this.context.allowIn = false;\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\n\t                    this.context.allowIn = previousAllowIn;\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseExpression();\n\t                        init = null;\n\t                    }\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseAssignmentExpression();\n\t                        init = null;\n\t                        forIn = false;\n\t                    }\n\t                    else {\n\t                        this.consumeSemicolon();\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var initStartToken = this.lookahead;\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                this.context.allowIn = previousAllowIn;\n\t                if (this.matchKeyword('in')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (this.matchContextualKeyword('of')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    if (this.match(',')) {\n\t                        var initSeq = [init];\n\t                        while (this.match(',')) {\n\t                            this.nextToken();\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n\t                    }\n\t                    this.expect(';');\n\t                }\n\t            }\n\t        }\n\t        if (typeof left === 'undefined') {\n\t            if (!this.match(';')) {\n\t                test = this.parseExpression();\n\t            }\n\t            this.expect(';');\n\t            if (!this.match(')')) {\n\t                update = this.parseExpression();\n\t            }\n\t        }\n\t        var body;\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.isolateCoverGrammar(this.parseStatement);\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return (typeof left === 'undefined') ?\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\n\t    Parser.prototype.parseContinueStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('continue');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            label = id;\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration) {\n\t            this.throwError(messages_1.Messages.IllegalContinue);\n\t        }\n\t        return this.finalize(node, new Node.ContinueStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\n\t    Parser.prototype.parseBreakStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('break');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t            label = id;\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n\t            this.throwError(messages_1.Messages.IllegalBreak);\n\t        }\n\t        return this.finalize(node, new Node.BreakStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\n\t    Parser.prototype.parseReturnStatement = function () {\n\t        if (!this.context.inFunctionBody) {\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('return');\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\n\t            this.lookahead.type === 10 /* Template */;\n\t        var argument = hasArgument ? this.parseExpression() : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\n\t    Parser.prototype.parseWithStatement = function () {\n\t        if (this.context.strict) {\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\n\t        }\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('with');\n\t        this.expect('(');\n\t        var object = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            body = this.parseStatement();\n\t        }\n\t        return this.finalize(node, new Node.WithStatement(object, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\n\t    Parser.prototype.parseSwitchCase = function () {\n\t        var node = this.createNode();\n\t        var test;\n\t        if (this.matchKeyword('default')) {\n\t            this.nextToken();\n\t            test = null;\n\t        }\n\t        else {\n\t            this.expectKeyword('case');\n\t            test = this.parseExpression();\n\t        }\n\t        this.expect(':');\n\t        var consequent = [];\n\t        while (true) {\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n\t                break;\n\t            }\n\t            consequent.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\n\t    };\n\t    Parser.prototype.parseSwitchStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('switch');\n\t        this.expect('(');\n\t        var discriminant = this.parseExpression();\n\t        this.expect(')');\n\t        var previousInSwitch = this.context.inSwitch;\n\t        this.context.inSwitch = true;\n\t        var cases = [];\n\t        var defaultFound = false;\n\t        this.expect('{');\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            var clause = this.parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t        this.expect('}');\n\t        this.context.inSwitch = previousInSwitch;\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\n\t    Parser.prototype.parseLabelledStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var statement;\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\n\t            this.nextToken();\n\t            var id = expr;\n\t            var key = '$' + id.name;\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n\t            }\n\t            this.context.labelSet[key] = true;\n\t            var body = void 0;\n\t            if (this.matchKeyword('class')) {\n\t                this.tolerateUnexpectedToken(this.lookahead);\n\t                body = this.parseClassDeclaration();\n\t            }\n\t            else if (this.matchKeyword('function')) {\n\t                var token = this.lookahead;\n\t                var declaration = this.parseFunctionDeclaration();\n\t                if (this.context.strict) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n\t                }\n\t                else if (declaration.generator) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n\t                }\n\t                body = declaration;\n\t            }\n\t            else {\n\t                body = this.parseStatement();\n\t            }\n\t            delete this.context.labelSet[key];\n\t            statement = new Node.LabeledStatement(id, body);\n\t        }\n\t        else {\n\t            this.consumeSemicolon();\n\t            statement = new Node.ExpressionStatement(expr);\n\t        }\n\t        return this.finalize(node, statement);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\n\t    Parser.prototype.parseThrowStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('throw');\n\t        if (this.hasLineTerminator) {\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\n\t        }\n\t        var argument = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\n\t    Parser.prototype.parseCatchClause = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('catch');\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        var params = [];\n\t        var param = this.parsePattern(params);\n\t        var paramMap = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var key = '$' + params[i].value;\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n\t            }\n\t            paramMap[key] = true;\n\t        }\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(param.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\n\t            }\n\t        }\n\t        this.expect(')');\n\t        var body = this.parseBlock();\n\t        return this.finalize(node, new Node.CatchClause(param, body));\n\t    };\n\t    Parser.prototype.parseFinallyClause = function () {\n\t        this.expectKeyword('finally');\n\t        return this.parseBlock();\n\t    };\n\t    Parser.prototype.parseTryStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('try');\n\t        var block = this.parseBlock();\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\t        if (!handler && !finalizer) {\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\n\t        }\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\n\t    Parser.prototype.parseDebuggerStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('debugger');\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.DebuggerStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\t    Parser.prototype.parseStatement = function () {\n\t        var statement;\n\t        switch (this.lookahead.type) {\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t            case 10 /* Template */:\n\t            case 9 /* RegularExpression */:\n\t                statement = this.parseExpressionStatement();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                var value = this.lookahead.value;\n\t                if (value === '{') {\n\t                    statement = this.parseBlock();\n\t                }\n\t                else if (value === '(') {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                else if (value === ';') {\n\t                    statement = this.parseEmptyStatement();\n\t                }\n\t                else {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                break;\n\t            case 3 /* Identifier */:\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n\t                break;\n\t            case 4 /* Keyword */:\n\t                switch (this.lookahead.value) {\n\t                    case 'break':\n\t                        statement = this.parseBreakStatement();\n\t                        break;\n\t                    case 'continue':\n\t                        statement = this.parseContinueStatement();\n\t                        break;\n\t                    case 'debugger':\n\t                        statement = this.parseDebuggerStatement();\n\t                        break;\n\t                    case 'do':\n\t                        statement = this.parseDoWhileStatement();\n\t                        break;\n\t                    case 'for':\n\t                        statement = this.parseForStatement();\n\t                        break;\n\t                    case 'function':\n\t                        statement = this.parseFunctionDeclaration();\n\t                        break;\n\t                    case 'if':\n\t                        statement = this.parseIfStatement();\n\t                        break;\n\t                    case 'return':\n\t                        statement = this.parseReturnStatement();\n\t                        break;\n\t                    case 'switch':\n\t                        statement = this.parseSwitchStatement();\n\t                        break;\n\t                    case 'throw':\n\t                        statement = this.parseThrowStatement();\n\t                        break;\n\t                    case 'try':\n\t                        statement = this.parseTryStatement();\n\t                        break;\n\t                    case 'var':\n\t                        statement = this.parseVariableStatement();\n\t                        break;\n\t                    case 'while':\n\t                        statement = this.parseWhileStatement();\n\t                        break;\n\t                    case 'with':\n\t                        statement = this.parseWithStatement();\n\t                        break;\n\t                    default:\n\t                        statement = this.parseExpressionStatement();\n\t                        break;\n\t                }\n\t                break;\n\t            default:\n\t                statement = this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return statement;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\n\t    Parser.prototype.parseFunctionSourceElements = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var body = this.parseDirectivePrologues();\n\t        var previousLabelSet = this.context.labelSet;\n\t        var previousInIteration = this.context.inIteration;\n\t        var previousInSwitch = this.context.inSwitch;\n\t        var previousInFunctionBody = this.context.inFunctionBody;\n\t        this.context.labelSet = {};\n\t        this.context.inIteration = false;\n\t        this.context.inSwitch = false;\n\t        this.context.inFunctionBody = true;\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        this.context.labelSet = previousLabelSet;\n\t        this.context.inIteration = previousInIteration;\n\t        this.context.inSwitch = previousInSwitch;\n\t        this.context.inFunctionBody = previousInFunctionBody;\n\t        return this.finalize(node, new Node.BlockStatement(body));\n\t    };\n\t    Parser.prototype.validateParam = function (options, param, name) {\n\t        var key = '$' + name;\n\t        if (this.context.strict) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        else if (!options.firstRestricted) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictReservedWord;\n\t            }\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        if (typeof Object.defineProperty === 'function') {\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n\t        }\n\t        else {\n\t            options.paramSet[key] = true;\n\t        }\n\t    };\n\t    Parser.prototype.parseRestElement = function (params) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params);\n\t        if (this.match('=')) {\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\n\t        }\n\t        if (!this.match(')')) {\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n\t        }\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseFormalParameter = function (options) {\n\t        var params = [];\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\t        for (var i = 0; i < params.length; i++) {\n\t            this.validateParam(options, params[i], params[i].value);\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t        options.params.push(param);\n\t    };\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\n\t        var options;\n\t        options = {\n\t            simple: true,\n\t            params: [],\n\t            firstRestricted: firstRestricted\n\t        };\n\t        this.expect('(');\n\t        if (!this.match(')')) {\n\t            options.paramSet = {};\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                this.parseFormalParameter(options);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expect(',');\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return {\n\t            simple: options.simple,\n\t            params: options.params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.matchAsyncFunction = function () {\n\t        var match = this.matchContextualKeyword('async');\n\t        if (match) {\n\t            var state = this.scanner.saveState();\n\t            this.scanner.scanComments();\n\t            var next = this.scanner.lex();\n\t            this.scanner.restoreState(state);\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\n\t        }\n\t        return match;\n\t    };\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted = null;\n\t        if (!identifierIsOptional || !this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n\t    };\n\t    Parser.prototype.parseFunctionExpression = function () {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted;\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        if (!this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\t    Parser.prototype.parseDirective = function () {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n\t    };\n\t    Parser.prototype.parseDirectivePrologues = function () {\n\t        var firstRestricted = null;\n\t        var body = [];\n\t        while (true) {\n\t            var token = this.lookahead;\n\t            if (token.type !== 8 /* StringLiteral */) {\n\t                break;\n\t            }\n\t            var statement = this.parseDirective();\n\t            body.push(statement);\n\t            var directive = statement.directive;\n\t            if (typeof directive !== 'string') {\n\t                break;\n\t            }\n\t            if (directive === 'use strict') {\n\t                this.context.strict = true;\n\t                if (firstRestricted) {\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                if (!this.context.allowStrictDirective) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n\t                }\n\t            }\n\t            else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t        return body;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\n\t        switch (token.type) {\n\t            case 3 /* Identifier */:\n\t            case 8 /* StringLiteral */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 4 /* Keyword */:\n\t                return true;\n\t            case 7 /* Punctuator */:\n\t                return token.value === '[';\n\t            default:\n\t                break;\n\t        }\n\t        return false;\n\t    };\n\t    Parser.prototype.parseGetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length > 0) {\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseSetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length !== 1) {\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\n\t        }\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseGeneratorMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = true;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        this.context.allowYield = false;\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\t    Parser.prototype.isStartOfExpression = function () {\n\t        var start = true;\n\t        var value = this.lookahead.value;\n\t        switch (this.lookahead.type) {\n\t            case 7 /* Punctuator */:\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\n\t                    (value === '+') || (value === '-') ||\n\t                    (value === '!') || (value === '~') ||\n\t                    (value === '++') || (value === '--') ||\n\t                    (value === '/') || (value === '/='); // regular expression literal\n\t                break;\n\t            case 4 /* Keyword */:\n\t                start = (value === 'class') || (value === 'delete') ||\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\n\t                    (value === 'void') || (value === 'yield');\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return start;\n\t    };\n\t    Parser.prototype.parseYieldExpression = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('yield');\n\t        var argument = null;\n\t        var delegate = false;\n\t        if (!this.hasLineTerminator) {\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = false;\n\t            delegate = this.match('*');\n\t            if (delegate) {\n\t                this.nextToken();\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            else if (this.isStartOfExpression()) {\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            this.context.allowYield = previousAllowYield;\n\t        }\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var kind = '';\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var isStatic = false;\n\t        var isAsync = false;\n\t        if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            var id = key;\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n\t                token = this.lookahead;\n\t                isStatic = true;\n\t                computed = this.match('[');\n\t                if (this.match('*')) {\n\t                    this.nextToken();\n\t                }\n\t                else {\n\t                    key = this.parseObjectPropertyKey();\n\t                }\n\t            }\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\n\t                var punctuator = this.lookahead.value;\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n\t                    isAsync = true;\n\t                    token = this.lookahead;\n\t                    key = this.parseObjectPropertyKey();\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */) {\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\n\t                kind = 'get';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                this.context.allowYield = false;\n\t                value = this.parseGetterMethod();\n\t            }\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\n\t                kind = 'set';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                value = this.parseSetterMethod();\n\t            }\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        if (!kind && key && this.match('(')) {\n\t            kind = 'init';\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t            method = true;\n\t        }\n\t        if (!kind) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        if (kind === 'init') {\n\t            kind = 'method';\n\t        }\n\t        if (!computed) {\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n\t            }\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n\t                }\n\t                if (hasConstructor.value) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n\t                }\n\t                else {\n\t                    hasConstructor.value = true;\n\t                }\n\t                kind = 'constructor';\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n\t    };\n\t    Parser.prototype.parseClassElementList = function () {\n\t        var body = [];\n\t        var hasConstructor = { value: false };\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t            else {\n\t                body.push(this.parseClassElement(hasConstructor));\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return body;\n\t    };\n\t    Parser.prototype.parseClassBody = function () {\n\t        var node = this.createNode();\n\t        var elementList = this.parseClassElementList();\n\t        return this.finalize(node, new Node.ClassBody(elementList));\n\t    };\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n\t    };\n\t    Parser.prototype.parseClassExpression = function () {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-scripts\n\t    // https://tc39.github.io/ecma262/#sec-modules\n\t    Parser.prototype.parseModule = function () {\n\t        this.context.strict = true;\n\t        this.context.isModule = true;\n\t        this.scanner.isModule = true;\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Module(body));\n\t    };\n\t    Parser.prototype.parseScript = function () {\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Script(body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-imports\n\t    Parser.prototype.parseModuleSpecifier = function () {\n\t        var node = this.createNode();\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n\t        }\n\t        var token = this.nextToken();\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    // import {<foo as bar>} ...;\n\t    Parser.prototype.parseImportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var imported;\n\t        var local;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            imported = this.parseVariableIdentifier();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t        }\n\t        else {\n\t            imported = this.parseIdentifierName();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\n\t    };\n\t    // {foo, bar as bas}\n\t    Parser.prototype.parseNamedImports = function () {\n\t        this.expect('{');\n\t        var specifiers = [];\n\t        while (!this.match('}')) {\n\t            specifiers.push(this.parseImportSpecifier());\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return specifiers;\n\t    };\n\t    // import <foo> ...;\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n\t    };\n\t    // import <* as foo> ...;\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\n\t        var node = this.createNode();\n\t        this.expect('*');\n\t        if (!this.matchContextualKeyword('as')) {\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n\t        }\n\t        this.nextToken();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n\t    };\n\t    Parser.prototype.parseImportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('import');\n\t        var src;\n\t        var specifiers = [];\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\n\t            // import 'foo';\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        else {\n\t            if (this.match('{')) {\n\t                // import {bar}\n\t                specifiers = specifiers.concat(this.parseNamedImports());\n\t            }\n\t            else if (this.match('*')) {\n\t                // import * as foo\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\n\t            }\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n\t                // import foo\n\t                specifiers.push(this.parseImportDefaultSpecifier());\n\t                if (this.match(',')) {\n\t                    this.nextToken();\n\t                    if (this.match('*')) {\n\t                        // import foo, * as foo\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\n\t                    }\n\t                    else if (this.match('{')) {\n\t                        // import foo, {bar}\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\n\t                    }\n\t                    else {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exports\n\t    Parser.prototype.parseExportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        var exported = local;\n\t        if (this.matchContextualKeyword('as')) {\n\t            this.nextToken();\n\t            exported = this.parseIdentifierName();\n\t        }\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\n\t    };\n\t    Parser.prototype.parseExportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('export');\n\t        var exportDeclaration;\n\t        if (this.matchKeyword('default')) {\n\t            // export default ...\n\t            this.nextToken();\n\t            if (this.matchKeyword('function')) {\n\t                // export default function foo () {}\n\t                // export default function () {}\n\t                var declaration = this.parseFunctionDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchKeyword('class')) {\n\t                // export default class foo {}\n\t                var declaration = this.parseClassDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchContextualKeyword('async')) {\n\t                // export default async function f () {}\n\t                // export default async function () {}\n\t                // export default async x => x\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else {\n\t                if (this.matchContextualKeyword('from')) {\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n\t                }\n\t                // export default {};\n\t                // export default [];\n\t                // export default (1 + 2);\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n\t                this.consumeSemicolon();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t        }\n\t        else if (this.match('*')) {\n\t            // export * from 'foo';\n\t            this.nextToken();\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            var src = this.parseModuleSpecifier();\n\t            this.consumeSemicolon();\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n\t        }\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\n\t            // export var f = 1;\n\t            var declaration = void 0;\n\t            switch (this.lookahead.value) {\n\t                case 'let':\n\t                case 'const':\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'var':\n\t                case 'class':\n\t                case 'function':\n\t                    declaration = this.parseStatementListItem();\n\t                    break;\n\t                default:\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else if (this.matchAsyncFunction()) {\n\t            var declaration = this.parseFunctionDeclaration();\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else {\n\t            var specifiers = [];\n\t            var source = null;\n\t            var isExportFromIdentifier = false;\n\t            this.expect('{');\n\t            while (!this.match('}')) {\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n\t                specifiers.push(this.parseExportSpecifier());\n\t                if (!this.match('}')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t            this.expect('}');\n\t            if (this.matchContextualKeyword('from')) {\n\t                // export {default} from 'foo';\n\t                // export {foo} from 'foo';\n\t                this.nextToken();\n\t                source = this.parseModuleSpecifier();\n\t                this.consumeSemicolon();\n\t            }\n\t            else if (isExportFromIdentifier) {\n\t                // export {default}; // missing fromClause\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            else {\n\t                // export {foo};\n\t                this.consumeSemicolon();\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n\t        }\n\t        return exportDeclaration;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Ensure the condition is true, otherwise throw an error.\n\t// This is only to have a better contract semantic, i.e. another safety net\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\n\t// Do NOT use this to enforce a certain condition on any user input.\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction assert(condition, message) {\n\t    /* istanbul ignore if */\n\t    if (!condition) {\n\t        throw new Error('ASSERT: ' + message);\n\t    }\n\t}\n\texports.assert = assert;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/* tslint:disable:max-classes-per-file */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar ErrorHandler = (function () {\n\t    function ErrorHandler() {\n\t        this.errors = [];\n\t        this.tolerant = false;\n\t    }\n\t    ErrorHandler.prototype.recordError = function (error) {\n\t        this.errors.push(error);\n\t    };\n\t    ErrorHandler.prototype.tolerate = function (error) {\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\n\t        var error = new Error(msg);\n\t        try {\n\t            throw error;\n\t        }\n\t        catch (base) {\n\t            /* istanbul ignore else */\n\t            if (Object.create && Object.defineProperty) {\n\t                error = Object.create(base);\n\t                Object.defineProperty(error, 'column', { value: column });\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\n\t        var msg = 'Line ' + line + ': ' + description;\n\t        var error = this.constructError(msg, col);\n\t        error.index = index;\n\t        error.lineNumber = line;\n\t        error.description = description;\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\n\t        throw this.createError(index, line, col, description);\n\t    };\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n\t        var error = this.createError(index, line, col, description);\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    return ErrorHandler;\n\t}());\n\texports.ErrorHandler = ErrorHandler;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Error messages should be identical to V8.\n\texports.Messages = {\n\t    BadGetterArity: 'Getter must not have any formal parameters',\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n\t    DefaultRestParameter: 'Unexpected token =',\n\t    DuplicateBinding: 'Duplicate binding %0',\n\t    DuplicateConstructor: 'A class may only have one constructor',\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n\t    IllegalBreak: 'Illegal break statement',\n\t    IllegalContinue: 'Illegal continue statement',\n\t    IllegalExportDeclaration: 'Unexpected token',\n\t    IllegalImportDeclaration: 'Unexpected token',\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n\t    IllegalReturn: 'Illegal return statement',\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n\t    InvalidModuleSpecifier: 'Unexpected token',\n\t    InvalidRegExp: 'Invalid regular expression',\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n\t    MissingFromClause: 'Unexpected token',\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t    NewlineAfterThrow: 'Illegal newline after throw',\n\t    NoAsAfterImportNamespace: 'Unexpected token',\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\n\t    StaticPrototype: 'Classes may not have static property named prototype',\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n\t    UnexpectedEOS: 'Unexpected end of input',\n\t    UnexpectedIdentifier: 'Unexpected identifier',\n\t    UnexpectedNumber: 'Unexpected number',\n\t    UnexpectedReserved: 'Unexpected reserved word',\n\t    UnexpectedString: 'Unexpected string',\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\n\t    UnexpectedToken: 'Unexpected token %0',\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar character_1 = __webpack_require__(4);\n\tvar messages_1 = __webpack_require__(11);\n\tfunction hexValue(ch) {\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t}\n\tfunction octalValue(ch) {\n\t    return '01234567'.indexOf(ch);\n\t}\n\tvar Scanner = (function () {\n\t    function Scanner(code, handler) {\n\t        this.source = code;\n\t        this.errorHandler = handler;\n\t        this.trackComment = false;\n\t        this.isModule = false;\n\t        this.length = code.length;\n\t        this.index = 0;\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\n\t        this.lineStart = 0;\n\t        this.curlyStack = [];\n\t    }\n\t    Scanner.prototype.saveState = function () {\n\t        return {\n\t            index: this.index,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart\n\t        };\n\t    };\n\t    Scanner.prototype.restoreState = function (state) {\n\t        this.index = state.index;\n\t        this.lineNumber = state.lineNumber;\n\t        this.lineStart = state.lineStart;\n\t    };\n\t    Scanner.prototype.eof = function () {\n\t        return this.index >= this.length;\n\t    };\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comments\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - offset;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - offset\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            ++this.index;\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (this.trackComment) {\n\t                    loc.end = {\n\t                        line: this.lineNumber,\n\t                        column: this.index - this.lineStart - 1\n\t                    };\n\t                    var entry = {\n\t                        multiLine: false,\n\t                        slice: [start + offset, this.index - 1],\n\t                        range: [start, this.index - 1],\n\t                        loc: loc\n\t                    };\n\t                    comments.push(entry);\n\t                }\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                return comments;\n\t            }\n\t        }\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: false,\n\t                slice: [start + offset, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        return comments;\n\t    };\n\t    Scanner.prototype.skipMultiLineComment = function () {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - 2\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                ++this.index;\n\t                this.lineStart = this.index;\n\t            }\n\t            else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n\t                    this.index += 2;\n\t                    if (this.trackComment) {\n\t                        loc.end = {\n\t                            line: this.lineNumber,\n\t                            column: this.index - this.lineStart\n\t                        };\n\t                        var entry = {\n\t                            multiLine: true,\n\t                            slice: [start + 2, this.index - 2],\n\t                            range: [start, this.index],\n\t                            loc: loc\n\t                        };\n\t                        comments.push(entry);\n\t                    }\n\t                    return comments;\n\t                }\n\t                ++this.index;\n\t            }\n\t            else {\n\t                ++this.index;\n\t            }\n\t        }\n\t        // Ran off the end of the file - the whole thing is a comment\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: true,\n\t                slice: [start + 2, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        this.tolerateUnexpectedToken();\n\t        return comments;\n\t    };\n\t    Scanner.prototype.scanComments = function () {\n\t        var comments;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t        }\n\t        var start = (this.index === 0);\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isWhiteSpace(ch)) {\n\t                ++this.index;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch)) {\n\t                ++this.index;\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                start = true;\n\t            }\n\t            else if (ch === 0x2F) {\n\t                ch = this.source.charCodeAt(this.index + 1);\n\t                if (ch === 0x2F) {\n\t                    this.index += 2;\n\t                    var comment = this.skipSingleLineComment(2);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                    start = true;\n\t                }\n\t                else if (ch === 0x2A) {\n\t                    this.index += 2;\n\t                    var comment = this.skipMultiLineComment();\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (start && ch === 0x2D) {\n\t                // U+003E is '>'\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    this.index += 3;\n\t                    var comment = this.skipSingleLineComment(3);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (ch === 0x3C && !this.isModule) {\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n\t                    this.index += 4; // `<!--`\n\t                    var comment = this.skipSingleLineComment(4);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return comments;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'enum':\n\t            case 'export':\n\t            case 'import':\n\t            case 'super':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'implements':\n\t            case 'interface':\n\t            case 'package':\n\t            case 'private':\n\t            case 'protected':\n\t            case 'public':\n\t            case 'static':\n\t            case 'yield':\n\t            case 'let':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isRestrictedWord = function (id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-keywords\n\t    Scanner.prototype.isKeyword = function (id) {\n\t        switch (id.length) {\n\t            case 2:\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\n\t            case 3:\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                    (id === 'try') || (id === 'let');\n\t            case 4:\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\n\t            case 5:\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                    (id === 'class') || (id === 'super');\n\t            case 6:\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\n\t            case 7:\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t            case 8:\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t            case 10:\n\t                return (id === 'instanceof');\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.codePointAt = function (i) {\n\t        var cp = this.source.charCodeAt(i);\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\n\t            var second = this.source.charCodeAt(i + 1);\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\n\t                var first = cp;\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t            }\n\t        }\n\t        return cp;\n\t    };\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\n\t        var len = (prefix === 'u') ? 4 : 2;\n\t        var code = 0;\n\t        for (var i = 0; i < len; ++i) {\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 16 + hexValue(this.source[this.index++]);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    };\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\n\t        var ch = this.source[this.index];\n\t        var code = 0;\n\t        // At least, one hex digit is required.\n\t        if (ch === '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            code = code * 16 + hexValue(ch);\n\t        }\n\t        if (code > 0x10FFFF || ch !== '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return character_1.Character.fromCodePoint(code);\n\t    };\n\t    Scanner.prototype.getIdentifier = function () {\n\t        var start = this.index++;\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\n\t                // Need to handle surrogate pairs.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            if (character_1.Character.isIdentifierPart(ch)) {\n\t                ++this.index;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return this.source.slice(start, this.index);\n\t    };\n\t    Scanner.prototype.getComplexIdentifier = function () {\n\t        var cp = this.codePointAt(this.index);\n\t        var id = character_1.Character.fromCodePoint(cp);\n\t        this.index += id.length;\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        var ch;\n\t        if (cp === 0x5C) {\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t            ++this.index;\n\t            if (this.source[this.index] === '{') {\n\t                ++this.index;\n\t                ch = this.scanUnicodeCodePointEscape();\n\t            }\n\t            else {\n\t                ch = this.scanHexEscape('u');\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t            }\n\t            id = ch;\n\t        }\n\t        while (!this.eof()) {\n\t            cp = this.codePointAt(this.index);\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\n\t                break;\n\t            }\n\t            ch = character_1.Character.fromCodePoint(cp);\n\t            id += ch;\n\t            this.index += ch.length;\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (cp === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t                ++this.index;\n\t                if (this.source[this.index] === '{') {\n\t                    ++this.index;\n\t                    ch = this.scanUnicodeCodePointEscape();\n\t                }\n\t                else {\n\t                    ch = this.scanHexEscape('u');\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                        this.throwUnexpectedToken();\n\t                    }\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t        return id;\n\t    };\n\t    Scanner.prototype.octalToDecimal = function (ch) {\n\t        // \\0 is not octal escape sequence\n\t        var octal = (ch !== '0');\n\t        var code = octalValue(ch);\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t            octal = true;\n\t            code = code * 8 + octalValue(this.source[this.index++]);\n\t            // 3 digits are only allowed when string starts\n\t            // with 0, 1, 2, 3\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 8 + octalValue(this.source[this.index++]);\n\t            }\n\t        }\n\t        return {\n\t            code: code,\n\t            octal: octal\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    Scanner.prototype.scanIdentifier = function () {\n\t        var type;\n\t        var start = this.index;\n\t        // Backslash (U+005C) starts an escaped character.\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        else if (this.isKeyword(id)) {\n\t            type = 4 /* Keyword */;\n\t        }\n\t        else if (id === 'null') {\n\t            type = 5 /* NullLiteral */;\n\t        }\n\t        else if (id === 'true' || id === 'false') {\n\t            type = 1 /* BooleanLiteral */;\n\t        }\n\t        else {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\n\t            var restore = this.index;\n\t            this.index = start;\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n\t            this.index = restore;\n\t        }\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\n\t    Scanner.prototype.scanPunctuator = function () {\n\t        var start = this.index;\n\t        // Check for most common single-character punctuators.\n\t        var str = this.source[this.index];\n\t        switch (str) {\n\t            case '(':\n\t            case '{':\n\t                if (str === '{') {\n\t                    this.curlyStack.push('{');\n\t                }\n\t                ++this.index;\n\t                break;\n\t            case '.':\n\t                ++this.index;\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n\t                    // Spread operator: ...\n\t                    this.index += 2;\n\t                    str = '...';\n\t                }\n\t                break;\n\t            case '}':\n\t                ++this.index;\n\t                this.curlyStack.pop();\n\t                break;\n\t            case ')':\n\t            case ';':\n\t            case ',':\n\t            case '[':\n\t            case ']':\n\t            case ':':\n\t            case '?':\n\t            case '~':\n\t                ++this.index;\n\t                break;\n\t            default:\n\t                // 4-character punctuator.\n\t                str = this.source.substr(this.index, 4);\n\t                if (str === '>>>=') {\n\t                    this.index += 4;\n\t                }\n\t                else {\n\t                    // 3-character punctuators.\n\t                    str = str.substr(0, 3);\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\n\t                        this.index += 3;\n\t                    }\n\t                    else {\n\t                        // 2-character punctuators.\n\t                        str = str.substr(0, 2);\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\n\t                            this.index += 2;\n\t                        }\n\t                        else {\n\t                            // 1-character punctuators.\n\t                            str = this.source[this.index];\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n\t                                ++this.index;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t        }\n\t        if (this.index === start) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 7 /* Punctuator */,\n\t            value: str,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    Scanner.prototype.scanHexLiteral = function (start) {\n\t        var num = '';\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt('0x' + num, 16),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\n\t        var num = '';\n\t        var ch;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index];\n\t            if (ch !== '0' && ch !== '1') {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            // only 0b or 0B\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!this.eof()) {\n\t            ch = this.source.charCodeAt(this.index);\n\t            /* istanbul ignore else */\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 2),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n\t        var num = '';\n\t        var octal = false;\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n\t            octal = true;\n\t            num = '0' + this.source[this.index++];\n\t        }\n\t        else {\n\t            ++this.index;\n\t        }\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (!octal && num.length === 0) {\n\t            // only 0o or 0O\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 8),\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (var i = this.index + 1; i < this.length; ++i) {\n\t            var ch = this.source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                return true;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Scanner.prototype.scanNumericLiteral = function () {\n\t        var start = this.index;\n\t        var ch = this.source[start];\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\n\t        var num = '';\n\t        if (ch !== '.') {\n\t            num = this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            // Octal number in ES6 starts with '0o'.\n\t            // Binary number in ES6 starts with '0b'.\n\t            if (num === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++this.index;\n\t                    return this.scanHexLiteral(start);\n\t                }\n\t                if (ch === 'b' || ch === 'B') {\n\t                    ++this.index;\n\t                    return this.scanBinaryLiteral(start);\n\t                }\n\t                if (ch === 'o' || ch === 'O') {\n\t                    return this.scanOctalLiteral(ch, start);\n\t                }\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                    if (this.isImplicitOctalLiteral()) {\n\t                        return this.scanOctalLiteral(ch, start);\n\t                    }\n\t                }\n\t            }\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === '.') {\n\t            num += this.source[this.index++];\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            num += this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            if (ch === '+' || ch === '-') {\n\t                num += this.source[this.index++];\n\t            }\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                    num += this.source[this.index++];\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseFloat(num),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\t    Scanner.prototype.scanStringLiteral = function () {\n\t        var start = this.index;\n\t        var quote = this.source[start];\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\n\t        ++this.index;\n\t        var octal = false;\n\t        var str = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                str += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var unescaped_1 = this.scanHexEscape(ch);\n\t                                if (unescaped_1 === null) {\n\t                                    this.throwUnexpectedToken();\n\t                                }\n\t                                str += unescaped_1;\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            str += unescaped;\n\t                            break;\n\t                        case 'n':\n\t                            str += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            str += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            str += '\\t';\n\t                            break;\n\t                        case 'b':\n\t                            str += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            str += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            str += '\\x0B';\n\t                            break;\n\t                        case '8':\n\t                        case '9':\n\t                            str += ch;\n\t                            this.tolerateUnexpectedToken();\n\t                            break;\n\t                        default:\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                var octToDec = this.octalToDecimal(ch);\n\t                                octal = octToDec.octal || octal;\n\t                                str += String.fromCharCode(octToDec.code);\n\t                            }\n\t                            else {\n\t                                str += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            else {\n\t                str += ch;\n\t            }\n\t        }\n\t        if (quote !== '') {\n\t            this.index = start;\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 8 /* StringLiteral */,\n\t            value: str,\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\t    Scanner.prototype.scanTemplate = function () {\n\t        var cooked = '';\n\t        var terminated = false;\n\t        var start = this.index;\n\t        var head = (this.source[start] === '`');\n\t        var tail = false;\n\t        var rawOffset = 2;\n\t        ++this.index;\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === '`') {\n\t                rawOffset = 1;\n\t                tail = true;\n\t                terminated = true;\n\t                break;\n\t            }\n\t            else if (ch === '$') {\n\t                if (this.source[this.index] === '{') {\n\t                    this.curlyStack.push('${');\n\t                    ++this.index;\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                cooked += ch;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'n':\n\t                            cooked += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            cooked += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            cooked += '\\t';\n\t                            break;\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                cooked += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var restore = this.index;\n\t                                var unescaped_2 = this.scanHexEscape(ch);\n\t                                if (unescaped_2 !== null) {\n\t                                    cooked += unescaped_2;\n\t                                }\n\t                                else {\n\t                                    this.index = restore;\n\t                                    cooked += ch;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            cooked += unescaped;\n\t                            break;\n\t                        case 'b':\n\t                            cooked += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            cooked += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            cooked += '\\v';\n\t                            break;\n\t                        default:\n\t                            if (ch === '0') {\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                                    // Illegal: \\01 \\02 and so on\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                                }\n\t                                cooked += '\\0';\n\t                            }\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                // Illegal: \\1 \\2\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                            }\n\t                            else {\n\t                                cooked += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.lineNumber;\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                    ++this.index;\n\t                }\n\t                this.lineStart = this.index;\n\t                cooked += '\\n';\n\t            }\n\t            else {\n\t                cooked += ch;\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!head) {\n\t            this.curlyStack.pop();\n\t        }\n\t        return {\n\t            type: 10 /* Template */,\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\n\t            cooked: cooked,\n\t            head: head,\n\t            tail: tail,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\n\t        // The BMP character to use as a replacement for astral symbols when\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n\t        // approximation.\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n\t        // pattern that would not be detected by this substitution.\n\t        var astralSubstitute = '\\uFFFF';\n\t        var tmp = pattern;\n\t        var self = this;\n\t        if (flags.indexOf('u') >= 0) {\n\t            tmp = tmp\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n\t                var codePoint = parseInt($1 || $2, 16);\n\t                if (codePoint > 0x10FFFF) {\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t                }\n\t                if (codePoint <= 0xFFFF) {\n\t                    return String.fromCharCode(codePoint);\n\t                }\n\t                return astralSubstitute;\n\t            })\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n\t        }\n\t        // First, detect invalid regular expressions.\n\t        try {\n\t            RegExp(tmp);\n\t        }\n\t        catch (e) {\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t        }\n\t        // Return a regular expression object for this pattern-flag pair, or\n\t        // `null` in case the current environment doesn't support the flags it\n\t        // uses.\n\t        try {\n\t            return new RegExp(pattern, flags);\n\t        }\n\t        catch (exception) {\n\t            /* istanbul ignore next */\n\t            return null;\n\t        }\n\t    };\n\t    Scanner.prototype.scanRegExpBody = function () {\n\t        var ch = this.source[this.index];\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        var str = this.source[this.index++];\n\t        var classMarker = false;\n\t        var terminated = false;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t            }\n\t            else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            }\n\t            else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t        }\n\t        // Exclude leading and trailing slash.\n\t        return str.substr(1, str.length - 2);\n\t    };\n\t    Scanner.prototype.scanRegExpFlags = function () {\n\t        var str = '';\n\t        var flags = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index];\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            ++this.index;\n\t            if (ch === '\\\\' && !this.eof()) {\n\t                ch = this.source[this.index];\n\t                if (ch === 'u') {\n\t                    ++this.index;\n\t                    var restore = this.index;\n\t                    var char = this.scanHexEscape('u');\n\t                    if (char !== null) {\n\t                        flags += char;\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\n\t                            str += this.source[restore];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t                else {\n\t                    str += '\\\\';\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t            }\n\t            else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t        return flags;\n\t    };\n\t    Scanner.prototype.scanRegExp = function () {\n\t        var start = this.index;\n\t        var pattern = this.scanRegExpBody();\n\t        var flags = this.scanRegExpFlags();\n\t        var value = this.testRegExp(pattern, flags);\n\t        return {\n\t            type: 9 /* RegularExpression */,\n\t            value: '',\n\t            pattern: pattern,\n\t            flags: flags,\n\t            regex: value,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.lex = function () {\n\t        if (this.eof()) {\n\t            return {\n\t                type: 2 /* EOF */,\n\t                value: '',\n\t                lineNumber: this.lineNumber,\n\t                lineStart: this.lineStart,\n\t                start: this.index,\n\t                end: this.index\n\t            };\n\t        }\n\t        var cp = this.source.charCodeAt(this.index);\n\t        if (character_1.Character.isIdentifierStart(cp)) {\n\t            return this.scanIdentifier();\n\t        }\n\t        // Very common: ( and ) and ;\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n\t            return this.scanPunctuator();\n\t        }\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (cp === 0x27 || cp === 0x22) {\n\t            return this.scanStringLiteral();\n\t        }\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (cp === 0x2E) {\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n\t                return this.scanNumericLiteral();\n\t            }\n\t            return this.scanPunctuator();\n\t        }\n\t        if (character_1.Character.isDecimalDigit(cp)) {\n\t            return this.scanNumericLiteral();\n\t        }\n\t        // Template literals start with ` (U+0060) for template head\n\t        // or } (U+007D) for template middle or template tail.\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\n\t            return this.scanTemplate();\n\t        }\n\t        // Possible identifier start in a surrogate pair.\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n\t                return this.scanIdentifier();\n\t            }\n\t        }\n\t        return this.scanPunctuator();\n\t    };\n\t    return Scanner;\n\t}());\n\texports.Scanner = Scanner;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.TokenName = {};\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\n\texports.TokenName[2 /* EOF */] = '<end>';\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\n\texports.TokenName[8 /* StringLiteral */] = 'String';\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\n\texports.TokenName[10 /* Template */] = 'Template';\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.XHTMLEntities = {\n\t    quot: '\\u0022',\n\t    amp: '\\u0026',\n\t    apos: '\\u0027',\n\t    gt: '\\u003E',\n\t    nbsp: '\\u00A0',\n\t    iexcl: '\\u00A1',\n\t    cent: '\\u00A2',\n\t    pound: '\\u00A3',\n\t    curren: '\\u00A4',\n\t    yen: '\\u00A5',\n\t    brvbar: '\\u00A6',\n\t    sect: '\\u00A7',\n\t    uml: '\\u00A8',\n\t    copy: '\\u00A9',\n\t    ordf: '\\u00AA',\n\t    laquo: '\\u00AB',\n\t    not: '\\u00AC',\n\t    shy: '\\u00AD',\n\t    reg: '\\u00AE',\n\t    macr: '\\u00AF',\n\t    deg: '\\u00B0',\n\t    plusmn: '\\u00B1',\n\t    sup2: '\\u00B2',\n\t    sup3: '\\u00B3',\n\t    acute: '\\u00B4',\n\t    micro: '\\u00B5',\n\t    para: '\\u00B6',\n\t    middot: '\\u00B7',\n\t    cedil: '\\u00B8',\n\t    sup1: '\\u00B9',\n\t    ordm: '\\u00BA',\n\t    raquo: '\\u00BB',\n\t    frac14: '\\u00BC',\n\t    frac12: '\\u00BD',\n\t    frac34: '\\u00BE',\n\t    iquest: '\\u00BF',\n\t    Agrave: '\\u00C0',\n\t    Aacute: '\\u00C1',\n\t    Acirc: '\\u00C2',\n\t    Atilde: '\\u00C3',\n\t    Auml: '\\u00C4',\n\t    Aring: '\\u00C5',\n\t    AElig: '\\u00C6',\n\t    Ccedil: '\\u00C7',\n\t    Egrave: '\\u00C8',\n\t    Eacute: '\\u00C9',\n\t    Ecirc: '\\u00CA',\n\t    Euml: '\\u00CB',\n\t    Igrave: '\\u00CC',\n\t    Iacute: '\\u00CD',\n\t    Icirc: '\\u00CE',\n\t    Iuml: '\\u00CF',\n\t    ETH: '\\u00D0',\n\t    Ntilde: '\\u00D1',\n\t    Ograve: '\\u00D2',\n\t    Oacute: '\\u00D3',\n\t    Ocirc: '\\u00D4',\n\t    Otilde: '\\u00D5',\n\t    Ouml: '\\u00D6',\n\t    times: '\\u00D7',\n\t    Oslash: '\\u00D8',\n\t    Ugrave: '\\u00D9',\n\t    Uacute: '\\u00DA',\n\t    Ucirc: '\\u00DB',\n\t    Uuml: '\\u00DC',\n\t    Yacute: '\\u00DD',\n\t    THORN: '\\u00DE',\n\t    szlig: '\\u00DF',\n\t    agrave: '\\u00E0',\n\t    aacute: '\\u00E1',\n\t    acirc: '\\u00E2',\n\t    atilde: '\\u00E3',\n\t    auml: '\\u00E4',\n\t    aring: '\\u00E5',\n\t    aelig: '\\u00E6',\n\t    ccedil: '\\u00E7',\n\t    egrave: '\\u00E8',\n\t    eacute: '\\u00E9',\n\t    ecirc: '\\u00EA',\n\t    euml: '\\u00EB',\n\t    igrave: '\\u00EC',\n\t    iacute: '\\u00ED',\n\t    icirc: '\\u00EE',\n\t    iuml: '\\u00EF',\n\t    eth: '\\u00F0',\n\t    ntilde: '\\u00F1',\n\t    ograve: '\\u00F2',\n\t    oacute: '\\u00F3',\n\t    ocirc: '\\u00F4',\n\t    otilde: '\\u00F5',\n\t    ouml: '\\u00F6',\n\t    divide: '\\u00F7',\n\t    oslash: '\\u00F8',\n\t    ugrave: '\\u00F9',\n\t    uacute: '\\u00FA',\n\t    ucirc: '\\u00FB',\n\t    uuml: '\\u00FC',\n\t    yacute: '\\u00FD',\n\t    thorn: '\\u00FE',\n\t    yuml: '\\u00FF',\n\t    OElig: '\\u0152',\n\t    oelig: '\\u0153',\n\t    Scaron: '\\u0160',\n\t    scaron: '\\u0161',\n\t    Yuml: '\\u0178',\n\t    fnof: '\\u0192',\n\t    circ: '\\u02C6',\n\t    tilde: '\\u02DC',\n\t    Alpha: '\\u0391',\n\t    Beta: '\\u0392',\n\t    Gamma: '\\u0393',\n\t    Delta: '\\u0394',\n\t    Epsilon: '\\u0395',\n\t    Zeta: '\\u0396',\n\t    Eta: '\\u0397',\n\t    Theta: '\\u0398',\n\t    Iota: '\\u0399',\n\t    Kappa: '\\u039A',\n\t    Lambda: '\\u039B',\n\t    Mu: '\\u039C',\n\t    Nu: '\\u039D',\n\t    Xi: '\\u039E',\n\t    Omicron: '\\u039F',\n\t    Pi: '\\u03A0',\n\t    Rho: '\\u03A1',\n\t    Sigma: '\\u03A3',\n\t    Tau: '\\u03A4',\n\t    Upsilon: '\\u03A5',\n\t    Phi: '\\u03A6',\n\t    Chi: '\\u03A7',\n\t    Psi: '\\u03A8',\n\t    Omega: '\\u03A9',\n\t    alpha: '\\u03B1',\n\t    beta: '\\u03B2',\n\t    gamma: '\\u03B3',\n\t    delta: '\\u03B4',\n\t    epsilon: '\\u03B5',\n\t    zeta: '\\u03B6',\n\t    eta: '\\u03B7',\n\t    theta: '\\u03B8',\n\t    iota: '\\u03B9',\n\t    kappa: '\\u03BA',\n\t    lambda: '\\u03BB',\n\t    mu: '\\u03BC',\n\t    nu: '\\u03BD',\n\t    xi: '\\u03BE',\n\t    omicron: '\\u03BF',\n\t    pi: '\\u03C0',\n\t    rho: '\\u03C1',\n\t    sigmaf: '\\u03C2',\n\t    sigma: '\\u03C3',\n\t    tau: '\\u03C4',\n\t    upsilon: '\\u03C5',\n\t    phi: '\\u03C6',\n\t    chi: '\\u03C7',\n\t    psi: '\\u03C8',\n\t    omega: '\\u03C9',\n\t    thetasym: '\\u03D1',\n\t    upsih: '\\u03D2',\n\t    piv: '\\u03D6',\n\t    ensp: '\\u2002',\n\t    emsp: '\\u2003',\n\t    thinsp: '\\u2009',\n\t    zwnj: '\\u200C',\n\t    zwj: '\\u200D',\n\t    lrm: '\\u200E',\n\t    rlm: '\\u200F',\n\t    ndash: '\\u2013',\n\t    mdash: '\\u2014',\n\t    lsquo: '\\u2018',\n\t    rsquo: '\\u2019',\n\t    sbquo: '\\u201A',\n\t    ldquo: '\\u201C',\n\t    rdquo: '\\u201D',\n\t    bdquo: '\\u201E',\n\t    dagger: '\\u2020',\n\t    Dagger: '\\u2021',\n\t    bull: '\\u2022',\n\t    hellip: '\\u2026',\n\t    permil: '\\u2030',\n\t    prime: '\\u2032',\n\t    Prime: '\\u2033',\n\t    lsaquo: '\\u2039',\n\t    rsaquo: '\\u203A',\n\t    oline: '\\u203E',\n\t    frasl: '\\u2044',\n\t    euro: '\\u20AC',\n\t    image: '\\u2111',\n\t    weierp: '\\u2118',\n\t    real: '\\u211C',\n\t    trade: '\\u2122',\n\t    alefsym: '\\u2135',\n\t    larr: '\\u2190',\n\t    uarr: '\\u2191',\n\t    rarr: '\\u2192',\n\t    darr: '\\u2193',\n\t    harr: '\\u2194',\n\t    crarr: '\\u21B5',\n\t    lArr: '\\u21D0',\n\t    uArr: '\\u21D1',\n\t    rArr: '\\u21D2',\n\t    dArr: '\\u21D3',\n\t    hArr: '\\u21D4',\n\t    forall: '\\u2200',\n\t    part: '\\u2202',\n\t    exist: '\\u2203',\n\t    empty: '\\u2205',\n\t    nabla: '\\u2207',\n\t    isin: '\\u2208',\n\t    notin: '\\u2209',\n\t    ni: '\\u220B',\n\t    prod: '\\u220F',\n\t    sum: '\\u2211',\n\t    minus: '\\u2212',\n\t    lowast: '\\u2217',\n\t    radic: '\\u221A',\n\t    prop: '\\u221D',\n\t    infin: '\\u221E',\n\t    ang: '\\u2220',\n\t    and: '\\u2227',\n\t    or: '\\u2228',\n\t    cap: '\\u2229',\n\t    cup: '\\u222A',\n\t    int: '\\u222B',\n\t    there4: '\\u2234',\n\t    sim: '\\u223C',\n\t    cong: '\\u2245',\n\t    asymp: '\\u2248',\n\t    ne: '\\u2260',\n\t    equiv: '\\u2261',\n\t    le: '\\u2264',\n\t    ge: '\\u2265',\n\t    sub: '\\u2282',\n\t    sup: '\\u2283',\n\t    nsub: '\\u2284',\n\t    sube: '\\u2286',\n\t    supe: '\\u2287',\n\t    oplus: '\\u2295',\n\t    otimes: '\\u2297',\n\t    perp: '\\u22A5',\n\t    sdot: '\\u22C5',\n\t    lceil: '\\u2308',\n\t    rceil: '\\u2309',\n\t    lfloor: '\\u230A',\n\t    rfloor: '\\u230B',\n\t    loz: '\\u25CA',\n\t    spades: '\\u2660',\n\t    clubs: '\\u2663',\n\t    hearts: '\\u2665',\n\t    diams: '\\u2666',\n\t    lang: '\\u27E8',\n\t    rang: '\\u27E9'\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar token_1 = __webpack_require__(13);\n\tvar Reader = (function () {\n\t    function Reader() {\n\t        this.values = [];\n\t        this.curly = this.paren = -1;\n\t    }\n\t    // A function following one of those tokens is an expression.\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t            'return', 'case', 'delete', 'throw', 'void',\n\t            // assignment operators\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t            '&=', '|=', '^=', ',',\n\t            // binary/unary operators\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n\t    };\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\n\t    // https://github.com/mozilla/sweet.js/wiki/design\n\t    Reader.prototype.isRegexStart = function () {\n\t        var previous = this.values[this.values.length - 1];\n\t        var regex = (previous !== null);\n\t        switch (previous) {\n\t            case 'this':\n\t            case ']':\n\t                regex = false;\n\t                break;\n\t            case ')':\n\t                var keyword = this.values[this.paren - 1];\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\n\t                break;\n\t            case '}':\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                regex = false;\n\t                if (this.values[this.curly - 3] === 'function') {\n\t                    // Anonymous function, e.g. function(){} /42\n\t                    var check = this.values[this.curly - 4];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\n\t                }\n\t                else if (this.values[this.curly - 4] === 'function') {\n\t                    // Named function, e.g. function f(){} /42/\n\t                    var check = this.values[this.curly - 5];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return regex;\n\t    };\n\t    Reader.prototype.push = function (token) {\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n\t            if (token.value === '{') {\n\t                this.curly = this.values.length;\n\t            }\n\t            else if (token.value === '(') {\n\t                this.paren = this.values.length;\n\t            }\n\t            this.values.push(token.value);\n\t        }\n\t        else {\n\t            this.values.push(null);\n\t        }\n\t    };\n\t    return Reader;\n\t}());\n\tvar Tokenizer = (function () {\n\t    function Tokenizer(code, config) {\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\n\t        this.buffer = [];\n\t        this.reader = new Reader();\n\t    }\n\t    Tokenizer.prototype.errors = function () {\n\t        return this.errorHandler.errors;\n\t    };\n\t    Tokenizer.prototype.getNextToken = function () {\n\t        if (this.buffer.length === 0) {\n\t            var comments = this.scanner.scanComments();\n\t            if (this.scanner.trackComment) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n\t                    var comment = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: value\n\t                    };\n\t                    if (this.trackRange) {\n\t                        comment.range = e.range;\n\t                    }\n\t                    if (this.trackLoc) {\n\t                        comment.loc = e.loc;\n\t                    }\n\t                    this.buffer.push(comment);\n\t                }\n\t            }\n\t            if (!this.scanner.eof()) {\n\t                var loc = void 0;\n\t                if (this.trackLoc) {\n\t                    loc = {\n\t                        start: {\n\t                            line: this.scanner.lineNumber,\n\t                            column: this.scanner.index - this.scanner.lineStart\n\t                        },\n\t                        end: {}\n\t                    };\n\t                }\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n\t                this.reader.push(token);\n\t                var entry = {\n\t                    type: token_1.TokenName[token.type],\n\t                    value: this.scanner.source.slice(token.start, token.end)\n\t                };\n\t                if (this.trackRange) {\n\t                    entry.range = [token.start, token.end];\n\t                }\n\t                if (this.trackLoc) {\n\t                    loc.end = {\n\t                        line: this.scanner.lineNumber,\n\t                        column: this.scanner.index - this.scanner.lineStart\n\t                    };\n\t                    entry.loc = loc;\n\t                }\n\t                if (token.type === 9 /* RegularExpression */) {\n\t                    var pattern = token.pattern;\n\t                    var flags = token.flags;\n\t                    entry.regex = { pattern: pattern, flags: flags };\n\t                }\n\t                this.buffer.push(entry);\n\t            }\n\t        }\n\t        return this.buffer.shift();\n\t    };\n\t    return Tokenizer;\n\t}());\n\texports.Tokenizer = Tokenizer;\n\n\n/***/ }\n/******/ ])\n});\n;","<script lang=\"ts\">\r\n    import { afterUpdate, onMount } from \"svelte\";\r\n    import { PixelsData, Rgba } from \"./drawing\";\r\n    import { parseScript } from \"esprima\";\r\n\r\n    type Formula = (x: number, y: number, t: number) => number;\r\n\r\n    type GenerationResult = ReturnType<typeof generateData>;\r\n\r\n    function generateData(\r\n        width: number,\r\n        height: number,\r\n        time: number,\r\n        formula: Formula\r\n    ) {\r\n        const resultData: number[][] = [];\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let resultText = \"Ok!\";\r\n        outer: for (let x = 0; x < width; x++) {\r\n            resultData[x] = [];\r\n            for (let y = 0; y < height; y++) {\r\n                let result: number;\r\n                try {\r\n                    result = formula(x - width / 2, y - height / 2, time);\r\n                } catch (error) {\r\n                    for (let x2 = x; x2 < width; x2++) {\r\n                        resultData[x] = [];\r\n                        for (let y2 = 0; y2 < height; y2++) {\r\n                            resultData[x][y] = 0;\r\n                        }\r\n                    }\r\n                    resultText = error;\r\n                    break outer;\r\n                }\r\n                resultData[x][y] = result;\r\n                min = Math.min(min, result);\r\n                max = Math.max(max, result);\r\n            }\r\n        }\r\n        return { data: resultData, min, max, resultText };\r\n    }\r\n\r\n    function normalizeNumber(min: number, max: number, number: number): number {\r\n        return (number - min) / (max - min);\r\n    }\r\n\r\n    function normalizeData(result: GenerationResult): number[][] {\r\n        const newData: number[][] = [];\r\n        for (let x = 0; x < result.data.length; x++) {\r\n            newData[x] = [];\r\n            for (let y = 0; y < result.data[0].length; y++) {\r\n                newData[x][y] = normalizeNumber(\r\n                    result.min,\r\n                    result.max,\r\n                    result.data[x][y]\r\n                );\r\n            }\r\n        }\r\n        return newData;\r\n    }\r\n\r\n    function dataToImage(data: number[][]) {\r\n        const pixels = new PixelsData(data.length, data[0].length);\r\n        for (let x = 0; x < data.length; x++) {\r\n            for (let y = 0; y < data[0].length; y++) {\r\n                const B = data[x][y] * 255;\r\n                pixels.setPixel(x, y, new Rgba(B, B, B, 255));\r\n            }\r\n        }\r\n        pixels.update();\r\n        return pixels;\r\n    }\r\n\r\n    function isValidFormula(formula: string) {\r\n        let valid = true;\r\n        try {\r\n            parseScript(formula);\r\n        } catch {\r\n            valid = false;\r\n        }\r\n        return formula.length > 0 ? valid : false;\r\n    }\r\n\r\n    function getDrawingFunction(textFormula: string): Formula {\r\n        Object.getOwnPropertyNames(Math).forEach((key) => {\r\n            textFormula = textFormula.replaceAll(key, `Math.${key}`);\r\n        });\r\n        textFormula = textFormula.replaceAll(\"Math.Math.\", \"Math.\");\r\n        return isValidFormula(textFormula)\r\n            ? eval(`(x, y, t) => {\r\n            let output = ${textFormula};\r\n            switch (output) {\r\n                case Infinity: return Number.MAX_VALUE;\r\n                case -Infinity: return Number.MIN_VALUE;\r\n                case NaN: return 0;\r\n                default: return output;\r\n            }\r\n        }`)\r\n            : (_x, _y, _t) => 0;\r\n    }\r\n\r\n    export let size: [number, number];\r\n    export let textFormula: string;\r\n    export let time: number;\r\n\r\n    let canvas: HTMLCanvasElement;\r\n    let ctx: CanvasRenderingContext2D;\r\n    onMount(() => {\r\n        canvas.width = size[0] * 2;\r\n        canvas.height = size[1] * 2;\r\n        ctx = canvas.getContext(\"2d\");\r\n        ctx.imageSmoothingEnabled = false;\r\n    });\r\n\r\n    afterUpdate(() => {\r\n        const formula = getDrawingFunction(textFormula);\r\n        const result = generateData(size[0], size[1], time, formula);\r\n        const pixels = dataToImage(normalizeData(result));\r\n        pixels.update();\r\n        ctx.drawImage(pixels.node, 0, 0, canvas.width, canvas.height);\r\n    });\r\n</script>\r\n\r\n<canvas bind:this={canvas} />\r\n\r\n<style>\r\n    canvas {\r\n        border-radius: 5px;\r\n        border: 1px solid #ccc;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport { createGrammar } from \"tracery-grammar\";\n\timport FormulaVisualizator from \"./FormulaVisualizator/index.svelte\";\n\n\tfunction copyToBuffer() {\n\t\tconst searchParams = new URLSearchParams(window.location.search);\n\t\tsearchParams.delete(\"formula\");\n\t\tsearchParams.append(\"formula\", encodeURI(formula));\n\t\tnavigator.clipboard\n\t\t\t.writeText(\n\t\t\t\twindow.location.hostname +\n\t\t\t\t\t(window.location.port.length ? \":\" : \"\") +\n\t\t\t\t\twindow.location.port +\n\t\t\t\t\twindow.location.pathname +\n\t\t\t\t\t\"?\" +\n\t\t\t\t\tsearchParams.toString()\n\t\t\t)\n\t\t\t.then(\n\t\t\t\tfunction () {\n\t\t\t\t\tconsole.log(\"Async: Copying to clipboard was successful!\");\n\t\t\t\t},\n\t\t\t\tfunction (err) {\n\t\t\t\t\tconsole.error(\"Async: Could not copy text: \", err);\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\tfunction generateFormula(min: number) {\n\t\tlet result: string;\n\t\tdo {\n\t\t\tresult = grammar.flatten(\"#initial#\");\n\t\t} while (result.length < min || result.length > 200);\n\t\treturn result;\n\t}\n\n\tfunction randomizeFormula() {\n\t\tformula = generateFormula(100);\n\t}\n\n\tconst grammar = createGrammar({\n\t\tinitial: [\"#function#\", \"#number#\"],\n\t\tfunction: [\n\t\t\t\"#func-1#(#initial#)\",\n\t\t\t\"#func-2#(#initial#, #initial#)\",\n\t\t\t\"#func-3#(#initial#, #initial#, #initial#)\",\n\t\t\t\"#initial# #operand# #initial#\",\n\t\t\t\"(#initial#)\",\n\t\t],\n\t\t\"func-1\": [\n\t\t\t\"Math.sin\",\n\t\t\t\"Math.cos\",\n\t\t\t\"Math.tan\",\n\t\t\t\"Math.tanh\",\n\t\t\t\"Math.round\",\n\t\t\t\"Math.abs\",\n\t\t],\n\t\t\"func-2\": [\"Math.hypot\", \"Math.atan2\"],\n\t\t\"func-3\": [\"Math.hypot\"],\n\t\toperand: [\n\t\t\t\"+\",\n\t\t\t\"-\",\n\t\t\t\"*\",\n\t\t\t\"/\",\n\t\t\t\"&\",\n\t\t\t\"|\",\n\t\t\t\"^\",\n\t\t\t\"&&\",\n\t\t\t\"||\",\n\t\t\t\"<<\",\n\t\t\t\">>\",\n\t\t\t\"%\",\n\t\t\t\">\",\n\t\t\t\"<\",\n\t\t\t\"==\",\n\t\t\t\"!=\",\n\t\t],\n\t\tnumber: [\"x\", \"y\", \"t\"],\n\t});\n\n\tlet formula =\n\t\t\"(hypot(x, y) > sin((x + y + t + random() * sin(x / 20) * 20) / 10) * 100) + (hypot(x, y) < sin((x + y + t + random() * sin(y / 30) * 30) / 10) * 100)\";\n\n\tlet time: number = 0;\n\tonMount(() => {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\tif (urlParams.has(\"formula\")) {\n\t\t\tformula = decodeURI(urlParams.get(\"formula\")!);\n\t\t}\n\t\t(function loop() {\n\t\t\ttime++;\n\t\t\trequestAnimationFrame(loop);\n\t\t})();\n\t});\n</script>\n\n<main>\n\t<FormulaVisualizator size={[256, 256]} textFormula={formula} {time} />\n\t<div class={\"right\"}>\n\t\t<textarea\n\t\t\tbind:value={formula}\n\t\t\ton:input={() => (time = 0)}\n\t\t\tcols=\"30\"\n\t\t\trows=\"10\"\n\t\t/>\n\t\t<button on:click={randomizeFormula}>randomize</button>\n\t\t<button on:click={copyToBuffer}>copy link</button>\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\n\ttextarea {\n\t\tdisplay: block;\n\t\tresize: none;\n\t\twidth: 100%;\n\t\tborder-radius: 5px;\n\t\tmargin-bottom: 10px;\n\t}\n\n\tbutton {\n\t\tborder-radius: 5px;\n\t\tcursor: pointer;\n\t\tpadding: 0.4em 1em;\n\t}\n\n\tbutton + button {\n\t\tmargin-left: 5px;\n\t}\n\n\tbutton:hover {\n\t\tbackground-color: #e4e4e4;\n\t}\n\n\tbutton:focus {\n\t\toutline: none;\n\t\tborder-color: #ccc;\n\t}\n\n\t.right {\n\t\twidth: 514px;\n\t\tmargin-left: 10px;\n\t}\n\n\t@media (max-width: 1100px) {\n\t\tmain {\n\t\t\tdisplay: block;\n\t\t\ttext-align: center;\n\t\t}\n\t\t.right {\n\t\t\tmargin: auto;\n\t\t\tmargin-top: 10px;\n\t\t\twidth: 514px;\n\t\t}\n\t}\n</style>\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_empty","obj","keys","length","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","children","Array","from","childNodes","set_input_value","input","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","afterUpdate","after_update","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","Set","i","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","$$set","tracery","TraceryNode","parent","childIndex","settings","errors","undefined","raw","Grammar","grammar","depth","isExpanded","NodeAction","sections","split","rule","RuleSet","falloff","isArray","defaultRules","String","prototype","toString","expandChildren","childRule","preventRecursion","finishedText","parse","concat","expand","expansionErrors","preactions","postactions","parsed","parseTag","symbol","modifiers","createUndo","activate","selectedRule","selectRule","modName","modParams","results","exec","substring","mod","action","clearEscapeChars","replace","ruleSections","finishedRules","ruleNodes","n","pushRules","popRules","flatten","toText","conditionalRule","conditionalValues","v","ranking","distribution","shuffledDeck","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","fyshuffle","apply","Number","call","pow","defaultUses","clearState","Symbol","key","rawRules","baseRules","stack","uses","rules","getActiveRules","rulesToJSON","JSON","stringify","loadFromRawObj","isVowel","c2","toLowerCase","symbols","addModifiers","mods","hasOwnProperty","subgrammars","createRoot","allowEscapeChars","root","toJSON","symbolJSON","join","sourceAction","isDynamic","baseEngModifiers","s","params","RegExp","capitalizeAll","s2","capNext","charAt","toUpperCase","capitalize","firstS","console","log","finished","slice","ed","createGrammar","tagContents","symbolSection","components","inTag","escaped","start","escapedSubstring","lastEscapedChar","createSection","end","rawSubstring","section","randFloat","bottom","top","randInt","limNumber","min","max","number","interpolate","t","Rgba","red","green","blue","alpha","other","normalise","abs","MAX_DIF","Canvas","width","height","getContext","PixelsData","super","createImageData","x","y","color","POINTER","putImageData","factory","modules","installedModules","__webpack_require__","moduleId","exports","module","id","loaded","defineProperty","comment_handler_1","jsx_parser_1","parser_1","tokenizer_1","code","delegate","commentHandler","proxyDelegate","metadata","visit","parserDelegate","collectComment","comment","attachComment","CommentHandler","attach","parser","isModule","sourceType","jsx","JSXParser","Parser","ast","parseModule","parseScript","comments","config","tokens","tolerant","errorHandler","parsingOptions","tokenize","tokenizer","Tokenizer","token","getNextToken","e","tolerate","syntax_1","Syntax","version","leading","trailing","insertInnerComments","BlockStatement","body","innerComments","entry","offset","unshift","findTrailingComments","trailingComments","entry_1","firstComment","range","findLeadingComments","leadingComments","visitNode","Program","visitComment","loc","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForOfStatement","ForInStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","extendStatics","__extends","setPrototypeOf","__proto__","__","constructor","character_1","JSXNode","jsx_syntax_1","Node","token_1","xhtml_entities_1","getQualifiedElementName","elementName","qualifiedName","JSXSyntax","JSXIdentifier","JSXNamespacedName","ns","namespace","JSXMemberExpression","expr","object","property","TokenName","_super","parsePrimaryExpression","match","parseJSXRoot","startJSX","scanner","startMarker","lineNumber","line","lineStart","column","finishJSX","nextToken","reenterJSX","expectJSX","createJSXNode","collectComments","createJSXChildNode","scanXHTMLEntity","quote","result","valid","terminated","numeric","hex","eof","ch","source","Character","isDecimalDigit","charCodeAt","isHexDigit","str","substr","fromCharCode","parseInt","XHTMLEntities","lexJSX","cp","n1","n2","isIdentifierStart","isIdentifierPart","lex","nextJSXToken","lastMarker","convertToken","nextJSXText","isLineTerminator","peekJSXToken","state","saveState","scanComments","next","restoreState","throwUnexpectedToken","matchJSX","parseJSXIdentifier","finalize","parseJSXElementName","name_1","parseJSXAttributeName","attributeName","identifier","name_2","parseJSXStringLiteralAttribute","getTokenRaw","parseJSXExpressionAttribute","tolerateError","expression","parseAssignmentExpression","JSXExpressionContainer","parseJSXAttributeValue","parseJSXElement","parseJSXNameValueAttribute","JSXAttribute","parseJSXSpreadAttribute","argument","JSXSpreadAttribute","parseJSXAttributes","attributes","parseJSXOpeningElement","selfClosing","JSXOpeningElement","parseJSXBoundaryElement","name_3","JSXClosingElement","parseJSXEmptyExpression","JSXEmptyExpression","parseJSXExpressionContainer","parseJSXChildren","child","JSXText","container","parseComplexJSXElement","el","opening","JSXElement","closing","open_1","isStartOfExpression","Regex","NonAsciiIdentifierStart","NonAsciiIdentifierPart","fromCodePoint","isWhiteSpace","test","isOctalDigit","openingElement","closingElement","elements","generator","async","operator","left","right","AsyncArrowFunctionExpression","AsyncFunctionDeclaration","AsyncFunctionExpression","logical","label","callee","args","arguments","param","superClass","ComputedMemberExpression","computed","consequent","alternate","Directive","directive","declaration","specifiers","exported","each","imported","meta","kind","isStatic","static","Module","properties","method","shorthand","RegexLiteral","pattern","flags","regex","Script","expressions","StaticMemberExpression","discriminant","cases","tag","quasi","tail","quasis","finalizer","prefix","declarations","assert_1","error_handler_1","messages_1","scanner_1","ArrowParameterPlaceHolder","ErrorHandler","Scanner","trackComment","operatorPrecedence",")",";",",","=","]","||","&&","|","^","&","==","!=","===","!==","<",">","<=",">=","<<",">>",">>>","+","-","*","/","%","lookahead","hasLineTerminator","await","allowIn","allowStrictDirective","allowYield","firstCoverInitializedNameError","isAssignmentTarget","isBindingElement","inFunctionBody","inIteration","inSwitch","labelSet","strict","throwError","messageFormat","values","_i","msg","whole","idx","assert","createError","unexpectedTokenError","message","Messages","UnexpectedToken","UnexpectedEOS","UnexpectedIdentifier","UnexpectedNumber","UnexpectedString","UnexpectedTemplate","isFutureReservedWord","UnexpectedReserved","isStrictModeReservedWord","StrictReservedWord","lastMarkerLineStart","tolerateUnexpectedToken","multiLine","nextRegexToken","scanRegExp","createNode","startNode","lastLineStart","marker","expect","expectCommaSeparator","expectKeyword","keyword","matchKeyword","matchContextualKeyword","matchAssign","op","isolateCoverGrammar","parseFunction","previousIsBindingElement","previousIsAssignmentTarget","previousFirstCoverInitializedNameError","inheritCoverGrammar","consumeSemicolon","matchAsyncFunction","parseFunctionExpression","octal","StrictOctalLiteral","parseTemplateLiteral","parseGroupExpression","parseArrayInitializer","parseObjectInitializer","parseIdentifierName","parseClassExpression","parseSpreadElement","arg","parsePropertyMethod","previousStrict","previousAllowStrictDirective","simple","parseFunctionSourceElements","firstRestricted","stricted","parsePropertyMethodFunction","previousAllowYield","parseFormalParameters","parsePropertyMethodAsyncFunction","previousAwait","parseObjectPropertyKey","isPropertyKey","parseObjectProperty","hasProto","isAsync","lookaheadPropertyKey","qualifiedPropertyName","parseGetterMethod","parseSetterMethod","parseGeneratorMethod","DuplicateProtoProperty","parseTemplateHead","head","cooked","parseTemplateElement","parseExpression","reinterpretExpressionAsPattern","startToken","parseRestElement","arrow","parameters","parseArguments","isIdentifierName","parseNewExpression","parseLeftHandSideExpression","parseAsyncArgument","parseAsyncArguments","parseLeftHandSideExpressionAllowCall","maybeAsync","previousAllowIn","asyncArrow","parseSuper","parseUpdateExpression","parseUnaryExpression","isRestrictedWord","StrictLHSPrefix","InvalidLHSInAssignment","StrictLHSPostfix","parseAwaitExpression","StrictDelete","parseExponentiationExpression","binaryPrecedence","parseBinaryExpression","prec","markers","precedences","parseConditionalExpression","checkPatternParam","validateParam","reinterpretAsCoverFormalsList","paramSet","StrictParamDupe","parseYieldExpression","list","StrictLHSAssignment","parseStatementListItem","statement","IllegalExportDeclaration","parseExportDeclaration","IllegalImportDeclaration","parseImportDeclaration","parseLexicalDeclaration","inFor","parseFunctionDeclaration","parseClassDeclaration","isLexicalDeclaration","parseStatement","parseBlock","parseLexicalBinding","parsePattern","StrictVarName","DeclarationMissingInitializer","parseBindingList","parseBindingRestElement","parseArrayPattern","parsePatternWithDefault","parsePropertyPattern","keyToken","parseVariableIdentifier","parseObjectPattern","LetInLexicalBinding","parseVariableDeclaration","parseVariableDeclarationList","opt","parseVariableStatement","parseEmptyStatement","parseExpressionStatement","parseIfClause","StrictFunction","parseIfStatement","parseDoWhileStatement","previousInIteration","parseWhileStatement","parseForStatement","forIn","decl","ForInOfLoopInitializer","initStartToken","InvalidLHSInForIn","InvalidLHSInForLoop","initSeq","parseContinueStatement","UnknownLabel","IllegalContinue","parseBreakStatement","IllegalBreak","parseReturnStatement","IllegalReturn","parseWithStatement","StrictModeWith","parseSwitchCase","parseSwitchStatement","previousInSwitch","defaultFound","clause","MultipleDefaultsInSwitch","parseLabelledStatement","Redeclaration","GeneratorInLegacyContext","parseThrowStatement","NewlineAfterThrow","parseCatchClause","paramMap","DuplicateBinding","StrictCatchVariable","parseFinallyClause","parseTryStatement","NoCatchOrFinally","parseDebuggerStatement","parseDirectivePrologues","previousLabelSet","previousInFunctionBody","StrictParamName","enumerable","writable","configurable","DefaultRestParameter","ParameterAfterRestParameter","parseFormalParameter","identifierIsOptional","isGenerator","StrictFunctionName","previousAllowAwait","formalParameters","parseDirective","IllegalLanguageModeDirective","BadGetterArity","BadSetterArity","BadSetterRestParameter","parseClassElement","hasConstructor","punctuator","ConstructorIsAsync","StaticPrototype","ConstructorSpecialMethod","DuplicateConstructor","parseClassElementList","parseClassBody","elementList","classBody","parseModuleSpecifier","InvalidModuleSpecifier","parseImportSpecifier","parseNamedImports","parseImportDefaultSpecifier","parseImportNamespaceSpecifier","NoAsAfterImportNamespace","src","MissingFromClause","parseExportSpecifier","exportDeclaration","isExportFromIdentifier","condition","recordError","error","constructError","base","col","description","InvalidEscapedReservedWord","InvalidHexEscapeSequence","InvalidRegExp","TemplateOctalLiteral","UnexpectedTokenIllegal","UnterminatedRegExp","hexValue","octalValue","curlyStack","skipSingleLineComment","skipMultiLineComment","isKeyword","codePointAt","second","scanHexEscape","len","scanUnicodeCodePointEscape","getIdentifier","getComplexIdentifier","octalToDecimal","scanIdentifier","restore","scanPunctuator","scanHexLiteral","num","scanBinaryLiteral","scanOctalLiteral","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","unescaped_1","unescaped","octToDec","scanTemplate","rawOffset","unescaped_2","testRegExp","tmp","self","$0","$1","$2","codePoint","exception","scanRegExpBody","classMarker","scanRegExpFlags","char","quot","amp","apos","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","lang","rang","Reader","curly","paren","beforeFunctionExpression","isRegexStart","previous","check","trackRange","trackLoc","buffer","reader","shift","canvas","formula","time","app","App"],"mappings":"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"}