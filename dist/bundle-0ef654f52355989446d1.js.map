{"version":3,"sources":["webpack://artifical-life/./node_modules/tracery-grammar/tracery.js","webpack://artifical-life/./src/drawing.ts","webpack://artifical-life/./src/math-functions.ts","webpack://artifical-life/webpack/bootstrap","webpack://artifical-life/webpack/runtime/make namespace object","webpack://artifical-life/./src/main.ts"],"names":["tracery","TraceryNode","parent","childIndex","settings","this","errors","undefined","raw","push","Grammar","grammar","depth","type","isExpanded","NodeAction","node","sections","split","target","length","rule","RuleSet","falloff","Array","isArray","defaultRules","String","prototype","toString","expandChildren","childRule","preventRecursion","children","finishedText","parse","concat","i","expand","expansionErrors","preactions","postactions","parsed","parseTag","symbol","modifiers","createUndo","activate","selectedRule","selectRule","modName","modParams","indexOf","results","exec","substring","mod","action","clearEscapeChars","replace","ruleSections","finishedRules","ruleNodes","n","pushRules","popRules","flatten","toText","conditionalRule","value","conditionalValues","v","ranking","index","distribution","shuffledDeck","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","fyshuffle","apply","map","Number","call","pop","pow","defaultUses","clearState","Symbol","key","rawRules","baseRules","stack","uses","rules","getActiveRules","rulesToJSON","JSON","stringify","loadFromRawObj","isVowel","c","c2","toLowerCase","keys","Object","symbols","addModifiers","mods","hasOwnProperty","subgrammars","createRoot","allowEscapeChars","root","toJSON","symbolJSON","join","sourceAction","isDynamic","baseEngModifiers","s","params","RegExp","capitalizeAll","s2","capNext","charAt","toUpperCase","capitalize","a","firstS","console","log","finished","slice","ed","createGrammar","tagContents","symbolSection","components","inTag","escaped","start","escapedSubstring","lastEscapedChar","createSection","end","rawSubstring","filter","section","module","exports","red","green","blue","alpha","randRgb","Rgba","randInt","interpolate","other","t","normalise","limNumber","mutateRgb","randFloat","difference","abs","MAX_DIF","width","height","document","createElement","ctx","getContext","Canvas","data","createImageData","setPixel","x","y","color","POINTER","update","putImageData","PixelsData","bottom","top","from","to","arr","min","max","number","b","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","r","toStringTag","defineProperty","W","H","PX","sin","asin","cos","acos","tan","tanh","atan","hypot","round","ceil","rand","sqrt","cbrt","avg","args","reduce","generate","result","encoded","encodeURI","copyToBuffer","formulaInputNode","querySelector","searchParams","URLSearchParams","window","location","search","delete","append","navigator","clipboard","writeText","hostname","port","pathname","then","err","error","isBrucketsCorrect","warningField","getElementById","counter","isCorrect","innerText","onload","onInputFromula","formula","eval","imgNode","oninput","randomNode","onclick","randFormula","share","minOutput","maxOutput","timeOutput","errOutput","canvas","imageSmoothingEnabled","pixels","urlParams","has","decodeURI","get","setInterval","Infinity","innerHTML","e","B","normalizeNumber","drawImage"],"mappings":"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","file":"bundle-0ef654f52355989446d1.js","sourcesContent":["/**\n * @author Kate\n */\n\nvar tracery = function() {\n\n    var TraceryNode = function(parent, childIndex, settings) {\n        this.errors = [];\n\n        // No input? Add an error, but continue anyways\n        if (settings.raw === undefined) {\n            this.errors.push(\"Empty input for node\");\n            settings.raw = \"\";\n        }\n\n        // If the root node of an expansion, it will have the grammar passed as the 'parent'\n        //  set the grammar from the 'parent', and set all other values for a root node\n        if ( parent instanceof tracery.Grammar) {\n            this.grammar = parent;\n            this.parent = null;\n            this.depth = 0;\n            this.childIndex = 0;\n        } else {\n            this.grammar = parent.grammar;\n            this.parent = parent;\n            this.depth = parent.depth + 1;\n            this.childIndex = childIndex;\n        }\n\n        this.raw = settings.raw;\n        this.type = settings.type;\n        this.isExpanded = false;\n\n        if (!this.grammar) {\n            this.errors.push(\"No grammar specified for this node \" + this);\n        }\n\n    };\n\n    TraceryNode.prototype.toString = function() {\n        return \"Node('\" + this.raw + \"' \" + this.type + \" d:\" + this.depth + \")\";\n    };\n\n    // Expand the node (with the given child rule)\n    //  Make children if the node has any\n    TraceryNode.prototype.expandChildren = function(childRule, preventRecursion) {\n        this.children = [];\n        this.finishedText = \"\";\n\n        // Set the rule for making children,\n        // and expand it into section\n        this.childRule = childRule;\n        if (this.childRule !== undefined) {\n            var sections = tracery.parse(childRule);\n\n            // Add errors to this\n            if (sections.errors.length > 0) {\n                this.errors = this.errors.concat(sections.errors);\n\n            }\n\n            for (var i = 0; i < sections.length; i++) {\n                this.children[i] = new TraceryNode(this, i, sections[i]);\n                if (!preventRecursion)\n                    this.children[i].expand(preventRecursion);\n\n                // Add in the finished text\n                this.finishedText += this.children[i].finishedText;\n            }\n        } else {\n            // In normal operation, this shouldn't ever happen\n            this.errors.push(\"No child rule provided, can't expand children\");\n        }\n    };\n\n    // Expand this rule (possibly creating children)\n    TraceryNode.prototype.expand = function(preventRecursion) {\n\n        if (!this.isExpanded) {\n            this.isExpanded = true;\n\n            this.expansionErrors = [];\n\n            // Types of nodes\n            // -1: raw, needs parsing\n            //  0: Plaintext\n            //  1: Tag (\"#symbol.mod.mod2.mod3#\" or \"#[pushTarget:pushRule]symbol.mod\")\n            //  2: Action (\"[pushTarget:pushRule], [pushTarget:POP]\", more in the future)\n\n            switch(this.type) {\n            // Raw rule\n            case -1:\n\n                this.expandChildren(this.raw, preventRecursion);\n                break;\n\n            // plaintext, do nothing but copy text into finsihed text\n            case 0:\n                this.finishedText = this.raw;\n                break;\n\n            // Tag\n            case 1:\n                // Parse to find any actions, and figure out what the symbol is\n                this.preactions = [];\n                this.postactions = [];\n\n                var parsed = tracery.parseTag(this.raw);\n\n                // Break into symbol actions and modifiers\n                this.symbol = parsed.symbol;\n                this.modifiers = parsed.modifiers;\n\n                // Create all the preactions from the raw syntax\n                for (var i = 0; i < parsed.preactions.length; i++) {\n                    this.preactions[i] = new NodeAction(this, parsed.preactions[i].raw);\n                }\n                for (var i = 0; i < parsed.postactions.length; i++) {\n                    //   this.postactions[i] = new NodeAction(this, parsed.postactions[i].raw);\n                }\n\n                // Make undo actions for all preactions (pops for each push)\n                for (var i = 0; i < this.preactions.length; i++) {\n                    if (this.preactions[i].type === 0)\n                        this.postactions.push(this.preactions[i].createUndo());\n                }\n\n                // Activate all the preactions\n                for (var i = 0; i < this.preactions.length; i++) {\n                    this.preactions[i].activate();\n                }\n\n                this.finishedText = this.raw;\n\n                // Expand (passing the node, this allows tracking of recursion depth)\n\n                var selectedRule = this.grammar.selectRule(this.symbol, this, this.errors);\n\n                this.expandChildren(selectedRule, preventRecursion);\n\n                // Apply modifiers\n                // TODO: Update parse function to not trigger on hashtags within parenthesis within tags,\n                //   so that modifier parameters can contain tags \"#story.replace(#protagonist#, #newCharacter#)#\"\n                for (var i = 0; i < this.modifiers.length; i++) {\n                    var modName = this.modifiers[i];\n                    var modParams = [];\n                    if (modName.indexOf(\"(\") > 0) {\n                        var regExp = /\\(([^)]+)\\)/;\n\n                        // Todo: ignore any escaped commas.  For now, commas always split\n                        var results = regExp.exec(this.modifiers[i]);\n                        if (!results || results.length < 2) {\n                        } else {\n                            var modParams = results[1].split(\",\");\n                            modName = this.modifiers[i].substring(0, modName.indexOf(\"(\"));\n                        }\n\n                    }\n\n                    var mod = this.grammar.modifiers[modName];\n\n                    // Missing modifier?\n                    if (!mod) {\n                        this.errors.push(\"Missing modifier \" + modName);\n                        this.finishedText += \"((.\" + modName + \"))\";\n                    } else {\n                        this.finishedText = mod(this.finishedText, modParams);\n\n                    }\n\n                }\n\n                // Perform post-actions\n                for (var i = 0; i < this.postactions.length; i++) {\n                    this.postactions[i].activate();\n                }\n                break;\n            case 2:\n\n                // Just a bare action?  Expand it!\n                this.action = new NodeAction(this, this.raw);\n                this.action.activate();\n\n                // No visible text for an action\n                // TODO: some visible text for if there is a failure to perform the action?\n                this.finishedText = \"\";\n                break;\n\n            }\n\n        } else {\n            //console.warn(\"Already expanded \" + this);\n        }\n\n    };\n\n    TraceryNode.prototype.clearEscapeChars = function() {\n\n        this.finishedText = this.finishedText.replace(/\\\\\\\\/g, \"DOUBLEBACKSLASH\").replace(/\\\\/g, \"\").replace(/DOUBLEBACKSLASH/g, \"\\\\\");\n    };\n\n    // An action that occurs when a node is expanded\n    // Types of actions:\n    // 0 Push: [key:rule]\n    // 1 Pop: [key:POP]\n    // 2 function: [functionName(param0,param1)] (TODO!)\n    function NodeAction(node, raw) {\n        /*\n         if (!node)\n         console.warn(\"No node for NodeAction\");\n         if (!raw)\n         console.warn(\"No raw commands for NodeAction\");\n         */\n\n        this.node = node;\n\n        var sections = raw.split(\":\");\n        this.target = sections[0];\n\n        // No colon? A function!\n        if (sections.length === 1) {\n            this.type = 2;\n\n        }\n\n        // Colon? It's either a push or a pop\n        else {\n            this.rule = sections[1];\n            if (this.rule === \"POP\") {\n                this.type = 1;\n            } else {\n                this.type = 0;\n            }\n        }\n    }\n\n\n    NodeAction.prototype.createUndo = function() {\n        if (this.type === 0) {\n            return new NodeAction(this.node, this.target + \":POP\");\n        }\n        // TODO Not sure how to make Undo actions for functions or POPs\n        return null;\n    };\n\n    NodeAction.prototype.activate = function() {\n        var grammar = this.node.grammar;\n        switch(this.type) {\n        case 0:\n            // split into sections (the way to denote an array of rules)\n            this.ruleSections = this.rule.split(\",\");\n            this.finishedRules = [];\n            this.ruleNodes = [];\n            for (var i = 0; i < this.ruleSections.length; i++) {\n                var n = new TraceryNode(grammar, 0, {\n                    type : -1,\n                    raw : this.ruleSections[i]\n                });\n\n                n.expand();\n\n                this.finishedRules.push(n.finishedText);\n            }\n\n            // TODO: escape commas properly\n            grammar.pushRules(this.target, this.finishedRules, this);\n            break;\n        case 1:\n            grammar.popRules(this.target);\n            break;\n        case 2:\n            grammar.flatten(this.target, true);\n            break;\n        }\n\n    };\n\n    NodeAction.prototype.toText = function() {\n        switch(this.type) {\n        case 0:\n            return this.target + \":\" + this.rule;\n        case 1:\n            return this.target + \":POP\";\n        case 2:\n            return \"((some function))\";\n        default:\n            return \"((Unknown Action))\";\n        }\n    };\n\n    // Sets of rules\n    // Can also contain conditional or fallback sets of rulesets)\n    function RuleSet(grammar, raw) {\n        this.raw = raw;\n        this.grammar = grammar;\n        this.falloff = 1;\n\n        if (Array.isArray(raw)) {\n            this.defaultRules = raw;\n        } else if ( typeof raw === 'string' || raw instanceof String) {\n            this.defaultRules = [raw];\n        } else if (raw === 'object') {\n            // TODO: support for conditional and hierarchical rule sets\n        }\n\n    };\n\n    RuleSet.prototype.selectRule = function(errors) {\n        // console.log(\"Get rule\", this.raw);\n        // Is there a conditional?\n        if (this.conditionalRule) {\n            var value = this.grammar.expand(this.conditionalRule, true);\n            // does this value match any of the conditionals?\n            if (this.conditionalValues[value]) {\n                var v = this.conditionalValues[value].selectRule(errors);\n                if (v !== null && v !== undefined)\n                    return v;\n            }\n            // No returned value?\n        }\n\n        // Is there a ranked order?\n        if (this.ranking) {\n            for (var i = 0; i < this.ranking.length; i++) {\n                var v = this.ranking.selectRule();\n                if (v !== null && v !== undefined)\n                    return v;\n            }\n\n            // Still no returned value?\n        }\n\n        if (this.defaultRules !== undefined) {\n            var index = 0;\n            // Select from this basic array of rules\n\n            // Get the distribution from the grammar if there is no other\n            var distribution = this.distribution;\n            if (!distribution)\n                distribution = this.grammar.distribution;\n\n            switch(distribution) {\n            case \"shuffle\":\n\n                // create a shuffle desk\n                if (!this.shuffledDeck || this.shuffledDeck.length === 0) {\n                    // make an array\n                    this.shuffledDeck = fyshuffle(Array.apply(null, {\n                        length : this.defaultRules.length\n                    }).map(Number.call, Number), this.falloff);\n\n                }\n\n                index = this.shuffledDeck.pop();\n\n                break;\n            case \"weighted\":\n                errors.push(\"Weighted distribution not yet implemented\");\n                break;\n            case \"falloff\":\n                errors.push(\"Falloff distribution not yet implemented\");\n                break;\n            default:\n\n                index = Math.floor(Math.pow(Math.random(), this.falloff) * this.defaultRules.length);\n                break;\n            }\n\n            if (!this.defaultUses)\n                this.defaultUses = [];\n            this.defaultUses[index] = ++this.defaultUses[index] || 1;\n            return this.defaultRules[index];\n        }\n\n        errors.push(\"No default rules defined for \" + this);\n        return null;\n\n    };\n\n    RuleSet.prototype.clearState = function() {\n\n        if (this.defaultUses) {\n            this.defaultUses = [];\n        }\n    };\n\n    function fyshuffle(array, falloff) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    var Symbol = function(grammar, key, rawRules) {\n        // Symbols can be made with a single value, and array, or array of objects of (conditions/values)\n        this.key = key;\n        this.grammar = grammar;\n        this.rawRules = rawRules;\n\n        this.baseRules = new RuleSet(this.grammar, rawRules);\n        this.clearState();\n\n    };\n\n    Symbol.prototype.clearState = function() {\n\n        // Clear the stack and clear all ruleset usages\n        this.stack = [this.baseRules];\n\n        this.uses = [];\n        this.baseRules.clearState();\n    };\n\n    Symbol.prototype.pushRules = function(rawRules) {\n        var rules = new RuleSet(this.grammar, rawRules);\n        this.stack.push(rules);\n    };\n\n    Symbol.prototype.popRules = function() {\n        this.stack.pop();\n    };\n\n    Symbol.prototype.selectRule = function(node, errors) {\n        this.uses.push({\n            node : node\n        });\n\n        if (this.stack.length === 0) {\n            errors.push(\"The rule stack for '\" + this.key + \"' is empty, too many pops?\");\n            return \"((\" + this.key + \"))\";\n        }\n\n        return this.stack[this.stack.length - 1].selectRule();\n    };\n\n    Symbol.prototype.getActiveRules = function() {\n        if (this.stack.length === 0) {\n            return null;\n        }\n        return this.stack[this.stack.length - 1].selectRule();\n    };\n\n    Symbol.prototype.rulesToJSON = function() {\n        return JSON.stringify(this.rawRules);\n    };\n\n    var Grammar = function(raw, settings) {\n        this.modifiers = {};\n        this.loadFromRawObj(raw);\n    };\n\n    Grammar.prototype.clearState = function() {\n        var keys = Object.keys(this.symbols);\n        for (var i = 0; i < keys.length; i++) {\n            this.symbols[keys[i]].clearState();\n        }\n    };\n\n    Grammar.prototype.addModifiers = function(mods) {\n\n        // copy over the base modifiers\n        for (var key in mods) {\n            if (mods.hasOwnProperty(key)) {\n                this.modifiers[key] = mods[key];\n            }\n        };\n\n    };\n\n    Grammar.prototype.loadFromRawObj = function(raw) {\n\n        this.raw = raw;\n        this.symbols = {};\n        this.subgrammars = [];\n\n        if (this.raw) {\n            // Add all rules to the grammar\n            for (var key in this.raw) {\n                if (this.raw.hasOwnProperty(key)) {\n                    this.symbols[key] = new Symbol(this, key, this.raw[key]);\n                }\n            }\n        }\n    };\n\n    Grammar.prototype.createRoot = function(rule) {\n        // Create a node and subnodes\n        var root = new TraceryNode(this, 0, {\n            type : -1,\n            raw : rule,\n        });\n\n        return root;\n    };\n\n    Grammar.prototype.expand = function(rule, allowEscapeChars) {\n        var root = this.createRoot(rule);\n        root.expand();\n        if (!allowEscapeChars)\n            root.clearEscapeChars();\n\n        return root;\n    };\n\n    Grammar.prototype.flatten = function(rule, allowEscapeChars) {\n        var root = this.expand(rule, allowEscapeChars);\n\n        return root.finishedText;\n    };\n\n    Grammar.prototype.toJSON = function() {\n        var keys = Object.keys(this.symbols);\n        var symbolJSON = [];\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            symbolJSON.push(' \"' + key + '\" : ' + this.symbols[key].rulesToJSON());\n        }\n        return \"{\\n\" + symbolJSON.join(\",\\n\") + \"\\n}\";\n    };\n\n    // Create or push rules\n    Grammar.prototype.pushRules = function(key, rawRules, sourceAction) {\n\n        if (this.symbols[key] === undefined) {\n            this.symbols[key] = new Symbol(this, key, rawRules);\n            if (sourceAction)\n                this.symbols[key].isDynamic = true;\n        } else {\n            this.symbols[key].pushRules(rawRules);\n        }\n    };\n\n    Grammar.prototype.popRules = function(key) {\n        if (!this.symbols[key])\n            this.errors.push(\"Can't pop: no symbol for key \" + key);\n        this.symbols[key].popRules();\n    };\n\n    Grammar.prototype.selectRule = function(key, node, errors) {\n        if (this.symbols[key]) {\n            var rule = this.symbols[key].selectRule(node, errors);\n\n            return rule;\n        }\n\n        // Failover to alternative subgrammars\n        for (var i = 0; i < this.subgrammars.length; i++) {\n\n            if (this.subgrammars[i].symbols[key])\n                return this.subgrammars[i].symbols[key].selectRule();\n        }\n\n        // No symbol?\n        errors.push(\"No symbol for '\" + key + \"'\");\n        return \"((\" + key + \"))\";\n    };\n\n    // Parses a plaintext rule in the tracery syntax\n    tracery = {\n\n        createGrammar : function(raw) {\n            return new Grammar(raw);\n        },\n\n        // Parse the contents of a tag\n        parseTag : function(tagContents) {\n\n            var parsed = {\n                symbol : undefined,\n                preactions : [],\n                postactions : [],\n                modifiers : []\n            };\n            var sections = tracery.parse(tagContents);\n            var symbolSection = undefined;\n            for (var i = 0; i < sections.length; i++) {\n                if (sections[i].type === 0) {\n                    if (symbolSection === undefined) {\n                        symbolSection = sections[i].raw;\n                    } else {\n                        throw (\"multiple main sections in \" + tagContents);\n                    }\n                } else {\n                    parsed.preactions.push(sections[i]);\n                }\n            }\n\n            if (symbolSection === undefined) {\n                //   throw (\"no main section in \" + tagContents);\n            } else {\n                var components = symbolSection.split(\".\");\n                parsed.symbol = components[0];\n                parsed.modifiers = components.slice(1);\n            }\n            return parsed;\n        },\n\n        parse : function(rule) {\n            var depth = 0;\n            var inTag = false;\n            var sections = [];\n            var escaped = false;\n\n            var errors = [];\n            var start = 0;\n\n            var escapedSubstring = \"\";\n            var lastEscapedChar = undefined;\n\n            if (rule === null) {\n                var sections = [];\n                sections.errors = errors;\n\n                return sections;\n            }\n\n            function createSection(start, end, type) {\n                if (end - start < 1) {\n                    if (type === 1)\n                        errors.push(start + \": empty tag\");\n                    if (type === 2)\n                        errors.push(start + \": empty action\");\n\n                }\n                var rawSubstring;\n                if (lastEscapedChar !== undefined) {\n                    rawSubstring = escapedSubstring + \"\\\\\" + rule.substring(lastEscapedChar + 1, end);\n\n                } else {\n                    rawSubstring = rule.substring(start, end);\n                }\n                sections.push({\n                    type : type,\n                    raw : rawSubstring\n                });\n                lastEscapedChar = undefined;\n                escapedSubstring = \"\";\n            };\n\n            for (var i = 0; i < rule.length; i++) {\n\n                if (!escaped) {\n                    var c = rule.charAt(i);\n\n                    switch(c) {\n\n                    // Enter a deeper bracketed section\n                    case '[':\n                        if (depth === 0 && !inTag) {\n                            if (start < i)\n                                createSection(start, i, 0);\n                            start = i + 1;\n                        }\n                        depth++;\n                        break;\n\n                    case ']':\n                        depth--;\n\n                        // End a bracketed section\n                        if (depth === 0 && !inTag) {\n                            createSection(start, i, 2);\n                            start = i + 1;\n                        }\n                        break;\n\n                    // Hashtag\n                    //   ignore if not at depth 0, that means we are in a bracket\n                    case '#':\n                        if (depth === 0) {\n                            if (inTag) {\n                                createSection(start, i, 1);\n                                start = i + 1;\n                            } else {\n                                if (start < i)\n                                    createSection(start, i, 0);\n                                start = i + 1;\n                            }\n                            inTag = !inTag;\n                        }\n                        break;\n\n                    case '\\\\':\n                        escaped = true;\n                        escapedSubstring = escapedSubstring + rule.substring(start, i);\n                        start = i + 1;\n                        lastEscapedChar = i;\n                        break;\n                    }\n                } else {\n                    escaped = false;\n                }\n            }\n            if (start < rule.length)\n                createSection(start, rule.length, 0);\n\n            if (inTag) {\n                errors.push(\"Unclosed tag\");\n            }\n            if (depth > 0) {\n                errors.push(\"Too many [\");\n            }\n            if (depth < 0) {\n                errors.push(\"Too many ]\");\n            }\n\n            // Strip out empty plaintext sections\n\n            sections = sections.filter(function(section) {\n                if (section.type === 0 && section.raw.length === 0)\n                    return false;\n                return true;\n            });\n            sections.errors = errors;\n            return sections;\n        },\n    };\n\n    function isVowel(c) {\n        var c2 = c.toLowerCase();\n        return (c2 === 'a') || (c2 === 'e') || (c2 === 'i') || (c2 === 'o') || (c2 === 'u');\n    };\n\n    function isAlphaNum(c) {\n        return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9');\n    };\n    function escapeRegExp(str) {\n        return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n    }\n\n    var baseEngModifiers = {\n\n        replace : function(s, params) {\n            //http://stackoverflow.com/questions/1144783/replacing-all-occurrences-of-a-string-in-javascript\n            return s.replace(new RegExp(escapeRegExp(params[0]), 'g'), params[1]);\n        },\n\n        capitalizeAll : function(s) {\n            var s2 = \"\";\n            var capNext = true;\n            for (var i = 0; i < s.length; i++) {\n\n                if (!isAlphaNum(s.charAt(i))) {\n                    capNext = true;\n                    s2 += s.charAt(i);\n                } else {\n                    if (!capNext) {\n                        s2 += s.charAt(i);\n                    } else {\n                        s2 += s.charAt(i).toUpperCase();\n                        capNext = false;\n                    }\n\n                }\n            }\n            return s2;\n        },\n\n        capitalize : function(s) {\n            return s.charAt(0).toUpperCase() + s.substring(1);\n        },\n\n        a : function(s) {\n            if (s.length > 0) {\n                if (s.charAt(0).toLowerCase() === 'u') {\n                    if (s.length > 2) {\n                        if (s.charAt(2).toLowerCase() === 'i')\n                            return \"a \" + s;\n                    }\n                }\n\n                if (isVowel(s.charAt(0))) {\n                    return \"an \" + s;\n                }\n            }\n\n            return \"a \" + s;\n\n        },\n\n        firstS : function(s) {\n            console.log(s);\n            var s2 = s.split(\" \");\n\n            var finished = baseEngModifiers.s(s2[0]) + \" \" + s2.slice(1).join(\" \");\n            console.log(finished);\n            return finished;\n        },\n\n        s : function(s) {\n            switch (s.charAt(s.length -1)) {\n            case 's':\n                return s + \"es\";\n                break;\n            case 'h':\n                return s + \"es\";\n                break;\n            case 'x':\n                return s + \"es\";\n                break;\n            case 'y':\n                if (!isVowel(s.charAt(s.length - 2)))\n                    return s.substring(0, s.length - 1) + \"ies\";\n                else\n                    return s + \"s\";\n                break;\n            default:\n                return s + \"s\";\n            }\n        },\n        ed : function(s) {\n            switch (s.charAt(s.length -1)) {\n            case 's':\n                return s + \"ed\";\n                break;\n            case 'e':\n                return s + \"d\";\n                break;\n            case 'h':\n                return s + \"ed\";\n                break;\n            case 'x':\n                return s + \"ed\";\n                break;\n            case 'y':\n                if (!isVowel(s.charAt(s.length - 2)))\n                    return s.substring(0, s.length - 1) + \"ied\";\n                else\n                    return s + \"d\";\n                break;\n            default:\n                return s + \"ed\";\n            }\n        }\n    };\n\n    tracery.baseEngModifiers = baseEngModifiers; \n    // Externalize\n    tracery.TraceryNode = TraceryNode;\n\n    tracery.Grammar = Grammar;\n    tracery.Symbol = Symbol;\n    tracery.RuleSet = RuleSet;\n    return tracery;\n}();\n\nmodule.exports = tracery; ","import { randInt, interpolate, limNumber, randFloat } from \"./math-functions\";\r\n\r\nexport class Rgba {\r\n    private static readonly MAX_DIF = 255 * 4;\r\n    static randRgb(): Rgba {\r\n        return new Rgba(randInt(0, 256), randInt(0, 256), randInt(0, 256), 255);\r\n    }\r\n    constructor(\r\n        readonly red: number,\r\n        readonly green: number,\r\n        readonly blue: number,\r\n        readonly alpha: number\r\n    ) { }\r\n    interpolate(other: Rgba, t: number): Rgba {\r\n        return new Rgba(\r\n            interpolate(this.red, other.red, t),\r\n            interpolate(this.green, other.green, t),\r\n            interpolate(this.blue, other.blue, t),\r\n            interpolate(this.alpha, other.alpha, t)\r\n        );\r\n    }\r\n    normalise(): Rgba {\r\n        return new Rgba(\r\n            limNumber(0, 255, this.red),\r\n            limNumber(0, 255, this.green),\r\n            limNumber(0, 255, this.blue),\r\n            limNumber(0, 255, this.alpha)\r\n        );\r\n    }\r\n    mutateRgb(value: number): Rgba {\r\n        return new Rgba(\r\n            this.red + randFloat(-value, value),\r\n            this.green + randFloat(-value, value),\r\n            this.blue + randFloat(-value, value),\r\n            this.alpha\r\n        ).normalise();\r\n    }\r\n    difference(other: Rgba): number {\r\n        return ((\r\n            Math.abs(this.red - other.red) +\r\n            Math.abs(this.green - other.green) +\r\n            Math.abs(this.blue - other.blue) +\r\n            Math.abs(this.alpha - other.alpha)\r\n        ) / Rgba.MAX_DIF);\r\n    }\r\n}\r\n\r\nexport class Canvas {\r\n    readonly node: HTMLCanvasElement;\r\n    readonly ctx: CanvasRenderingContext2D;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        this.node = node || document.createElement(\"canvas\");\r\n        this.node.width = width;\r\n        this.node.height = height;\r\n        this.ctx = this.node.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    }\r\n}\r\n\r\nexport class PixelsData extends Canvas {\r\n    readonly data: ImageData;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        super(width, height, node);\r\n        this.data = this.ctx.createImageData(\r\n            this.node.width,\r\n            this.node.height\r\n        );\r\n    }\r\n    setPixel(x: number, y: number, color: Rgba) {\r\n        const POINTER = (y * this.data.width + x) * 4;\r\n        this.data.data[POINTER] = color.red;\r\n        this.data.data[POINTER + 1] = color.green;\r\n        this.data.data[POINTER + 2] = color.blue;\r\n        this.data.data[POINTER + 3] = color.alpha;\r\n    }\r\n    update() {\r\n        this.ctx.putImageData(this.data, 0, 0);\r\n        return this;\r\n    }\r\n}","export function* range(from: number, to: number) {\r\n    while (from < to) {\r\n        yield from++;\r\n    }\r\n}\r\n\r\nexport function randFloat(bottom: number, top: number) {\r\n    return Math.random() * (top - bottom) + bottom;\r\n}\r\n\r\nexport function randInt(bottom: number, top: number) {\r\n    return Math.floor(randFloat(bottom, top));\r\n}\r\n\r\nexport function randChoice<T>(arr: T[]): T {\r\n    return arr[randInt(0, arr.length)];\r\n}\r\n\r\nexport function fixNumber(min: number, max: number, number: number): number {\r\n    return number >= min ? number % max : max - (-number % max);\r\n}\r\n\r\nexport function normalizeNumber(\r\n    min: number,\r\n    max: number,\r\n    number: number\r\n): number {\r\n    return (number - min) / (max - min);\r\n}\r\n\r\nexport function limNumber(min: number, max: number, number: number): number {\r\n    return Math.max(Math.min(number, max), min);\r\n}\r\n\r\nexport function interpolate(a: number, b: number, t: number): number {\r\n    return a + (b - a) * t;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './style.css';\r\n\r\nimport { Canvas, PixelsData, Rgba } from \"./drawing\";\r\nimport { normalizeNumber } from \"./math-functions\";\r\nimport { createGrammar } from 'tracery-grammar';\r\n\r\nconst W = 256;\r\nconst H = 256;\r\nconst PX = 2;\r\n\r\nconst sin = Math.sin;\r\nconst asin = Math.asin;\r\nconst cos = Math.cos;\r\nconst acos = Math.acos;\r\nconst tan = Math.tan;\r\nconst tanh = Math.tanh;\r\nconst atan = Math.atan;\r\nconst hypot = Math.hypot;\r\nconst round = Math.round;\r\nconst ceil = Math.ceil;\r\nconst floor = Math.floor;\r\nconst rand = Math.random;\r\nconst abs = Math.abs;\r\nconst sqrt = Math.sqrt;\r\nconst cbrt = Math.cbrt;\r\n\r\nconst avg = (...args: number[]) => args.reduce((a, b) => a + b) / args.length;\r\n\r\nfunction generate(min: number) {\r\n    let result: string;\r\n    do {\r\n        result = grammar.flatten('#initial#');\r\n    } while (result.length < min);\r\n    return result;\r\n}\r\n\r\n\r\nfunction encoded(s: string) {\r\n    s.replace(\"+\", encodeURI(\"+\")).replace(\"=\", encodeURI(\"=\")).replace(\"&\", encodeURI(\"&\")).replace(\"?\", encodeURI(\"?\")).replace(\"%\", encodeURI(\"%\"));\r\n    return s;\r\n}\r\n\r\nfunction copyToBuffer() {\r\n    let formulaInputNode = document\r\n        .querySelector<HTMLInputElement>('#formula')!;\r\n    var searchParams = new URLSearchParams(window.location.search);\r\n    searchParams.delete(\"formula\");\r\n    searchParams.append(\"formula\", encodeURI(formulaInputNode.value));\r\n    navigator.clipboard.writeText(window.location.hostname + (window.location.port.length ? \":\" : \"\") + window.location.port + window.location.pathname + \"?\" + searchParams.toString()).then(function () {\r\n        console.log('Async: Copying to clipboard was successful!');\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\nfunction isBrucketsCorrect(data: string) {\r\n\r\n    const warningField = document.getElementById(\"warning\")!;\r\n    let counter = 0;\r\n    let isCorrect = true;\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i] == \"(\") {\r\n            counter++;\r\n        } else if (data[i] == \")\") {\r\n            counter--;\r\n        }\r\n        if (counter < 0) {\r\n            isCorrect = false;\r\n        }\r\n    }\r\n    console.log(counter);\r\n    isCorrect = isCorrect && (counter == 0);\r\n    if (!isCorrect) {\r\n        warningField.innerText = \" incorrect Bracket Sequences\";\r\n        return false;\r\n    } else {\r\n        warningField.innerText = \"\";\r\n        return true;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst grammar = createGrammar({\r\n    'initial': ['#function#', '#number#'],\r\n    'function': [\r\n        '#func-1#(#initial#)',\r\n        '#func-2#(#initial#, #initial#)',\r\n        '#func-3#(#initial#, #initial#, #initial#)',\r\n        '#initial# #operand# #initial#',\r\n        '(#initial#)'\r\n    ],\r\n    'func-1': [\r\n        'sin',\r\n        'cos',\r\n        'tan',\r\n        'tanh',\r\n        'asin',\r\n        'acos',\r\n        'atan',\r\n        'round',\r\n        'ceil',\r\n        'floor',\r\n        'abs'\r\n    ],\r\n    'func-2': ['hypot'],\r\n    'func-3': ['hypot'],\r\n    'operand': ['+', '-', '*', '/', '&', '|', '^', '&&', '||', '<<', '>>', '%', '>', '<', '=='],\r\n    'number': ['x', 'y', 't']\r\n});\r\n\r\nonload = () => {\r\n\r\n    type Formula = (x: number, y: number, t: number) => number;\r\n\r\n    function onInputFromula() {\r\n\r\n        if (!isBrucketsCorrect(formulaInputNode.value)) { return };\r\n\r\n        formula = eval(`(x, y, t) => ${formulaInputNode.value}`);\r\n        t = 0;\r\n    }\r\n\r\n    const imgNode = document.querySelector<HTMLCanvasElement>('#img')!;\r\n    const formulaInputNode = document\r\n        .querySelector<HTMLInputElement>('#formula')!;\r\n    formulaInputNode.oninput = onInputFromula;\r\n    const randomNode = document.querySelector<HTMLButtonElement>('#generate-random')!;\r\n    randomNode.onclick = () => {\r\n        const randFormula = generate(50);\r\n        formulaInputNode.value = randFormula;\r\n        onInputFromula();\r\n    };\r\n    const share = document.querySelector<HTMLButtonElement>('#share')!;\r\n    share.onclick = copyToBuffer;\r\n    const minOutput = document.querySelector('#min')!;\r\n    const maxOutput = document.querySelector('#max')!;\r\n    const timeOutput = document.querySelector('#time')!;\r\n    const errOutput = document.querySelector('#err')!;\r\n\r\n    const canvas = new Canvas(\r\n        W * PX,\r\n        H * PX,\r\n        imgNode\r\n    );\r\n\r\n    canvas.ctx.imageSmoothingEnabled = false;\r\n\r\n    const pixels = new PixelsData(W, H);\r\n    let formula: (x: number, y: number, t: number) => number;\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    if (urlParams.has(\"formula\")) {\r\n        formulaInputNode.value = decodeURI(urlParams.get(\"formula\")!);\r\n        eval(`formula = (x, y, t) => ${decodeURI(urlParams.get(\"formula\")!)}`);\r\n    } else {\r\n        eval(`formula = (x, y, t) => ${formulaInputNode.value}`);\r\n    }\r\n\r\n    let t = 0;\r\n    setInterval(() => {\r\n\r\n        const results: number[][] = [];\r\n\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n\r\n        try {\r\n            errOutput.innerHTML = '';\r\n            for (let x = 0; x < W; x++) {\r\n                results[x] = [];\r\n                for (let y = 0; y < H; y++) {\r\n                    const result = formula((x - W / 2) || 1, (y - H / 2) || 1, t || 1);\r\n                    results[x][y] = result;\r\n                    min = Math.min(min, result);\r\n                    max = Math.max(max, result);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            errOutput.innerHTML = e;\r\n        }\r\n\r\n        minOutput.innerHTML = min.toString();\r\n        maxOutput.innerHTML = max.toString();\r\n        timeOutput.innerHTML = t.toString();\r\n\r\n        for (let x = 0; x < W; x++) {\r\n            for (let y = 0; y < H; y++) {\r\n                const B = normalizeNumber(min, max, results[x][y]);\r\n                pixels.setPixel(x, y, new Rgba(0, 0, 0, 255).interpolate(new Rgba(255, 255, 255, 255), B));\r\n            }\r\n        }\r\n\r\n        pixels.update();\r\n        canvas.ctx.drawImage(\r\n            pixels.node,\r\n            0,\r\n            0,\r\n            canvas.node.width, canvas.node.height\r\n        );\r\n\r\n        t += 1;\r\n    });\r\n\r\n};"],"sourceRoot":""}