{"version":3,"sources":["webpack://artifical-life/./node_modules/esprima/dist/esprima.js","webpack://artifical-life/./node_modules/tracery-grammar/tracery.js","webpack://artifical-life/./src/drawing.ts","webpack://artifical-life/./src/math-functions.ts","webpack://artifical-life/webpack/bootstrap","webpack://artifical-life/./src/main.ts"],"names":["factory","modules","installedModules","moduleId","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","comment_handler_1","jsx_parser_1","parser_1","tokenizer_1","parse","code","options","delegate","commentHandler","proxyDelegate","node","metadata","visit","parserDelegate","collectComment","comment","attachComment","CommentHandler","attach","parser","isModule","sourceType","jsx","JSXParser","Parser","ast","parseModule","parseScript","comments","config","tokens","tolerant","errors","errorHandler","parsingOptions","tokenize","tokenizer","Tokenizer","token","getNextToken","push","e","tolerate","syntax_1","Syntax","version","this","stack","leading","trailing","prototype","insertInnerComments","type","BlockStatement","body","length","innerComments","i","entry","end","offset","start","unshift","splice","findTrailingComments","trailingComments","entry_1","firstComment","range","findLeadingComments","target","leadingComments","pop","visitNode","Program","visitComment","loc","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForOfStatement","ForInStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","extendStatics","__extends","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","create","character_1","JSXNode","jsx_syntax_1","Node","token_1","xhtml_entities_1","getQualifiedElementName","elementName","qualifiedName","JSXSyntax","JSXIdentifier","name","JSXNamespacedName","ns","namespace","JSXMemberExpression","expr","object","property","TokenName","_super","parsePrimaryExpression","match","parseJSXRoot","startJSX","scanner","index","startMarker","lineNumber","line","lineStart","column","finishJSX","nextToken","reenterJSX","expectJSX","createJSXNode","collectComments","createJSXChildNode","scanXHTMLEntity","quote","result","valid","terminated","numeric","hex","eof","ch","source","Character","isDecimalDigit","charCodeAt","isHexDigit","str","substr","String","fromCharCode","parseInt","XHTMLEntities","lexJSX","cp","n1","n2","isIdentifierStart","isIdentifierPart","slice","lex","nextJSXToken","lastMarker","convertToken","nextJSXText","text","isLineTerminator","peekJSXToken","state","saveState","scanComments","next","restoreState","throwUnexpectedToken","matchJSX","parseJSXIdentifier","finalize","parseJSXElementName","name_1","parseJSXAttributeName","attributeName","identifier","name_2","parseJSXStringLiteralAttribute","raw","getTokenRaw","parseJSXExpressionAttribute","tolerateError","expression","parseAssignmentExpression","JSXExpressionContainer","parseJSXAttributeValue","parseJSXElement","parseJSXNameValueAttribute","JSXAttribute","parseJSXSpreadAttribute","argument","JSXSpreadAttribute","parseJSXAttributes","attributes","attribute","parseJSXOpeningElement","selfClosing","JSXOpeningElement","parseJSXBoundaryElement","name_3","JSXClosingElement","parseJSXEmptyExpression","JSXEmptyExpression","parseJSXExpressionContainer","parseJSXChildren","children","child","JSXText","container","parseComplexJSXElement","el","concat","element","opening","JSXElement","closing","open_1","isStartOfExpression","Regex","NonAsciiIdentifierStart","NonAsciiIdentifierPart","fromCodePoint","isWhiteSpace","indexOf","test","isOctalDigit","openingElement","closingElement","elements","params","generator","async","operator","left","right","AsyncArrowFunctionExpression","AsyncFunctionDeclaration","AsyncFunctionExpression","logical","label","callee","args","arguments","param","superClass","ComputedMemberExpression","computed","consequent","alternate","Directive","directive","declaration","specifiers","local","exported","each","init","update","imported","meta","key","kind","isStatic","static","Module","properties","method","shorthand","RegexLiteral","pattern","flags","regex","Script","expressions","StaticMemberExpression","discriminant","cases","tag","quasi","tail","quasis","block","handler","finalizer","prefix","declarations","assert_1","error_handler_1","messages_1","scanner_1","ArrowParameterPlaceHolder","ErrorHandler","Scanner","trackComment","operatorPrecedence","lookahead","hasLineTerminator","context","await","allowIn","allowStrictDirective","allowYield","firstCoverInitializedNameError","isAssignmentTarget","isBindingElement","inFunctionBody","inIteration","inSwitch","labelSet","strict","throwError","messageFormat","values","_i","msg","replace","whole","idx","assert","createError","unexpectedTokenError","message","Messages","UnexpectedToken","UnexpectedEOS","UnexpectedIdentifier","UnexpectedNumber","UnexpectedString","UnexpectedTemplate","isFutureReservedWord","UnexpectedReserved","isStrictModeReservedWord","StrictReservedWord","lastMarkerLineStart","tolerateUnexpectedToken","multiLine","t","nextRegexToken","scanRegExp","createNode","startNode","lastLineStart","marker","expect","expectCommaSeparator","expectKeyword","keyword","matchKeyword","matchContextualKeyword","matchAssign","op","isolateCoverGrammar","parseFunction","previousIsBindingElement","previousIsAssignmentTarget","previousFirstCoverInitializedNameError","inheritCoverGrammar","consumeSemicolon","matchAsyncFunction","parseFunctionExpression","octal","StrictOctalLiteral","parseTemplateLiteral","parseGroupExpression","parseArrayInitializer","parseObjectInitializer","parseIdentifierName","parseClassExpression","parseSpreadElement","arg","parsePropertyMethod","previousStrict","previousAllowStrictDirective","simple","parseFunctionSourceElements","firstRestricted","stricted","parsePropertyMethodFunction","previousAllowYield","parseFormalParameters","parsePropertyMethodAsyncFunction","previousAwait","parseObjectPropertyKey","isPropertyKey","parseObjectProperty","hasProto","isAsync","lookaheadPropertyKey","qualifiedPropertyName","parseGetterMethod","parseSetterMethod","parseGeneratorMethod","DuplicateProtoProperty","parseTemplateHead","head","cooked","parseTemplateElement","parseExpression","reinterpretExpressionAsPattern","startToken","parseRestElement","arrow","parameters","parseArguments","isIdentifierName","parseNewExpression","parseLeftHandSideExpression","parseAsyncArgument","parseAsyncArguments","parseLeftHandSideExpressionAllowCall","maybeAsync","previousAllowIn","asyncArrow","parseSuper","parseUpdateExpression","parseUnaryExpression","isRestrictedWord","StrictLHSPrefix","InvalidLHSInAssignment","StrictLHSPostfix","parseAwaitExpression","StrictDelete","parseExponentiationExpression","binaryPrecedence","parseBinaryExpression","prec","markers","precedences","parseConditionalExpression","checkPatternParam","validateParam","reinterpretAsCoverFormalsList","paramSet","StrictParamDupe","parseYieldExpression","list","StrictLHSAssignment","parseStatementListItem","statement","IllegalExportDeclaration","parseExportDeclaration","IllegalImportDeclaration","parseImportDeclaration","parseLexicalDeclaration","inFor","parseFunctionDeclaration","parseClassDeclaration","isLexicalDeclaration","parseStatement","parseBlock","parseLexicalBinding","parsePattern","StrictVarName","DeclarationMissingInitializer","parseBindingList","parseBindingRestElement","parseArrayPattern","parsePatternWithDefault","parsePropertyPattern","keyToken","parseVariableIdentifier","parseObjectPattern","LetInLexicalBinding","parseVariableDeclaration","parseVariableDeclarationList","opt","parseVariableStatement","parseEmptyStatement","parseExpressionStatement","parseIfClause","StrictFunction","parseIfStatement","parseDoWhileStatement","previousInIteration","parseWhileStatement","parseForStatement","forIn","decl","ForInOfLoopInitializer","initStartToken","InvalidLHSInForIn","InvalidLHSInForLoop","initSeq","parseContinueStatement","UnknownLabel","IllegalContinue","parseBreakStatement","IllegalBreak","parseReturnStatement","IllegalReturn","parseWithStatement","StrictModeWith","parseSwitchCase","parseSwitchStatement","previousInSwitch","defaultFound","clause","MultipleDefaultsInSwitch","parseLabelledStatement","Redeclaration","GeneratorInLegacyContext","parseThrowStatement","NewlineAfterThrow","parseCatchClause","paramMap","DuplicateBinding","StrictCatchVariable","parseFinallyClause","parseTryStatement","NoCatchOrFinally","parseDebuggerStatement","parseDirectivePrologues","previousLabelSet","previousInFunctionBody","StrictParamName","enumerable","writable","configurable","DefaultRestParameter","ParameterAfterRestParameter","parseFormalParameter","identifierIsOptional","isGenerator","StrictFunctionName","previousAllowAwait","formalParameters","parseDirective","IllegalLanguageModeDirective","BadGetterArity","BadSetterArity","BadSetterRestParameter","parseClassElement","hasConstructor","punctuator","ConstructorIsAsync","StaticPrototype","ConstructorSpecialMethod","DuplicateConstructor","parseClassElementList","parseClassBody","elementList","classBody","parseModuleSpecifier","InvalidModuleSpecifier","parseImportSpecifier","parseNamedImports","parseImportDefaultSpecifier","parseImportNamespaceSpecifier","NoAsAfterImportNamespace","src","MissingFromClause","parseExportSpecifier","exportDeclaration","isExportFromIdentifier","condition","Error","recordError","error","constructError","base","col","description","InvalidEscapedReservedWord","InvalidHexEscapeSequence","InvalidRegExp","TemplateOctalLiteral","UnexpectedTokenIllegal","UnterminatedRegExp","hexValue","toLowerCase","octalValue","curlyStack","skipSingleLineComment","skipMultiLineComment","isKeyword","codePointAt","second","scanHexEscape","len","scanUnicodeCodePointEscape","getIdentifier","getComplexIdentifier","octalToDecimal","scanIdentifier","restore","scanPunctuator","scanHexLiteral","num","scanBinaryLiteral","scanOctalLiteral","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","unescaped_1","unescaped","octToDec","scanTemplate","rawOffset","unescaped_2","testRegExp","tmp","self","$0","$1","$2","codePoint","RegExp","exception","scanRegExpBody","classMarker","scanRegExpFlags","char","quot","amp","apos","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","lang","rang","Reader","curly","paren","beforeFunctionExpression","isRegexStart","previous","check","trackRange","trackLoc","buffer","reader","shift","tracery","TraceryNode","parent","childIndex","settings","undefined","Grammar","grammar","depth","isExpanded","NodeAction","sections","split","rule","RuleSet","falloff","isArray","defaultRules","toString","expandChildren","childRule","preventRecursion","finishedText","expand","expansionErrors","preactions","postactions","parsed","parseTag","symbol","modifiers","createUndo","activate","selectedRule","selectRule","modName","modParams","results","exec","substring","mod","action","clearEscapeChars","ruleSections","finishedRules","ruleNodes","n","pushRules","popRules","flatten","toText","conditionalRule","conditionalValues","v","ranking","distribution","shuffledDeck","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","fyshuffle","apply","map","Number","pow","defaultUses","clearState","Symbol","rawRules","baseRules","uses","rules","getActiveRules","rulesToJSON","JSON","stringify","loadFromRawObj","isVowel","c2","keys","symbols","addModifiers","mods","subgrammars","createRoot","allowEscapeChars","root","toJSON","symbolJSON","join","sourceAction","isDynamic","baseEngModifiers","s","capitalizeAll","s2","capNext","charAt","toUpperCase","capitalize","a","firstS","console","log","finished","ed","createGrammar","tagContents","symbolSection","components","inTag","escaped","escapedSubstring","lastEscapedChar","createSection","rawSubstring","filter","section","red","green","blue","randRgb","Rgba","randInt","interpolate","other","normalise","limNumber","mutateRgb","randFloat","difference","abs","MAX_DIF","width","height","document","createElement","ctx","getContext","Canvas","data","createImageData","setPixel","x","y","color","POINTER","putImageData","PixelsData","bottom","top","from","to","arr","min","max","number","__webpack_module_cache__","__webpack_require__","__webpack_modules__","isValidFormula","formula","getDrawingFunction","textFormula","eval","_x","_y","_t","normalizeData","newData","normalizeNumber","generateData","time","resultData","Infinity","resultText","outer","W","H","x2","y2","dataToImage","pixels","B","generateFormula","copyToBuffer","formulaInputNode","querySelector","searchParams","URLSearchParams","window","location","search","delete","append","encodeURI","navigator","clipboard","writeText","hostname","port","pathname","then","err","PX","sin","asin","cos","acos","tan","tanh","atan","atan2","hypot","round","ceil","rand","sqrt","cbrt","avg","reduce","addEventListener","onInputFormula","canvas","imageSmoothingEnabled","randFormula","minOutput","maxOutput","timeOutput","resultOutput","urlParams","has","decodeURI","get","setInterval","innerHTML","drawImage"],"mappings":"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","file":"bundle-9c1b6ddfbc463eaf48e8.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n/* istanbul ignore next */\n\telse if(typeof exports === 'object')\n\t\texports[\"esprima\"] = factory();\n\telse\n\t\troot[\"esprima\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar comment_handler_1 = __webpack_require__(1);\n\tvar jsx_parser_1 = __webpack_require__(3);\n\tvar parser_1 = __webpack_require__(8);\n\tvar tokenizer_1 = __webpack_require__(15);\n\tfunction parse(code, options, delegate) {\n\t    var commentHandler = null;\n\t    var proxyDelegate = function (node, metadata) {\n\t        if (delegate) {\n\t            delegate(node, metadata);\n\t        }\n\t        if (commentHandler) {\n\t            commentHandler.visit(node, metadata);\n\t        }\n\t    };\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\n\t    var collectComment = false;\n\t    if (options) {\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\n\t        if (collectComment || attachComment) {\n\t            commentHandler = new comment_handler_1.CommentHandler();\n\t            commentHandler.attach = attachComment;\n\t            options.comment = true;\n\t            parserDelegate = proxyDelegate;\n\t        }\n\t    }\n\t    var isModule = false;\n\t    if (options && typeof options.sourceType === 'string') {\n\t        isModule = (options.sourceType === 'module');\n\t    }\n\t    var parser;\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n\t    }\n\t    else {\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\n\t    }\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\n\t    var ast = program;\n\t    if (collectComment && commentHandler) {\n\t        ast.comments = commentHandler.comments;\n\t    }\n\t    if (parser.config.tokens) {\n\t        ast.tokens = parser.tokens;\n\t    }\n\t    if (parser.config.tolerant) {\n\t        ast.errors = parser.errorHandler.errors;\n\t    }\n\t    return ast;\n\t}\n\texports.parse = parse;\n\tfunction parseModule(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'module';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseModule = parseModule;\n\tfunction parseScript(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'script';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseScript = parseScript;\n\tfunction tokenize(code, options, delegate) {\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\n\t    var tokens;\n\t    tokens = [];\n\t    try {\n\t        while (true) {\n\t            var token = tokenizer.getNextToken();\n\t            if (!token) {\n\t                break;\n\t            }\n\t            if (delegate) {\n\t                token = delegate(token);\n\t            }\n\t            tokens.push(token);\n\t        }\n\t    }\n\t    catch (e) {\n\t        tokenizer.errorHandler.tolerate(e);\n\t    }\n\t    if (tokenizer.errorHandler.tolerant) {\n\t        tokens.errors = tokenizer.errors();\n\t    }\n\t    return tokens;\n\t}\n\texports.tokenize = tokenize;\n\tvar syntax_1 = __webpack_require__(2);\n\texports.Syntax = syntax_1.Syntax;\n\t// Sync with *.json manifests.\n\texports.version = '4.0.1';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\tvar CommentHandler = (function () {\n\t    function CommentHandler() {\n\t        this.attach = false;\n\t        this.comments = [];\n\t        this.stack = [];\n\t        this.leading = [];\n\t        this.trailing = [];\n\t    }\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n\t        //  innnerComments for properties empty block\n\t        //  `function a() {/** comments **\\/}`\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n\t            var innerComments = [];\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\n\t                var entry = this.leading[i];\n\t                if (metadata.end.offset >= entry.start) {\n\t                    innerComments.unshift(entry.comment);\n\t                    this.leading.splice(i, 1);\n\t                    this.trailing.splice(i, 1);\n\t                }\n\t            }\n\t            if (innerComments.length) {\n\t                node.innerComments = innerComments;\n\t            }\n\t        }\n\t    };\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\n\t        var trailingComments = [];\n\t        if (this.trailing.length > 0) {\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\n\t                var entry_1 = this.trailing[i];\n\t                if (entry_1.start >= metadata.end.offset) {\n\t                    trailingComments.unshift(entry_1.comment);\n\t                }\n\t            }\n\t            this.trailing.length = 0;\n\t            return trailingComments;\n\t        }\n\t        var entry = this.stack[this.stack.length - 1];\n\t        if (entry && entry.node.trailingComments) {\n\t            var firstComment = entry.node.trailingComments[0];\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n\t                trailingComments = entry.node.trailingComments;\n\t                delete entry.node.trailingComments;\n\t            }\n\t        }\n\t        return trailingComments;\n\t    };\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\n\t        var leadingComments = [];\n\t        var target;\n\t        while (this.stack.length > 0) {\n\t            var entry = this.stack[this.stack.length - 1];\n\t            if (entry && entry.start >= metadata.start.offset) {\n\t                target = entry.node;\n\t                this.stack.pop();\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (target) {\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\n\t            for (var i = count - 1; i >= 0; --i) {\n\t                var comment = target.leadingComments[i];\n\t                if (comment.range[1] <= metadata.start.offset) {\n\t                    leadingComments.unshift(comment);\n\t                    target.leadingComments.splice(i, 1);\n\t                }\n\t            }\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\n\t                delete target.leadingComments;\n\t            }\n\t            return leadingComments;\n\t        }\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\n\t            var entry = this.leading[i];\n\t            if (entry.start <= metadata.start.offset) {\n\t                leadingComments.unshift(entry.comment);\n\t                this.leading.splice(i, 1);\n\t            }\n\t        }\n\t        return leadingComments;\n\t    };\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n\t            return;\n\t        }\n\t        this.insertInnerComments(node, metadata);\n\t        var trailingComments = this.findTrailingComments(metadata);\n\t        var leadingComments = this.findLeadingComments(metadata);\n\t        if (leadingComments.length > 0) {\n\t            node.leadingComments = leadingComments;\n\t        }\n\t        if (trailingComments.length > 0) {\n\t            node.trailingComments = trailingComments;\n\t        }\n\t        this.stack.push({\n\t            node: node,\n\t            start: metadata.start.offset\n\t        });\n\t    };\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\n\t        var comment = {\n\t            type: type,\n\t            value: node.value\n\t        };\n\t        if (node.range) {\n\t            comment.range = node.range;\n\t        }\n\t        if (node.loc) {\n\t            comment.loc = node.loc;\n\t        }\n\t        this.comments.push(comment);\n\t        if (this.attach) {\n\t            var entry = {\n\t                comment: {\n\t                    type: type,\n\t                    value: node.value,\n\t                    range: [metadata.start.offset, metadata.end.offset]\n\t                },\n\t                start: metadata.start.offset\n\t            };\n\t            if (node.loc) {\n\t                entry.comment.loc = node.loc;\n\t            }\n\t            node.type = type;\n\t            this.leading.push(entry);\n\t            this.trailing.push(entry);\n\t        }\n\t    };\n\t    CommentHandler.prototype.visit = function (node, metadata) {\n\t        if (node.type === 'LineComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (node.type === 'BlockComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (this.attach) {\n\t            this.visitNode(node, metadata);\n\t        }\n\t    };\n\t    return CommentHandler;\n\t}());\n\texports.CommentHandler = CommentHandler;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.Syntax = {\n\t    AssignmentExpression: 'AssignmentExpression',\n\t    AssignmentPattern: 'AssignmentPattern',\n\t    ArrayExpression: 'ArrayExpression',\n\t    ArrayPattern: 'ArrayPattern',\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\n\t    AwaitExpression: 'AwaitExpression',\n\t    BlockStatement: 'BlockStatement',\n\t    BinaryExpression: 'BinaryExpression',\n\t    BreakStatement: 'BreakStatement',\n\t    CallExpression: 'CallExpression',\n\t    CatchClause: 'CatchClause',\n\t    ClassBody: 'ClassBody',\n\t    ClassDeclaration: 'ClassDeclaration',\n\t    ClassExpression: 'ClassExpression',\n\t    ConditionalExpression: 'ConditionalExpression',\n\t    ContinueStatement: 'ContinueStatement',\n\t    DoWhileStatement: 'DoWhileStatement',\n\t    DebuggerStatement: 'DebuggerStatement',\n\t    EmptyStatement: 'EmptyStatement',\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\n\t    ExportSpecifier: 'ExportSpecifier',\n\t    ExpressionStatement: 'ExpressionStatement',\n\t    ForStatement: 'ForStatement',\n\t    ForOfStatement: 'ForOfStatement',\n\t    ForInStatement: 'ForInStatement',\n\t    FunctionDeclaration: 'FunctionDeclaration',\n\t    FunctionExpression: 'FunctionExpression',\n\t    Identifier: 'Identifier',\n\t    IfStatement: 'IfStatement',\n\t    ImportDeclaration: 'ImportDeclaration',\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n\t    ImportSpecifier: 'ImportSpecifier',\n\t    Literal: 'Literal',\n\t    LabeledStatement: 'LabeledStatement',\n\t    LogicalExpression: 'LogicalExpression',\n\t    MemberExpression: 'MemberExpression',\n\t    MetaProperty: 'MetaProperty',\n\t    MethodDefinition: 'MethodDefinition',\n\t    NewExpression: 'NewExpression',\n\t    ObjectExpression: 'ObjectExpression',\n\t    ObjectPattern: 'ObjectPattern',\n\t    Program: 'Program',\n\t    Property: 'Property',\n\t    RestElement: 'RestElement',\n\t    ReturnStatement: 'ReturnStatement',\n\t    SequenceExpression: 'SequenceExpression',\n\t    SpreadElement: 'SpreadElement',\n\t    Super: 'Super',\n\t    SwitchCase: 'SwitchCase',\n\t    SwitchStatement: 'SwitchStatement',\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\n\t    TemplateElement: 'TemplateElement',\n\t    TemplateLiteral: 'TemplateLiteral',\n\t    ThisExpression: 'ThisExpression',\n\t    ThrowStatement: 'ThrowStatement',\n\t    TryStatement: 'TryStatement',\n\t    UnaryExpression: 'UnaryExpression',\n\t    UpdateExpression: 'UpdateExpression',\n\t    VariableDeclaration: 'VariableDeclaration',\n\t    VariableDeclarator: 'VariableDeclarator',\n\t    WhileStatement: 'WhileStatement',\n\t    WithStatement: 'WithStatement',\n\t    YieldExpression: 'YieldExpression'\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar character_1 = __webpack_require__(4);\n\tvar JSXNode = __webpack_require__(5);\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\tvar Node = __webpack_require__(7);\n\tvar parser_1 = __webpack_require__(8);\n\tvar token_1 = __webpack_require__(13);\n\tvar xhtml_entities_1 = __webpack_require__(14);\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\tfunction getQualifiedElementName(elementName) {\n\t    var qualifiedName;\n\t    switch (elementName.type) {\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n\t            var id = elementName;\n\t            qualifiedName = id.name;\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n\t            var ns = elementName;\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\n\t                getQualifiedElementName(ns.name);\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n\t            var expr = elementName;\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\n\t                getQualifiedElementName(expr.property);\n\t            break;\n\t        /* istanbul ignore next */\n\t        default:\n\t            break;\n\t    }\n\t    return qualifiedName;\n\t}\n\tvar JSXParser = (function (_super) {\n\t    __extends(JSXParser, _super);\n\t    function JSXParser(code, options, delegate) {\n\t        return _super.call(this, code, options, delegate) || this;\n\t    }\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n\t    };\n\t    JSXParser.prototype.startJSX = function () {\n\t        // Unwind the scanner before the lookahead token.\n\t        this.scanner.index = this.startMarker.index;\n\t        this.scanner.lineNumber = this.startMarker.line;\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n\t    };\n\t    JSXParser.prototype.finishJSX = function () {\n\t        // Prime the next lookahead.\n\t        this.nextToken();\n\t    };\n\t    JSXParser.prototype.reenterJSX = function () {\n\t        this.startJSX();\n\t        this.expectJSX('}');\n\t        // Pop the closing '}' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t    };\n\t    JSXParser.prototype.createJSXNode = function () {\n\t        this.collectComments();\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.createJSXChildNode = function () {\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\n\t        var result = '&';\n\t        var valid = true;\n\t        var terminated = false;\n\t        var numeric = false;\n\t        var hex = false;\n\t        while (!this.scanner.eof() && valid && !terminated) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === quote) {\n\t                break;\n\t            }\n\t            terminated = (ch === ';');\n\t            result += ch;\n\t            ++this.scanner.index;\n\t            if (!terminated) {\n\t                switch (result.length) {\n\t                    case 2:\n\t                        // e.g. '&#123;'\n\t                        numeric = (ch === '#');\n\t                        break;\n\t                    case 3:\n\t                        if (numeric) {\n\t                            // e.g. '&#x41;'\n\t                            hex = (ch === 'x');\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n\t                            numeric = numeric && !hex;\n\t                        }\n\t                        break;\n\t                    default:\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t        if (valid && terminated && result.length > 2) {\n\t            // e.g. '&#x41;' becomes just '#x41'\n\t            var str = result.substr(1, result.length - 2);\n\t            if (numeric && str.length > 1) {\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\n\t            }\n\t            else if (hex && str.length > 2) {\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n\t            }\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n\t                result = xhtml_entities_1.XHTMLEntities[str];\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\t    JSXParser.prototype.lexJSX = function () {\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\n\t        // < > / : = { }\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n\t            var value = this.scanner.source[this.scanner.index++];\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index - 1,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // \" '\n\t        if (cp === 34 || cp === 39) {\n\t            var start = this.scanner.index;\n\t            var quote = this.scanner.source[this.scanner.index++];\n\t            var str = '';\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source[this.scanner.index++];\n\t                if (ch === quote) {\n\t                    break;\n\t                }\n\t                else if (ch === '&') {\n\t                    str += this.scanXHTMLEntity(quote);\n\t                }\n\t                else {\n\t                    str += ch;\n\t                }\n\t            }\n\t            return {\n\t                type: 8 /* StringLiteral */,\n\t                value: str,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // ... or .\n\t        if (cp === 46) {\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\n\t            var start = this.scanner.index;\n\t            this.scanner.index += value.length;\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // `\n\t        if (cp === 96) {\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\n\t            return {\n\t                type: 10 /* Template */,\n\t                value: '',\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // Identifer can not contain backslash (char code 92).\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\n\t            var start = this.scanner.index;\n\t            ++this.scanner.index;\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\n\t                    ++this.scanner.index;\n\t                }\n\t                else if (ch === 45) {\n\t                    // Hyphen (char code 45) can be part of an identifier.\n\t                    ++this.scanner.index;\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\n\t            return {\n\t                type: 100 /* Identifier */,\n\t                value: id,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        return this.scanner.lex();\n\t    };\n\t    JSXParser.prototype.nextJSXToken = function () {\n\t        this.collectComments();\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = this.lexJSX();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        if (this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.nextJSXText = function () {\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var start = this.scanner.index;\n\t        var text = '';\n\t        while (!this.scanner.eof()) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === '{' || ch === '<') {\n\t                break;\n\t            }\n\t            ++this.scanner.index;\n\t            text += ch;\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.scanner.lineNumber;\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n\t                    ++this.scanner.index;\n\t                }\n\t                this.scanner.lineStart = this.scanner.index;\n\t            }\n\t        }\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = {\n\t            type: 101 /* Text */,\n\t            value: text,\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: this.scanner.lineStart,\n\t            start: start,\n\t            end: this.scanner.index\n\t        };\n\t        if ((text.length > 0) && this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.peekJSXToken = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.lexJSX();\n\t        this.scanner.restoreState(state);\n\t        return next;\n\t    };\n\t    // Expect the next JSX token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    JSXParser.prototype.expectJSX = function (value) {\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next JSX token matches the specified punctuator.\n\t    JSXParser.prototype.matchJSX = function (value) {\n\t        var next = this.peekJSXToken();\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\n\t    };\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 100 /* Identifier */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n\t    };\n\t    JSXParser.prototype.parseJSXElementName = function () {\n\t        var node = this.createJSXNode();\n\t        var elementName = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = elementName;\n\t            this.expectJSX(':');\n\t            var name_1 = this.parseJSXIdentifier();\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n\t        }\n\t        else if (this.matchJSX('.')) {\n\t            while (this.matchJSX('.')) {\n\t                var object = elementName;\n\t                this.expectJSX('.');\n\t                var property = this.parseJSXIdentifier();\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n\t            }\n\t        }\n\t        return elementName;\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\n\t        var node = this.createJSXNode();\n\t        var attributeName;\n\t        var identifier = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = identifier;\n\t            this.expectJSX(':');\n\t            var name_2 = this.parseJSXIdentifier();\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n\t        }\n\t        else {\n\t            attributeName = identifier;\n\t        }\n\t        return attributeName;\n\t    };\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 8 /* StringLiteral */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.finishJSX();\n\t        if (this.match('}')) {\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n\t        }\n\t        var expression = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n\t    };\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var name = this.parseJSXAttributeName();\n\t        var value = null;\n\t        if (this.matchJSX('=')) {\n\t            this.expectJSX('=');\n\t            value = this.parseJSXAttributeValue();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n\t    };\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.expectJSX('...');\n\t        this.finishJSX();\n\t        var argument = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributes = function () {\n\t        var attributes = [];\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\n\t                this.parseJSXNameValueAttribute();\n\t            attributes.push(attribute);\n\t        }\n\t        return attributes;\n\t    };\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        if (this.matchJSX('/')) {\n\t            this.expectJSX('/');\n\t            var name_3 = this.parseJSXElementName();\n\t            this.expectJSX('>');\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n\t        }\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\n\t        var node = this.createJSXChildNode();\n\t        this.collectComments();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        var expression;\n\t        if (this.matchJSX('}')) {\n\t            expression = this.parseJSXEmptyExpression();\n\t            this.expectJSX('}');\n\t        }\n\t        else {\n\t            this.finishJSX();\n\t            expression = this.parseAssignmentExpression();\n\t            this.reenterJSX();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXChildren = function () {\n\t        var children = [];\n\t        while (!this.scanner.eof()) {\n\t            var node = this.createJSXChildNode();\n\t            var token = this.nextJSXText();\n\t            if (token.start < token.end) {\n\t                var raw = this.getTokenRaw(token);\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n\t                children.push(child);\n\t            }\n\t            if (this.scanner.source[this.scanner.index] === '{') {\n\t                var container = this.parseJSXExpressionContainer();\n\t                children.push(container);\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return children;\n\t    };\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\n\t        var stack = [];\n\t        while (!this.scanner.eof()) {\n\t            el.children = el.children.concat(this.parseJSXChildren());\n\t            var node = this.createJSXChildNode();\n\t            var element = this.parseJSXBoundaryElement();\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n\t                var opening = element;\n\t                if (opening.selfClosing) {\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n\t                    el.children.push(child);\n\t                }\n\t                else {\n\t                    stack.push(el);\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\n\t                }\n\t            }\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n\t                el.closing = element;\n\t                var open_1 = getQualifiedElementName(el.opening.name);\n\t                var close_1 = getQualifiedElementName(el.closing.name);\n\t                if (open_1 !== close_1) {\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n\t                }\n\t                if (stack.length > 0) {\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n\t                    el = stack[stack.length - 1];\n\t                    el.children.push(child);\n\t                    stack.pop();\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t    JSXParser.prototype.parseJSXElement = function () {\n\t        var node = this.createJSXNode();\n\t        var opening = this.parseJSXOpeningElement();\n\t        var children = [];\n\t        var closing = null;\n\t        if (!opening.selfClosing) {\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\n\t            children = el.children;\n\t            closing = el.closing;\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n\t    };\n\t    JSXParser.prototype.parseJSXRoot = function () {\n\t        // Pop the opening '<' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t        this.startJSX();\n\t        var element = this.parseJSXElement();\n\t        this.finishJSX();\n\t        return element;\n\t    };\n\t    JSXParser.prototype.isStartOfExpression = function () {\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n\t    };\n\t    return JSXParser;\n\t}(parser_1.Parser));\n\texports.JSXParser = JSXParser;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// See also tools/generate-unicode-regex.js.\n\tvar Regex = {\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t};\n\texports.Character = {\n\t    /* tslint:disable:no-bitwise */\n\t    fromCodePoint: function (cp) {\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-white-space\n\t    isWhiteSpace: function (cp) {\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\n\t    isLineTerminator: function (cp) {\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    isIdentifierStart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    isIdentifierPart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    isDecimalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\n\t    },\n\t    isHexDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp >= 0x41 && cp <= 0x46) ||\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\n\t    },\n\t    isOctalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\t/* tslint:disable:max-classes-per-file */\n\tvar JSXClosingElement = (function () {\n\t    function JSXClosingElement(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n\t        this.name = name;\n\t    }\n\t    return JSXClosingElement;\n\t}());\n\texports.JSXClosingElement = JSXClosingElement;\n\tvar JSXElement = (function () {\n\t    function JSXElement(openingElement, children, closingElement) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n\t        this.openingElement = openingElement;\n\t        this.children = children;\n\t        this.closingElement = closingElement;\n\t    }\n\t    return JSXElement;\n\t}());\n\texports.JSXElement = JSXElement;\n\tvar JSXEmptyExpression = (function () {\n\t    function JSXEmptyExpression() {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n\t    }\n\t    return JSXEmptyExpression;\n\t}());\n\texports.JSXEmptyExpression = JSXEmptyExpression;\n\tvar JSXExpressionContainer = (function () {\n\t    function JSXExpressionContainer(expression) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n\t        this.expression = expression;\n\t    }\n\t    return JSXExpressionContainer;\n\t}());\n\texports.JSXExpressionContainer = JSXExpressionContainer;\n\tvar JSXIdentifier = (function () {\n\t    function JSXIdentifier(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n\t        this.name = name;\n\t    }\n\t    return JSXIdentifier;\n\t}());\n\texports.JSXIdentifier = JSXIdentifier;\n\tvar JSXMemberExpression = (function () {\n\t    function JSXMemberExpression(object, property) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return JSXMemberExpression;\n\t}());\n\texports.JSXMemberExpression = JSXMemberExpression;\n\tvar JSXAttribute = (function () {\n\t    function JSXAttribute(name, value) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n\t        this.name = name;\n\t        this.value = value;\n\t    }\n\t    return JSXAttribute;\n\t}());\n\texports.JSXAttribute = JSXAttribute;\n\tvar JSXNamespacedName = (function () {\n\t    function JSXNamespacedName(namespace, name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n\t        this.namespace = namespace;\n\t        this.name = name;\n\t    }\n\t    return JSXNamespacedName;\n\t}());\n\texports.JSXNamespacedName = JSXNamespacedName;\n\tvar JSXOpeningElement = (function () {\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n\t        this.name = name;\n\t        this.selfClosing = selfClosing;\n\t        this.attributes = attributes;\n\t    }\n\t    return JSXOpeningElement;\n\t}());\n\texports.JSXOpeningElement = JSXOpeningElement;\n\tvar JSXSpreadAttribute = (function () {\n\t    function JSXSpreadAttribute(argument) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n\t        this.argument = argument;\n\t    }\n\t    return JSXSpreadAttribute;\n\t}());\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\n\tvar JSXText = (function () {\n\t    function JSXText(value, raw) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return JSXText;\n\t}());\n\texports.JSXText = JSXText;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.JSXSyntax = {\n\t    JSXAttribute: 'JSXAttribute',\n\t    JSXClosingElement: 'JSXClosingElement',\n\t    JSXElement: 'JSXElement',\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\n\t    JSXIdentifier: 'JSXIdentifier',\n\t    JSXMemberExpression: 'JSXMemberExpression',\n\t    JSXNamespacedName: 'JSXNamespacedName',\n\t    JSXOpeningElement: 'JSXOpeningElement',\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\n\t    JSXText: 'JSXText'\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\t/* tslint:disable:max-classes-per-file */\n\tvar ArrayExpression = (function () {\n\t    function ArrayExpression(elements) {\n\t        this.type = syntax_1.Syntax.ArrayExpression;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayExpression;\n\t}());\n\texports.ArrayExpression = ArrayExpression;\n\tvar ArrayPattern = (function () {\n\t    function ArrayPattern(elements) {\n\t        this.type = syntax_1.Syntax.ArrayPattern;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayPattern;\n\t}());\n\texports.ArrayPattern = ArrayPattern;\n\tvar ArrowFunctionExpression = (function () {\n\t    function ArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = false;\n\t    }\n\t    return ArrowFunctionExpression;\n\t}());\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\n\tvar AssignmentExpression = (function () {\n\t    function AssignmentExpression(operator, left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentExpression;\n\t}());\n\texports.AssignmentExpression = AssignmentExpression;\n\tvar AssignmentPattern = (function () {\n\t    function AssignmentPattern(left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentPattern;\n\t}());\n\texports.AssignmentPattern = AssignmentPattern;\n\tvar AsyncArrowFunctionExpression = (function () {\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = true;\n\t    }\n\t    return AsyncArrowFunctionExpression;\n\t}());\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\tvar AsyncFunctionDeclaration = (function () {\n\t    function AsyncFunctionDeclaration(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionDeclaration;\n\t}());\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\tvar AsyncFunctionExpression = (function () {\n\t    function AsyncFunctionExpression(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionExpression;\n\t}());\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\n\tvar AwaitExpression = (function () {\n\t    function AwaitExpression(argument) {\n\t        this.type = syntax_1.Syntax.AwaitExpression;\n\t        this.argument = argument;\n\t    }\n\t    return AwaitExpression;\n\t}());\n\texports.AwaitExpression = AwaitExpression;\n\tvar BinaryExpression = (function () {\n\t    function BinaryExpression(operator, left, right) {\n\t        var logical = (operator === '||' || operator === '&&');\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return BinaryExpression;\n\t}());\n\texports.BinaryExpression = BinaryExpression;\n\tvar BlockStatement = (function () {\n\t    function BlockStatement(body) {\n\t        this.type = syntax_1.Syntax.BlockStatement;\n\t        this.body = body;\n\t    }\n\t    return BlockStatement;\n\t}());\n\texports.BlockStatement = BlockStatement;\n\tvar BreakStatement = (function () {\n\t    function BreakStatement(label) {\n\t        this.type = syntax_1.Syntax.BreakStatement;\n\t        this.label = label;\n\t    }\n\t    return BreakStatement;\n\t}());\n\texports.BreakStatement = BreakStatement;\n\tvar CallExpression = (function () {\n\t    function CallExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.CallExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return CallExpression;\n\t}());\n\texports.CallExpression = CallExpression;\n\tvar CatchClause = (function () {\n\t    function CatchClause(param, body) {\n\t        this.type = syntax_1.Syntax.CatchClause;\n\t        this.param = param;\n\t        this.body = body;\n\t    }\n\t    return CatchClause;\n\t}());\n\texports.CatchClause = CatchClause;\n\tvar ClassBody = (function () {\n\t    function ClassBody(body) {\n\t        this.type = syntax_1.Syntax.ClassBody;\n\t        this.body = body;\n\t    }\n\t    return ClassBody;\n\t}());\n\texports.ClassBody = ClassBody;\n\tvar ClassDeclaration = (function () {\n\t    function ClassDeclaration(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassDeclaration;\n\t}());\n\texports.ClassDeclaration = ClassDeclaration;\n\tvar ClassExpression = (function () {\n\t    function ClassExpression(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassExpression;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassExpression;\n\t}());\n\texports.ClassExpression = ClassExpression;\n\tvar ComputedMemberExpression = (function () {\n\t    function ComputedMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = true;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return ComputedMemberExpression;\n\t}());\n\texports.ComputedMemberExpression = ComputedMemberExpression;\n\tvar ConditionalExpression = (function () {\n\t    function ConditionalExpression(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return ConditionalExpression;\n\t}());\n\texports.ConditionalExpression = ConditionalExpression;\n\tvar ContinueStatement = (function () {\n\t    function ContinueStatement(label) {\n\t        this.type = syntax_1.Syntax.ContinueStatement;\n\t        this.label = label;\n\t    }\n\t    return ContinueStatement;\n\t}());\n\texports.ContinueStatement = ContinueStatement;\n\tvar DebuggerStatement = (function () {\n\t    function DebuggerStatement() {\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\n\t    }\n\t    return DebuggerStatement;\n\t}());\n\texports.DebuggerStatement = DebuggerStatement;\n\tvar Directive = (function () {\n\t    function Directive(expression, directive) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t        this.directive = directive;\n\t    }\n\t    return Directive;\n\t}());\n\texports.Directive = Directive;\n\tvar DoWhileStatement = (function () {\n\t    function DoWhileStatement(body, test) {\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\n\t        this.body = body;\n\t        this.test = test;\n\t    }\n\t    return DoWhileStatement;\n\t}());\n\texports.DoWhileStatement = DoWhileStatement;\n\tvar EmptyStatement = (function () {\n\t    function EmptyStatement() {\n\t        this.type = syntax_1.Syntax.EmptyStatement;\n\t    }\n\t    return EmptyStatement;\n\t}());\n\texports.EmptyStatement = EmptyStatement;\n\tvar ExportAllDeclaration = (function () {\n\t    function ExportAllDeclaration(source) {\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\n\t        this.source = source;\n\t    }\n\t    return ExportAllDeclaration;\n\t}());\n\texports.ExportAllDeclaration = ExportAllDeclaration;\n\tvar ExportDefaultDeclaration = (function () {\n\t    function ExportDefaultDeclaration(declaration) {\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n\t        this.declaration = declaration;\n\t    }\n\t    return ExportDefaultDeclaration;\n\t}());\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\tvar ExportNamedDeclaration = (function () {\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\n\t        this.declaration = declaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ExportNamedDeclaration;\n\t}());\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\n\tvar ExportSpecifier = (function () {\n\t    function ExportSpecifier(local, exported) {\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\n\t        this.exported = exported;\n\t        this.local = local;\n\t    }\n\t    return ExportSpecifier;\n\t}());\n\texports.ExportSpecifier = ExportSpecifier;\n\tvar ExpressionStatement = (function () {\n\t    function ExpressionStatement(expression) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t    }\n\t    return ExpressionStatement;\n\t}());\n\texports.ExpressionStatement = ExpressionStatement;\n\tvar ForInStatement = (function () {\n\t    function ForInStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForInStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t        this.each = false;\n\t    }\n\t    return ForInStatement;\n\t}());\n\texports.ForInStatement = ForInStatement;\n\tvar ForOfStatement = (function () {\n\t    function ForOfStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForOfStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t    }\n\t    return ForOfStatement;\n\t}());\n\texports.ForOfStatement = ForOfStatement;\n\tvar ForStatement = (function () {\n\t    function ForStatement(init, test, update, body) {\n\t        this.type = syntax_1.Syntax.ForStatement;\n\t        this.init = init;\n\t        this.test = test;\n\t        this.update = update;\n\t        this.body = body;\n\t    }\n\t    return ForStatement;\n\t}());\n\texports.ForStatement = ForStatement;\n\tvar FunctionDeclaration = (function () {\n\t    function FunctionDeclaration(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionDeclaration;\n\t}());\n\texports.FunctionDeclaration = FunctionDeclaration;\n\tvar FunctionExpression = (function () {\n\t    function FunctionExpression(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionExpression;\n\t}());\n\texports.FunctionExpression = FunctionExpression;\n\tvar Identifier = (function () {\n\t    function Identifier(name) {\n\t        this.type = syntax_1.Syntax.Identifier;\n\t        this.name = name;\n\t    }\n\t    return Identifier;\n\t}());\n\texports.Identifier = Identifier;\n\tvar IfStatement = (function () {\n\t    function IfStatement(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.IfStatement;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return IfStatement;\n\t}());\n\texports.IfStatement = IfStatement;\n\tvar ImportDeclaration = (function () {\n\t    function ImportDeclaration(specifiers, source) {\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ImportDeclaration;\n\t}());\n\texports.ImportDeclaration = ImportDeclaration;\n\tvar ImportDefaultSpecifier = (function () {\n\t    function ImportDefaultSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportDefaultSpecifier;\n\t}());\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\tvar ImportNamespaceSpecifier = (function () {\n\t    function ImportNamespaceSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportNamespaceSpecifier;\n\t}());\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\tvar ImportSpecifier = (function () {\n\t    function ImportSpecifier(local, imported) {\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\n\t        this.local = local;\n\t        this.imported = imported;\n\t    }\n\t    return ImportSpecifier;\n\t}());\n\texports.ImportSpecifier = ImportSpecifier;\n\tvar LabeledStatement = (function () {\n\t    function LabeledStatement(label, body) {\n\t        this.type = syntax_1.Syntax.LabeledStatement;\n\t        this.label = label;\n\t        this.body = body;\n\t    }\n\t    return LabeledStatement;\n\t}());\n\texports.LabeledStatement = LabeledStatement;\n\tvar Literal = (function () {\n\t    function Literal(value, raw) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return Literal;\n\t}());\n\texports.Literal = Literal;\n\tvar MetaProperty = (function () {\n\t    function MetaProperty(meta, property) {\n\t        this.type = syntax_1.Syntax.MetaProperty;\n\t        this.meta = meta;\n\t        this.property = property;\n\t    }\n\t    return MetaProperty;\n\t}());\n\texports.MetaProperty = MetaProperty;\n\tvar MethodDefinition = (function () {\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\n\t        this.type = syntax_1.Syntax.MethodDefinition;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.static = isStatic;\n\t    }\n\t    return MethodDefinition;\n\t}());\n\texports.MethodDefinition = MethodDefinition;\n\tvar Module = (function () {\n\t    function Module(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'module';\n\t    }\n\t    return Module;\n\t}());\n\texports.Module = Module;\n\tvar NewExpression = (function () {\n\t    function NewExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.NewExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return NewExpression;\n\t}());\n\texports.NewExpression = NewExpression;\n\tvar ObjectExpression = (function () {\n\t    function ObjectExpression(properties) {\n\t        this.type = syntax_1.Syntax.ObjectExpression;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectExpression;\n\t}());\n\texports.ObjectExpression = ObjectExpression;\n\tvar ObjectPattern = (function () {\n\t    function ObjectPattern(properties) {\n\t        this.type = syntax_1.Syntax.ObjectPattern;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectPattern;\n\t}());\n\texports.ObjectPattern = ObjectPattern;\n\tvar Property = (function () {\n\t    function Property(kind, key, computed, value, method, shorthand) {\n\t        this.type = syntax_1.Syntax.Property;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.method = method;\n\t        this.shorthand = shorthand;\n\t    }\n\t    return Property;\n\t}());\n\texports.Property = Property;\n\tvar RegexLiteral = (function () {\n\t    function RegexLiteral(value, raw, pattern, flags) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t        this.regex = { pattern: pattern, flags: flags };\n\t    }\n\t    return RegexLiteral;\n\t}());\n\texports.RegexLiteral = RegexLiteral;\n\tvar RestElement = (function () {\n\t    function RestElement(argument) {\n\t        this.type = syntax_1.Syntax.RestElement;\n\t        this.argument = argument;\n\t    }\n\t    return RestElement;\n\t}());\n\texports.RestElement = RestElement;\n\tvar ReturnStatement = (function () {\n\t    function ReturnStatement(argument) {\n\t        this.type = syntax_1.Syntax.ReturnStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ReturnStatement;\n\t}());\n\texports.ReturnStatement = ReturnStatement;\n\tvar Script = (function () {\n\t    function Script(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'script';\n\t    }\n\t    return Script;\n\t}());\n\texports.Script = Script;\n\tvar SequenceExpression = (function () {\n\t    function SequenceExpression(expressions) {\n\t        this.type = syntax_1.Syntax.SequenceExpression;\n\t        this.expressions = expressions;\n\t    }\n\t    return SequenceExpression;\n\t}());\n\texports.SequenceExpression = SequenceExpression;\n\tvar SpreadElement = (function () {\n\t    function SpreadElement(argument) {\n\t        this.type = syntax_1.Syntax.SpreadElement;\n\t        this.argument = argument;\n\t    }\n\t    return SpreadElement;\n\t}());\n\texports.SpreadElement = SpreadElement;\n\tvar StaticMemberExpression = (function () {\n\t    function StaticMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = false;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return StaticMemberExpression;\n\t}());\n\texports.StaticMemberExpression = StaticMemberExpression;\n\tvar Super = (function () {\n\t    function Super() {\n\t        this.type = syntax_1.Syntax.Super;\n\t    }\n\t    return Super;\n\t}());\n\texports.Super = Super;\n\tvar SwitchCase = (function () {\n\t    function SwitchCase(test, consequent) {\n\t        this.type = syntax_1.Syntax.SwitchCase;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t    }\n\t    return SwitchCase;\n\t}());\n\texports.SwitchCase = SwitchCase;\n\tvar SwitchStatement = (function () {\n\t    function SwitchStatement(discriminant, cases) {\n\t        this.type = syntax_1.Syntax.SwitchStatement;\n\t        this.discriminant = discriminant;\n\t        this.cases = cases;\n\t    }\n\t    return SwitchStatement;\n\t}());\n\texports.SwitchStatement = SwitchStatement;\n\tvar TaggedTemplateExpression = (function () {\n\t    function TaggedTemplateExpression(tag, quasi) {\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\n\t        this.tag = tag;\n\t        this.quasi = quasi;\n\t    }\n\t    return TaggedTemplateExpression;\n\t}());\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\n\tvar TemplateElement = (function () {\n\t    function TemplateElement(value, tail) {\n\t        this.type = syntax_1.Syntax.TemplateElement;\n\t        this.value = value;\n\t        this.tail = tail;\n\t    }\n\t    return TemplateElement;\n\t}());\n\texports.TemplateElement = TemplateElement;\n\tvar TemplateLiteral = (function () {\n\t    function TemplateLiteral(quasis, expressions) {\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\n\t        this.quasis = quasis;\n\t        this.expressions = expressions;\n\t    }\n\t    return TemplateLiteral;\n\t}());\n\texports.TemplateLiteral = TemplateLiteral;\n\tvar ThisExpression = (function () {\n\t    function ThisExpression() {\n\t        this.type = syntax_1.Syntax.ThisExpression;\n\t    }\n\t    return ThisExpression;\n\t}());\n\texports.ThisExpression = ThisExpression;\n\tvar ThrowStatement = (function () {\n\t    function ThrowStatement(argument) {\n\t        this.type = syntax_1.Syntax.ThrowStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ThrowStatement;\n\t}());\n\texports.ThrowStatement = ThrowStatement;\n\tvar TryStatement = (function () {\n\t    function TryStatement(block, handler, finalizer) {\n\t        this.type = syntax_1.Syntax.TryStatement;\n\t        this.block = block;\n\t        this.handler = handler;\n\t        this.finalizer = finalizer;\n\t    }\n\t    return TryStatement;\n\t}());\n\texports.TryStatement = TryStatement;\n\tvar UnaryExpression = (function () {\n\t    function UnaryExpression(operator, argument) {\n\t        this.type = syntax_1.Syntax.UnaryExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = true;\n\t    }\n\t    return UnaryExpression;\n\t}());\n\texports.UnaryExpression = UnaryExpression;\n\tvar UpdateExpression = (function () {\n\t    function UpdateExpression(operator, argument, prefix) {\n\t        this.type = syntax_1.Syntax.UpdateExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = prefix;\n\t    }\n\t    return UpdateExpression;\n\t}());\n\texports.UpdateExpression = UpdateExpression;\n\tvar VariableDeclaration = (function () {\n\t    function VariableDeclaration(declarations, kind) {\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\n\t        this.declarations = declarations;\n\t        this.kind = kind;\n\t    }\n\t    return VariableDeclaration;\n\t}());\n\texports.VariableDeclaration = VariableDeclaration;\n\tvar VariableDeclarator = (function () {\n\t    function VariableDeclarator(id, init) {\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\n\t        this.id = id;\n\t        this.init = init;\n\t    }\n\t    return VariableDeclarator;\n\t}());\n\texports.VariableDeclarator = VariableDeclarator;\n\tvar WhileStatement = (function () {\n\t    function WhileStatement(test, body) {\n\t        this.type = syntax_1.Syntax.WhileStatement;\n\t        this.test = test;\n\t        this.body = body;\n\t    }\n\t    return WhileStatement;\n\t}());\n\texports.WhileStatement = WhileStatement;\n\tvar WithStatement = (function () {\n\t    function WithStatement(object, body) {\n\t        this.type = syntax_1.Syntax.WithStatement;\n\t        this.object = object;\n\t        this.body = body;\n\t    }\n\t    return WithStatement;\n\t}());\n\texports.WithStatement = WithStatement;\n\tvar YieldExpression = (function () {\n\t    function YieldExpression(argument, delegate) {\n\t        this.type = syntax_1.Syntax.YieldExpression;\n\t        this.argument = argument;\n\t        this.delegate = delegate;\n\t    }\n\t    return YieldExpression;\n\t}());\n\texports.YieldExpression = YieldExpression;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar messages_1 = __webpack_require__(11);\n\tvar Node = __webpack_require__(7);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar syntax_1 = __webpack_require__(2);\n\tvar token_1 = __webpack_require__(13);\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\tvar Parser = (function () {\n\t    function Parser(code, options, delegate) {\n\t        if (options === void 0) { options = {}; }\n\t        this.config = {\n\t            range: (typeof options.range === 'boolean') && options.range,\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\n\t            source: null,\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\n\t        };\n\t        if (this.config.loc && options.source && options.source !== null) {\n\t            this.config.source = String(options.source);\n\t        }\n\t        this.delegate = delegate;\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = this.config.tolerant;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = this.config.comment;\n\t        this.operatorPrecedence = {\n\t            ')': 0,\n\t            ';': 0,\n\t            ',': 0,\n\t            '=': 0,\n\t            ']': 0,\n\t            '||': 1,\n\t            '&&': 2,\n\t            '|': 3,\n\t            '^': 4,\n\t            '&': 5,\n\t            '==': 6,\n\t            '!=': 6,\n\t            '===': 6,\n\t            '!==': 6,\n\t            '<': 7,\n\t            '>': 7,\n\t            '<=': 7,\n\t            '>=': 7,\n\t            '<<': 8,\n\t            '>>': 8,\n\t            '>>>': 8,\n\t            '+': 9,\n\t            '-': 9,\n\t            '*': 11,\n\t            '/': 11,\n\t            '%': 11\n\t        };\n\t        this.lookahead = {\n\t            type: 2 /* EOF */,\n\t            value: '',\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: 0,\n\t            start: 0,\n\t            end: 0\n\t        };\n\t        this.hasLineTerminator = false;\n\t        this.context = {\n\t            isModule: false,\n\t            await: false,\n\t            allowIn: true,\n\t            allowStrictDirective: true,\n\t            allowYield: true,\n\t            firstCoverInitializedNameError: null,\n\t            isAssignmentTarget: false,\n\t            isBindingElement: false,\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            labelSet: {},\n\t            strict: false\n\t        };\n\t        this.tokens = [];\n\t        this.startMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.lastMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.nextToken();\n\t        this.lastMarker = {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    }\n\t    Parser.prototype.throwError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.lastMarker.line;\n\t        var column = this.lastMarker.column + 1;\n\t        throw this.errorHandler.createError(index, line, column, msg);\n\t    };\n\t    Parser.prototype.tolerateError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.scanner.lineNumber;\n\t        var column = this.lastMarker.column + 1;\n\t        this.errorHandler.tolerateError(index, line, column, msg);\n\t    };\n\t    // Throw an exception because of the token.\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\n\t        var value;\n\t        if (token) {\n\t            if (!message) {\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\n\t                                    messages_1.Messages.UnexpectedToken;\n\t                if (token.type === 4 /* Keyword */) {\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.UnexpectedReserved;\n\t                    }\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.StrictReservedWord;\n\t                    }\n\t                }\n\t            }\n\t            value = token.value;\n\t        }\n\t        else {\n\t            value = 'ILLEGAL';\n\t        }\n\t        msg = msg.replace('%0', value);\n\t        if (token && typeof token.lineNumber === 'number') {\n\t            var index = token.start;\n\t            var line = token.lineNumber;\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n\t            var column = token.start - lastMarkerLineStart + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t        else {\n\t            var index = this.lastMarker.index;\n\t            var line = this.lastMarker.line;\n\t            var column = this.lastMarker.column + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t    };\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\n\t        throw this.unexpectedTokenError(token, message);\n\t    };\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n\t    };\n\t    Parser.prototype.collectComments = function () {\n\t        if (!this.config.comment) {\n\t            this.scanner.scanComments();\n\t        }\n\t        else {\n\t            var comments = this.scanner.scanComments();\n\t            if (comments.length > 0 && this.delegate) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var node = void 0;\n\t                    node = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\n\t                    };\n\t                    if (this.config.range) {\n\t                        node.range = e.range;\n\t                    }\n\t                    if (this.config.loc) {\n\t                        node.loc = e.loc;\n\t                    }\n\t                    var metadata = {\n\t                        start: {\n\t                            line: e.loc.start.line,\n\t                            column: e.loc.start.column,\n\t                            offset: e.range[0]\n\t                        },\n\t                        end: {\n\t                            line: e.loc.end.line,\n\t                            column: e.loc.end.column,\n\t                            offset: e.range[1]\n\t                        }\n\t                    };\n\t                    this.delegate(node, metadata);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    // From internal representation to an external structure\n\t    Parser.prototype.getTokenRaw = function (token) {\n\t        return this.scanner.source.slice(token.start, token.end);\n\t    };\n\t    Parser.prototype.convertToken = function (token) {\n\t        var t = {\n\t            type: token_1.TokenName[token.type],\n\t            value: this.getTokenRaw(token)\n\t        };\n\t        if (this.config.range) {\n\t            t.range = [token.start, token.end];\n\t        }\n\t        if (this.config.loc) {\n\t            t.loc = {\n\t                start: {\n\t                    line: this.startMarker.line,\n\t                    column: this.startMarker.column\n\t                },\n\t                end: {\n\t                    line: this.scanner.lineNumber,\n\t                    column: this.scanner.index - this.scanner.lineStart\n\t                }\n\t            };\n\t        }\n\t        if (token.type === 9 /* RegularExpression */) {\n\t            var pattern = token.pattern;\n\t            var flags = token.flags;\n\t            t.regex = { pattern: pattern, flags: flags };\n\t        }\n\t        return t;\n\t    };\n\t    Parser.prototype.nextToken = function () {\n\t        var token = this.lookahead;\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        this.collectComments();\n\t        if (this.scanner.index !== this.startMarker.index) {\n\t            this.startMarker.index = this.scanner.index;\n\t            this.startMarker.line = this.scanner.lineNumber;\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        }\n\t        var next = this.scanner.lex();\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\n\t                next.type = 4 /* Keyword */;\n\t            }\n\t        }\n\t        this.lookahead = next;\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\n\t            this.tokens.push(this.convertToken(next));\n\t        }\n\t        return token;\n\t    };\n\t    Parser.prototype.nextRegexToken = function () {\n\t        this.collectComments();\n\t        var token = this.scanner.scanRegExp();\n\t        if (this.config.tokens) {\n\t            // Pop the previous token, '/' or '/='\n\t            // This is added from the lookahead token.\n\t            this.tokens.pop();\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        // Prime the next lookahead.\n\t        this.lookahead = token;\n\t        this.nextToken();\n\t        return token;\n\t    };\n\t    Parser.prototype.createNode = function () {\n\t        return {\n\t            index: this.startMarker.index,\n\t            line: this.startMarker.line,\n\t            column: this.startMarker.column\n\t        };\n\t    };\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\n\t        var column = token.start - token.lineStart;\n\t        var line = token.lineNumber;\n\t        if (column < 0) {\n\t            column += lastLineStart;\n\t            line--;\n\t        }\n\t        return {\n\t            index: token.start,\n\t            line: line,\n\t            column: column\n\t        };\n\t    };\n\t    Parser.prototype.finalize = function (marker, node) {\n\t        if (this.config.range) {\n\t            node.range = [marker.index, this.lastMarker.index];\n\t        }\n\t        if (this.config.loc) {\n\t            node.loc = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column\n\t                }\n\t            };\n\t            if (this.config.source) {\n\t                node.loc.source = this.config.source;\n\t            }\n\t        }\n\t        if (this.delegate) {\n\t            var metadata = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                    offset: marker.index\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column,\n\t                    offset: this.lastMarker.index\n\t                }\n\t            };\n\t            this.delegate(node, metadata);\n\t        }\n\t        return node;\n\t    };\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expect = function (value) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\t    Parser.prototype.expectCommaSeparator = function () {\n\t        if (this.config.tolerant) {\n\t            var token = this.lookahead;\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\n\t                this.nextToken();\n\t            }\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\n\t                this.nextToken();\n\t                this.tolerateUnexpectedToken(token);\n\t            }\n\t            else {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n\t            }\n\t        }\n\t        else {\n\t            this.expect(',');\n\t        }\n\t    };\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expectKeyword = function (keyword) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next token matches the specified punctuator.\n\t    Parser.prototype.match = function (value) {\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n\t    };\n\t    // Return true if the next token matches the specified keyword\n\t    Parser.prototype.matchKeyword = function (keyword) {\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token matches the specified contextual keyword\n\t    // (where an identifier is sometimes a keyword depending on the context)\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token is an assignment operator\n\t    Parser.prototype.matchAssign = function () {\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\n\t            return false;\n\t        }\n\t        var op = this.lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '**=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    };\n\t    // Cover grammar support.\n\t    //\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n\t    //\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\n\t    // after the outermost pair is closed. They are:\n\t    //\n\t    //   1. AssignmentExpression\n\t    //   2. BindingElements\n\t    //   3. AssignmentTargets\n\t    //\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n\t    // binding element or assignment target.\n\t    //\n\t    // The three productions have the relationship:\n\t    //\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n\t    //\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n\t    //\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n\t    // the CoverInitializedName check is conducted.\n\t    //\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n\t    // pattern. The CoverInitializedName check is deferred.\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        if (this.context.firstCoverInitializedNameError !== null) {\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n\t        }\n\t        this.context.isBindingElement = previousIsBindingElement;\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.consumeSemicolon = function () {\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else if (!this.hasLineTerminator) {\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.lastMarker.index = this.startMarker.index;\n\t            this.lastMarker.line = this.startMarker.line;\n\t            this.lastMarker.column = this.startMarker.column;\n\t        }\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\n\t    Parser.prototype.parsePrimaryExpression = function () {\n\t        var node = this.createNode();\n\t        var expr;\n\t        var token, raw;\n\t        switch (this.lookahead.type) {\n\t            case 3 /* Identifier */:\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n\t                    this.tolerateUnexpectedToken(this.lookahead);\n\t                }\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                break;\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t                if (this.context.strict && this.lookahead.octal) {\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 1 /* BooleanLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n\t                break;\n\t            case 5 /* NullLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\n\t                break;\n\t            case 10 /* Template */:\n\t                expr = this.parseTemplateLiteral();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                switch (this.lookahead.value) {\n\t                    case '(':\n\t                        this.context.isBindingElement = false;\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\n\t                        break;\n\t                    case '[':\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n\t                        break;\n\t                    case '{':\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n\t                        break;\n\t                    case '/':\n\t                    case '/=':\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                        this.scanner.index = this.startMarker.index;\n\t                        token = this.nextRegexToken();\n\t                        raw = this.getTokenRaw(token);\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n\t                        break;\n\t                    default:\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                }\n\t                break;\n\t            case 4 /* Keyword */:\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n\t                    expr = this.parseIdentifierName();\n\t                }\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                }\n\t                else {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    if (this.matchKeyword('function')) {\n\t                        expr = this.parseFunctionExpression();\n\t                    }\n\t                    else if (this.matchKeyword('this')) {\n\t                        this.nextToken();\n\t                        expr = this.finalize(node, new Node.ThisExpression());\n\t                    }\n\t                    else if (this.matchKeyword('class')) {\n\t                        expr = this.parseClassExpression();\n\t                    }\n\t                    else {\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                    }\n\t                }\n\t                break;\n\t            default:\n\t                expr = this.throwUnexpectedToken(this.nextToken());\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\n\t    Parser.prototype.parseSpreadElement = function () {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t        return this.finalize(node, new Node.SpreadElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayInitializer = function () {\n\t        var node = this.createNode();\n\t        var elements = [];\n\t        this.expect('[');\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else if (this.match('...')) {\n\t                var element = this.parseSpreadElement();\n\t                if (!this.match(']')) {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    this.expect(',');\n\t                }\n\t                elements.push(element);\n\t            }\n\t            else {\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\n\t    Parser.prototype.parsePropertyMethod = function (params) {\n\t        this.context.isAssignmentTarget = false;\n\t        this.context.isBindingElement = false;\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = params.simple;\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\t        if (this.context.strict && params.firstRestricted) {\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n\t        }\n\t        if (this.context.strict && params.stricted) {\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        return body;\n\t    };\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\n\t        var isGenerator = false;\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        var previousAwait = this.context.await;\n\t        this.context.allowYield = false;\n\t        this.context.await = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        this.context.await = previousAwait;\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n\t    };\n\t    Parser.prototype.parseObjectPropertyKey = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var key;\n\t        switch (token.type) {\n\t            case 8 /* StringLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t                if (this.context.strict && token.octal) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                var raw = this.getTokenRaw(token);\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 3 /* Identifier */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 4 /* Keyword */:\n\t                key = this.finalize(node, new Node.Identifier(token.value));\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                if (token.value === '[') {\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    this.expect(']');\n\t                }\n\t                else {\n\t                    key = this.throwUnexpectedToken(token);\n\t                }\n\t                break;\n\t            default:\n\t                key = this.throwUnexpectedToken(token);\n\t        }\n\t        return key;\n\t    };\n\t    Parser.prototype.isPropertyKey = function (key, value) {\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\n\t    };\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\n\t        var node = this.createNode();\n\t        var token = this.lookahead;\n\t        var kind;\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var shorthand = false;\n\t        var isAsync = false;\n\t        if (token.type === 3 /* Identifier */) {\n\t            var id = token.value;\n\t            this.nextToken();\n\t            computed = this.match('[');\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n\t        }\n\t        else if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n\t            kind = 'get';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.context.allowYield = false;\n\t            value = this.parseGetterMethod();\n\t        }\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n\t            kind = 'set';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseSetterMethod();\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        else {\n\t            if (!key) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            kind = 'init';\n\t            if (this.match(':') && !isAsync) {\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\n\t                    if (hasProto.value) {\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n\t                    }\n\t                    hasProto.value = true;\n\t                }\n\t                this.nextToken();\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t            }\n\t            else if (this.match('(')) {\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t                method = true;\n\t            }\n\t            else if (token.type === 3 /* Identifier */) {\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\n\t                if (this.match('=')) {\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\n\t                    this.nextToken();\n\t                    shorthand = true;\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\n\t                }\n\t                else {\n\t                    shorthand = true;\n\t                    value = id;\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectInitializer = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var properties = [];\n\t        var hasProto = { value: false };\n\t        while (!this.match('}')) {\n\t            properties.push(this.parseObjectProperty(hasProto));\n\t            if (!this.match('}')) {\n\t                this.expectCommaSeparator();\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\n\t    Parser.prototype.parseTemplateHead = function () {\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateElement = function () {\n\t        if (this.lookahead.type !== 10 /* Template */) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateLiteral = function () {\n\t        var node = this.createNode();\n\t        var expressions = [];\n\t        var quasis = [];\n\t        var quasi = this.parseTemplateHead();\n\t        quasis.push(quasi);\n\t        while (!quasi.tail) {\n\t            expressions.push(this.parseExpression());\n\t            quasi = this.parseTemplateElement();\n\t            quasis.push(quasi);\n\t        }\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t            case syntax_1.Syntax.MemberExpression:\n\t            case syntax_1.Syntax.RestElement:\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                break;\n\t            case syntax_1.Syntax.SpreadElement:\n\t                expr.type = syntax_1.Syntax.RestElement;\n\t                this.reinterpretExpressionAsPattern(expr.argument);\n\t                break;\n\t            case syntax_1.Syntax.ArrayExpression:\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\n\t                for (var i = 0; i < expr.elements.length; i++) {\n\t                    if (expr.elements[i] !== null) {\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectExpression:\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\n\t                for (var i = 0; i < expr.properties.length; i++) {\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.AssignmentExpression:\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\n\t                delete expr.operator;\n\t                this.reinterpretExpressionAsPattern(expr.left);\n\t                break;\n\t            default:\n\t                // Allow other node type for tolerant parsing.\n\t                break;\n\t        }\n\t    };\n\t    Parser.prototype.parseGroupExpression = function () {\n\t        var expr;\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.nextToken();\n\t            if (!this.match('=>')) {\n\t                this.expect('=>');\n\t            }\n\t            expr = {\n\t                type: ArrowParameterPlaceHolder,\n\t                params: [],\n\t                async: false\n\t            };\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var params = [];\n\t            if (this.match('...')) {\n\t                expr = this.parseRestElement(params);\n\t                this.expect(')');\n\t                if (!this.match('=>')) {\n\t                    this.expect('=>');\n\t                }\n\t                expr = {\n\t                    type: ArrowParameterPlaceHolder,\n\t                    params: [expr],\n\t                    async: false\n\t                };\n\t            }\n\t            else {\n\t                var arrow = false;\n\t                this.context.isBindingElement = true;\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                if (this.match(',')) {\n\t                    var expressions = [];\n\t                    this.context.isAssignmentTarget = false;\n\t                    expressions.push(expr);\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\n\t                        if (!this.match(',')) {\n\t                            break;\n\t                        }\n\t                        this.nextToken();\n\t                        if (this.match(')')) {\n\t                            this.nextToken();\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else if (this.match('...')) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            expressions.push(this.parseRestElement(params));\n\t                            this.expect(')');\n\t                            if (!this.match('=>')) {\n\t                                this.expect('=>');\n\t                            }\n\t                            this.context.isBindingElement = false;\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else {\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        if (arrow) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!arrow) {\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t                    }\n\t                }\n\t                if (!arrow) {\n\t                    this.expect(')');\n\t                    if (this.match('=>')) {\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: [expr],\n\t                                async: false\n\t                            };\n\t                        }\n\t                        if (!arrow) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\n\t                                }\n\t                            }\n\t                            else {\n\t                                this.reinterpretExpressionAsPattern(expr);\n\t                            }\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: parameters,\n\t                                async: false\n\t                            };\n\t                        }\n\t                    }\n\t                    this.context.isBindingElement = false;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\t    Parser.prototype.parseArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.isIdentifierName = function (token) {\n\t        return token.type === 3 /* Identifier */ ||\n\t            token.type === 4 /* Keyword */ ||\n\t            token.type === 1 /* BooleanLiteral */ ||\n\t            token.type === 5 /* NullLiteral */;\n\t    };\n\t    Parser.prototype.parseIdentifierName = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (!this.isIdentifierName(token)) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseNewExpression = function () {\n\t        var node = this.createNode();\n\t        var id = this.parseIdentifierName();\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n\t        var expr;\n\t        if (this.match('.')) {\n\t            this.nextToken();\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\n\t                var property = this.parseIdentifierName();\n\t                expr = new Node.MetaProperty(id, property);\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n\t            var args = this.match('(') ? this.parseArguments() : [];\n\t            expr = new Node.NewExpression(callee, args);\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return this.finalize(node, expr);\n\t    };\n\t    Parser.prototype.parseAsyncArgument = function () {\n\t        var arg = this.parseAssignmentExpression();\n\t        this.context.firstCoverInitializedNameError = null;\n\t        return arg;\n\t    };\n\t    Parser.prototype.parseAsyncArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n\t        var startToken = this.lookahead;\n\t        var maybeAsync = this.matchContextualKeyword('async');\n\t        var previousAllowIn = this.context.allowIn;\n\t        this.context.allowIn = true;\n\t        var expr;\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\n\t            expr = this.createNode();\n\t            this.nextToken();\n\t            expr = this.finalize(expr, new Node.Super());\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        }\n\t        while (true) {\n\t            if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('(')) {\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = false;\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\t                if (asyncArrow && this.match('=>')) {\n\t                    for (var i = 0; i < args.length; ++i) {\n\t                        this.reinterpretExpressionAsPattern(args[i]);\n\t                    }\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: args,\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            else if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.context.allowIn = previousAllowIn;\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseSuper = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('super');\n\t        if (!this.match('[') && !this.match('.')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return this.finalize(node, new Node.Super());\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n\t        var node = this.startNode(this.lookahead);\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        while (true) {\n\t            if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\n\t    Parser.prototype.parseUpdateExpression = function () {\n\t        var expr;\n\t        var startToken = this.lookahead;\n\t        if (this.match('++') || this.match('--')) {\n\t            var node = this.startNode(startToken);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n\t            }\n\t            if (!this.context.isAssignmentTarget) {\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t            }\n\t            var prefix = true;\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n\t                if (this.match('++') || this.match('--')) {\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n\t                    }\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    var operator = this.nextToken().value;\n\t                    var prefix = false;\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\n\t    Parser.prototype.parseAwaitExpression = function () {\n\t        var node = this.createNode();\n\t        this.nextToken();\n\t        var argument = this.parseUnaryExpression();\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\n\t    };\n\t    Parser.prototype.parseUnaryExpression = function () {\n\t        var expr;\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n\t            var node = this.startNode(this.lookahead);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\n\t            }\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\n\t            expr = this.parseAwaitExpression();\n\t        }\n\t        else {\n\t            expr = this.parseUpdateExpression();\n\t        }\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseExponentiationExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\t    Parser.prototype.binaryPrecedence = function (token) {\n\t        var op = token.value;\n\t        var precedence;\n\t        if (token.type === 7 /* Punctuator */) {\n\t            precedence = this.operatorPrecedence[op] || 0;\n\t        }\n\t        else if (token.type === 4 /* Keyword */) {\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\n\t        }\n\t        else {\n\t            precedence = 0;\n\t        }\n\t        return precedence;\n\t    };\n\t    Parser.prototype.parseBinaryExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n\t        var token = this.lookahead;\n\t        var prec = this.binaryPrecedence(token);\n\t        if (prec > 0) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var markers = [startToken, this.lookahead];\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            var stack = [left, token.value, right];\n\t            var precedences = [prec];\n\t            while (true) {\n\t                prec = this.binaryPrecedence(this.lookahead);\n\t                if (prec <= 0) {\n\t                    break;\n\t                }\n\t                // Reduce: make a binary expression from the three topmost entries.\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\n\t                    right = stack.pop();\n\t                    var operator = stack.pop();\n\t                    precedences.pop();\n\t                    left = stack.pop();\n\t                    markers.pop();\n\t                    var node = this.startNode(markers[markers.length - 1]);\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n\t                }\n\t                // Shift.\n\t                stack.push(this.nextToken().value);\n\t                precedences.push(prec);\n\t                markers.push(this.lookahead);\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n\t            }\n\t            // Final reduce to clean-up the stack.\n\t            var i = stack.length - 1;\n\t            expr = stack[i];\n\t            var lastMarker = markers.pop();\n\t            while (i > 1) {\n\t                var marker = markers.pop();\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\n\t                var node = this.startNode(marker, lastLineStart);\n\t                var operator = stack[i - 1];\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n\t                i -= 2;\n\t                lastMarker = marker;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\n\t    Parser.prototype.parseConditionalExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\t        if (this.match('?')) {\n\t            this.nextToken();\n\t            var previousAllowIn = this.context.allowIn;\n\t            this.context.allowIn = true;\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowIn = previousAllowIn;\n\t            this.expect(':');\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\n\t    Parser.prototype.checkPatternParam = function (options, param) {\n\t        switch (param.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                this.validateParam(options, param, param.name);\n\t                break;\n\t            case syntax_1.Syntax.RestElement:\n\t                this.checkPatternParam(options, param.argument);\n\t                break;\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                this.checkPatternParam(options, param.left);\n\t                break;\n\t            case syntax_1.Syntax.ArrayPattern:\n\t                for (var i = 0; i < param.elements.length; i++) {\n\t                    if (param.elements[i] !== null) {\n\t                        this.checkPatternParam(options, param.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectPattern:\n\t                for (var i = 0; i < param.properties.length; i++) {\n\t                    this.checkPatternParam(options, param.properties[i].value);\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t    };\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n\t        var params = [expr];\n\t        var options;\n\t        var asyncArrow = false;\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                break;\n\t            case ArrowParameterPlaceHolder:\n\t                params = expr.params;\n\t                asyncArrow = expr.async;\n\t                break;\n\t            default:\n\t                return null;\n\t        }\n\t        options = {\n\t            simple: true,\n\t            paramSet: {}\n\t        };\n\t        for (var i = 0; i < params.length; ++i) {\n\t            var param = params[i];\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\n\t                    if (param.right.argument) {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                    param.right.type = syntax_1.Syntax.Identifier;\n\t                    param.right.name = 'yield';\n\t                    delete param.right.argument;\n\t                    delete param.right.delegate;\n\t                }\n\t            }\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.checkPatternParam(options, param);\n\t            params[i] = param;\n\t        }\n\t        if (this.context.strict || !this.context.allowYield) {\n\t            for (var i = 0; i < params.length; ++i) {\n\t                var param = params[i];\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t                }\n\t            }\n\t        }\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\n\t            this.throwUnexpectedToken(token, options.message);\n\t        }\n\t        return {\n\t            simple: options.simple,\n\t            params: params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.parseAssignmentExpression = function () {\n\t        var expr;\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\n\t            expr = this.parseYieldExpression();\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var token = startToken;\n\t            expr = this.parseConditionalExpression();\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\n\t                    var arg = this.parsePrimaryExpression();\n\t                    this.reinterpretExpressionAsPattern(arg);\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: [arg],\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                var isAsync = expr.async;\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\n\t                if (list) {\n\t                    if (this.hasLineTerminator) {\n\t                        this.tolerateUnexpectedToken(this.lookahead);\n\t                    }\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                    var previousStrict = this.context.strict;\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t                    this.context.allowStrictDirective = list.simple;\n\t                    var previousAllowYield = this.context.allowYield;\n\t                    var previousAwait = this.context.await;\n\t                    this.context.allowYield = true;\n\t                    this.context.await = isAsync;\n\t                    var node = this.startNode(startToken);\n\t                    this.expect('=>');\n\t                    var body = void 0;\n\t                    if (this.match('{')) {\n\t                        var previousAllowIn = this.context.allowIn;\n\t                        this.context.allowIn = true;\n\t                        body = this.parseFunctionSourceElements();\n\t                        this.context.allowIn = previousAllowIn;\n\t                    }\n\t                    else {\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    }\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\t                    if (this.context.strict && list.firstRestricted) {\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\n\t                    }\n\t                    if (this.context.strict && list.stricted) {\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\n\t                    }\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n\t                    this.context.strict = previousStrict;\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\n\t                    this.context.allowYield = previousAllowYield;\n\t                    this.context.await = previousAwait;\n\t                }\n\t            }\n\t            else {\n\t                if (this.matchAssign()) {\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n\t                        var id = expr;\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n\t                        }\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t                        }\n\t                    }\n\t                    if (!this.match('=')) {\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                    }\n\t                    else {\n\t                        this.reinterpretExpressionAsPattern(expr);\n\t                    }\n\t                    token = this.nextToken();\n\t                    var operator = token.value;\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\n\t    Parser.prototype.parseExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        if (this.match(',')) {\n\t            var expressions = [];\n\t            expressions.push(expr);\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                if (!this.match(',')) {\n\t                    break;\n\t                }\n\t                this.nextToken();\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t            }\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-block\n\t    Parser.prototype.parseStatementListItem = function () {\n\t        var statement;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.isBindingElement = true;\n\t        if (this.lookahead.type === 4 /* Keyword */) {\n\t            switch (this.lookahead.value) {\n\t                case 'export':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n\t                    }\n\t                    statement = this.parseExportDeclaration();\n\t                    break;\n\t                case 'import':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n\t                    }\n\t                    statement = this.parseImportDeclaration();\n\t                    break;\n\t                case 'const':\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'function':\n\t                    statement = this.parseFunctionDeclaration();\n\t                    break;\n\t                case 'class':\n\t                    statement = this.parseClassDeclaration();\n\t                    break;\n\t                case 'let':\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n\t                    break;\n\t                default:\n\t                    statement = this.parseStatement();\n\t                    break;\n\t            }\n\t        }\n\t        else {\n\t            statement = this.parseStatement();\n\t        }\n\t        return statement;\n\t    };\n\t    Parser.prototype.parseBlock = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var block = [];\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            block.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.BlockStatement(block));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, kind);\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (kind === 'const') {\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n\t                if (this.match('=')) {\n\t                    this.nextToken();\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                }\n\t                else {\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n\t                }\n\t            }\n\t        }\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\n\t            this.expect('=');\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseBindingList = function (kind, options) {\n\t        var list = [this.parseLexicalBinding(kind, options)];\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseLexicalBinding(kind, options));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.isLexicalDeclaration = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.scanner.lex();\n\t        this.scanner.restoreState(state);\n\t        return (next.type === 3 /* Identifier */) ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\n\t    };\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var kind = this.nextToken().value;\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n\t        var declarations = this.parseBindingList(kind, options);\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params, kind);\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('[');\n\t        var elements = [];\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else {\n\t                if (this.match('...')) {\n\t                    elements.push(this.parseBindingRestElement(params, kind));\n\t                    break;\n\t                }\n\t                else {\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\n\t                }\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\n\t    };\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var computed = false;\n\t        var shorthand = false;\n\t        var method = false;\n\t        var key;\n\t        var value;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            var keyToken = this.lookahead;\n\t            key = this.parseVariableIdentifier();\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\t            if (this.match('=')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                this.nextToken();\n\t                var expr = this.parseAssignmentExpression();\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n\t            }\n\t            else if (!this.match(':')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                value = init;\n\t            }\n\t            else {\n\t                this.expect(':');\n\t                value = this.parsePatternWithDefault(params, kind);\n\t            }\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.expect(':');\n\t            value = this.parsePatternWithDefault(params, kind);\n\t        }\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var properties = [];\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            properties.push(this.parsePropertyPattern(params, kind));\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\n\t    };\n\t    Parser.prototype.parsePattern = function (params, kind) {\n\t        var pattern;\n\t        if (this.match('[')) {\n\t            pattern = this.parseArrayPattern(params, kind);\n\t        }\n\t        else if (this.match('{')) {\n\t            pattern = this.parseObjectPattern(params, kind);\n\t        }\n\t        else {\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n\t            }\n\t            params.push(this.lookahead);\n\t            pattern = this.parseVariableIdentifier(kind);\n\t        }\n\t        return pattern;\n\t    };\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\n\t        var startToken = this.lookahead;\n\t        var pattern = this.parsePattern(params, kind);\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = true;\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowYield = previousAllowYield;\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n\t        }\n\t        return pattern;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\n\t            if (this.context.strict) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else if (!this.context.allowYield) {\n\t                this.throwUnexpectedToken(token);\n\t            }\n\t        }\n\t        else if (token.type !== 3 /* Identifier */) {\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else {\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n\t                    this.throwUnexpectedToken(token);\n\t                }\n\t            }\n\t        }\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\n\t            this.tolerateUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, 'var');\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n\t            this.expect('=');\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\n\t        var opt = { inFor: options.inFor };\n\t        var list = [];\n\t        list.push(this.parseVariableDeclaration(opt));\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseVariableDeclaration(opt));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.parseVariableStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('var');\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\n\t    Parser.prototype.parseEmptyStatement = function () {\n\t        var node = this.createNode();\n\t        this.expect(';');\n\t        return this.finalize(node, new Node.EmptyStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\n\t    Parser.prototype.parseExpressionStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\n\t    Parser.prototype.parseIfClause = function () {\n\t        if (this.context.strict && this.matchKeyword('function')) {\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\n\t        }\n\t        return this.parseStatement();\n\t    };\n\t    Parser.prototype.parseIfStatement = function () {\n\t        var node = this.createNode();\n\t        var consequent;\n\t        var alternate = null;\n\t        this.expectKeyword('if');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            consequent = this.parseIfClause();\n\t            if (this.matchKeyword('else')) {\n\t                this.nextToken();\n\t                alternate = this.parseIfClause();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\n\t    Parser.prototype.parseDoWhileStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('do');\n\t        var previousInIteration = this.context.inIteration;\n\t        this.context.inIteration = true;\n\t        var body = this.parseStatement();\n\t        this.context.inIteration = previousInIteration;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\n\t    Parser.prototype.parseWhileStatement = function () {\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.parseStatement();\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\t    Parser.prototype.parseForStatement = function () {\n\t        var init = null;\n\t        var test = null;\n\t        var update = null;\n\t        var forIn = true;\n\t        var left, right;\n\t        var node = this.createNode();\n\t        this.expectKeyword('for');\n\t        this.expect('(');\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            if (this.matchKeyword('var')) {\n\t                init = this.createNode();\n\t                this.nextToken();\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\n\t                this.context.allowIn = previousAllowIn;\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\n\t                    var decl = declarations[0];\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n\t                    }\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.expect(';');\n\t                }\n\t            }\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n\t                init = this.createNode();\n\t                var kind = this.nextToken().value;\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\n\t                    init = this.finalize(init, new Node.Identifier(kind));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else {\n\t                    var previousAllowIn = this.context.allowIn;\n\t                    this.context.allowIn = false;\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\n\t                    this.context.allowIn = previousAllowIn;\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseExpression();\n\t                        init = null;\n\t                    }\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseAssignmentExpression();\n\t                        init = null;\n\t                        forIn = false;\n\t                    }\n\t                    else {\n\t                        this.consumeSemicolon();\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var initStartToken = this.lookahead;\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                this.context.allowIn = previousAllowIn;\n\t                if (this.matchKeyword('in')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (this.matchContextualKeyword('of')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    if (this.match(',')) {\n\t                        var initSeq = [init];\n\t                        while (this.match(',')) {\n\t                            this.nextToken();\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n\t                    }\n\t                    this.expect(';');\n\t                }\n\t            }\n\t        }\n\t        if (typeof left === 'undefined') {\n\t            if (!this.match(';')) {\n\t                test = this.parseExpression();\n\t            }\n\t            this.expect(';');\n\t            if (!this.match(')')) {\n\t                update = this.parseExpression();\n\t            }\n\t        }\n\t        var body;\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.isolateCoverGrammar(this.parseStatement);\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return (typeof left === 'undefined') ?\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\n\t    Parser.prototype.parseContinueStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('continue');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            label = id;\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration) {\n\t            this.throwError(messages_1.Messages.IllegalContinue);\n\t        }\n\t        return this.finalize(node, new Node.ContinueStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\n\t    Parser.prototype.parseBreakStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('break');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t            label = id;\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n\t            this.throwError(messages_1.Messages.IllegalBreak);\n\t        }\n\t        return this.finalize(node, new Node.BreakStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\n\t    Parser.prototype.parseReturnStatement = function () {\n\t        if (!this.context.inFunctionBody) {\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('return');\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\n\t            this.lookahead.type === 10 /* Template */;\n\t        var argument = hasArgument ? this.parseExpression() : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\n\t    Parser.prototype.parseWithStatement = function () {\n\t        if (this.context.strict) {\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\n\t        }\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('with');\n\t        this.expect('(');\n\t        var object = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            body = this.parseStatement();\n\t        }\n\t        return this.finalize(node, new Node.WithStatement(object, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\n\t    Parser.prototype.parseSwitchCase = function () {\n\t        var node = this.createNode();\n\t        var test;\n\t        if (this.matchKeyword('default')) {\n\t            this.nextToken();\n\t            test = null;\n\t        }\n\t        else {\n\t            this.expectKeyword('case');\n\t            test = this.parseExpression();\n\t        }\n\t        this.expect(':');\n\t        var consequent = [];\n\t        while (true) {\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n\t                break;\n\t            }\n\t            consequent.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\n\t    };\n\t    Parser.prototype.parseSwitchStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('switch');\n\t        this.expect('(');\n\t        var discriminant = this.parseExpression();\n\t        this.expect(')');\n\t        var previousInSwitch = this.context.inSwitch;\n\t        this.context.inSwitch = true;\n\t        var cases = [];\n\t        var defaultFound = false;\n\t        this.expect('{');\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            var clause = this.parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t        this.expect('}');\n\t        this.context.inSwitch = previousInSwitch;\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\n\t    Parser.prototype.parseLabelledStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var statement;\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\n\t            this.nextToken();\n\t            var id = expr;\n\t            var key = '$' + id.name;\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n\t            }\n\t            this.context.labelSet[key] = true;\n\t            var body = void 0;\n\t            if (this.matchKeyword('class')) {\n\t                this.tolerateUnexpectedToken(this.lookahead);\n\t                body = this.parseClassDeclaration();\n\t            }\n\t            else if (this.matchKeyword('function')) {\n\t                var token = this.lookahead;\n\t                var declaration = this.parseFunctionDeclaration();\n\t                if (this.context.strict) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n\t                }\n\t                else if (declaration.generator) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n\t                }\n\t                body = declaration;\n\t            }\n\t            else {\n\t                body = this.parseStatement();\n\t            }\n\t            delete this.context.labelSet[key];\n\t            statement = new Node.LabeledStatement(id, body);\n\t        }\n\t        else {\n\t            this.consumeSemicolon();\n\t            statement = new Node.ExpressionStatement(expr);\n\t        }\n\t        return this.finalize(node, statement);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\n\t    Parser.prototype.parseThrowStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('throw');\n\t        if (this.hasLineTerminator) {\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\n\t        }\n\t        var argument = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\n\t    Parser.prototype.parseCatchClause = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('catch');\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        var params = [];\n\t        var param = this.parsePattern(params);\n\t        var paramMap = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var key = '$' + params[i].value;\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n\t            }\n\t            paramMap[key] = true;\n\t        }\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(param.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\n\t            }\n\t        }\n\t        this.expect(')');\n\t        var body = this.parseBlock();\n\t        return this.finalize(node, new Node.CatchClause(param, body));\n\t    };\n\t    Parser.prototype.parseFinallyClause = function () {\n\t        this.expectKeyword('finally');\n\t        return this.parseBlock();\n\t    };\n\t    Parser.prototype.parseTryStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('try');\n\t        var block = this.parseBlock();\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\t        if (!handler && !finalizer) {\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\n\t        }\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\n\t    Parser.prototype.parseDebuggerStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('debugger');\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.DebuggerStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\t    Parser.prototype.parseStatement = function () {\n\t        var statement;\n\t        switch (this.lookahead.type) {\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t            case 10 /* Template */:\n\t            case 9 /* RegularExpression */:\n\t                statement = this.parseExpressionStatement();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                var value = this.lookahead.value;\n\t                if (value === '{') {\n\t                    statement = this.parseBlock();\n\t                }\n\t                else if (value === '(') {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                else if (value === ';') {\n\t                    statement = this.parseEmptyStatement();\n\t                }\n\t                else {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                break;\n\t            case 3 /* Identifier */:\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n\t                break;\n\t            case 4 /* Keyword */:\n\t                switch (this.lookahead.value) {\n\t                    case 'break':\n\t                        statement = this.parseBreakStatement();\n\t                        break;\n\t                    case 'continue':\n\t                        statement = this.parseContinueStatement();\n\t                        break;\n\t                    case 'debugger':\n\t                        statement = this.parseDebuggerStatement();\n\t                        break;\n\t                    case 'do':\n\t                        statement = this.parseDoWhileStatement();\n\t                        break;\n\t                    case 'for':\n\t                        statement = this.parseForStatement();\n\t                        break;\n\t                    case 'function':\n\t                        statement = this.parseFunctionDeclaration();\n\t                        break;\n\t                    case 'if':\n\t                        statement = this.parseIfStatement();\n\t                        break;\n\t                    case 'return':\n\t                        statement = this.parseReturnStatement();\n\t                        break;\n\t                    case 'switch':\n\t                        statement = this.parseSwitchStatement();\n\t                        break;\n\t                    case 'throw':\n\t                        statement = this.parseThrowStatement();\n\t                        break;\n\t                    case 'try':\n\t                        statement = this.parseTryStatement();\n\t                        break;\n\t                    case 'var':\n\t                        statement = this.parseVariableStatement();\n\t                        break;\n\t                    case 'while':\n\t                        statement = this.parseWhileStatement();\n\t                        break;\n\t                    case 'with':\n\t                        statement = this.parseWithStatement();\n\t                        break;\n\t                    default:\n\t                        statement = this.parseExpressionStatement();\n\t                        break;\n\t                }\n\t                break;\n\t            default:\n\t                statement = this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return statement;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\n\t    Parser.prototype.parseFunctionSourceElements = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var body = this.parseDirectivePrologues();\n\t        var previousLabelSet = this.context.labelSet;\n\t        var previousInIteration = this.context.inIteration;\n\t        var previousInSwitch = this.context.inSwitch;\n\t        var previousInFunctionBody = this.context.inFunctionBody;\n\t        this.context.labelSet = {};\n\t        this.context.inIteration = false;\n\t        this.context.inSwitch = false;\n\t        this.context.inFunctionBody = true;\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        this.context.labelSet = previousLabelSet;\n\t        this.context.inIteration = previousInIteration;\n\t        this.context.inSwitch = previousInSwitch;\n\t        this.context.inFunctionBody = previousInFunctionBody;\n\t        return this.finalize(node, new Node.BlockStatement(body));\n\t    };\n\t    Parser.prototype.validateParam = function (options, param, name) {\n\t        var key = '$' + name;\n\t        if (this.context.strict) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        else if (!options.firstRestricted) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictReservedWord;\n\t            }\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        if (typeof Object.defineProperty === 'function') {\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n\t        }\n\t        else {\n\t            options.paramSet[key] = true;\n\t        }\n\t    };\n\t    Parser.prototype.parseRestElement = function (params) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params);\n\t        if (this.match('=')) {\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\n\t        }\n\t        if (!this.match(')')) {\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n\t        }\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseFormalParameter = function (options) {\n\t        var params = [];\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\t        for (var i = 0; i < params.length; i++) {\n\t            this.validateParam(options, params[i], params[i].value);\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t        options.params.push(param);\n\t    };\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\n\t        var options;\n\t        options = {\n\t            simple: true,\n\t            params: [],\n\t            firstRestricted: firstRestricted\n\t        };\n\t        this.expect('(');\n\t        if (!this.match(')')) {\n\t            options.paramSet = {};\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                this.parseFormalParameter(options);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expect(',');\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return {\n\t            simple: options.simple,\n\t            params: options.params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.matchAsyncFunction = function () {\n\t        var match = this.matchContextualKeyword('async');\n\t        if (match) {\n\t            var state = this.scanner.saveState();\n\t            this.scanner.scanComments();\n\t            var next = this.scanner.lex();\n\t            this.scanner.restoreState(state);\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\n\t        }\n\t        return match;\n\t    };\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted = null;\n\t        if (!identifierIsOptional || !this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n\t    };\n\t    Parser.prototype.parseFunctionExpression = function () {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted;\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        if (!this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\t    Parser.prototype.parseDirective = function () {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n\t    };\n\t    Parser.prototype.parseDirectivePrologues = function () {\n\t        var firstRestricted = null;\n\t        var body = [];\n\t        while (true) {\n\t            var token = this.lookahead;\n\t            if (token.type !== 8 /* StringLiteral */) {\n\t                break;\n\t            }\n\t            var statement = this.parseDirective();\n\t            body.push(statement);\n\t            var directive = statement.directive;\n\t            if (typeof directive !== 'string') {\n\t                break;\n\t            }\n\t            if (directive === 'use strict') {\n\t                this.context.strict = true;\n\t                if (firstRestricted) {\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                if (!this.context.allowStrictDirective) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n\t                }\n\t            }\n\t            else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t        return body;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\n\t        switch (token.type) {\n\t            case 3 /* Identifier */:\n\t            case 8 /* StringLiteral */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 4 /* Keyword */:\n\t                return true;\n\t            case 7 /* Punctuator */:\n\t                return token.value === '[';\n\t            default:\n\t                break;\n\t        }\n\t        return false;\n\t    };\n\t    Parser.prototype.parseGetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length > 0) {\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseSetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length !== 1) {\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\n\t        }\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseGeneratorMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = true;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        this.context.allowYield = false;\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\t    Parser.prototype.isStartOfExpression = function () {\n\t        var start = true;\n\t        var value = this.lookahead.value;\n\t        switch (this.lookahead.type) {\n\t            case 7 /* Punctuator */:\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\n\t                    (value === '+') || (value === '-') ||\n\t                    (value === '!') || (value === '~') ||\n\t                    (value === '++') || (value === '--') ||\n\t                    (value === '/') || (value === '/='); // regular expression literal\n\t                break;\n\t            case 4 /* Keyword */:\n\t                start = (value === 'class') || (value === 'delete') ||\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\n\t                    (value === 'void') || (value === 'yield');\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return start;\n\t    };\n\t    Parser.prototype.parseYieldExpression = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('yield');\n\t        var argument = null;\n\t        var delegate = false;\n\t        if (!this.hasLineTerminator) {\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = false;\n\t            delegate = this.match('*');\n\t            if (delegate) {\n\t                this.nextToken();\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            else if (this.isStartOfExpression()) {\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            this.context.allowYield = previousAllowYield;\n\t        }\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var kind = '';\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var isStatic = false;\n\t        var isAsync = false;\n\t        if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            var id = key;\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n\t                token = this.lookahead;\n\t                isStatic = true;\n\t                computed = this.match('[');\n\t                if (this.match('*')) {\n\t                    this.nextToken();\n\t                }\n\t                else {\n\t                    key = this.parseObjectPropertyKey();\n\t                }\n\t            }\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\n\t                var punctuator = this.lookahead.value;\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n\t                    isAsync = true;\n\t                    token = this.lookahead;\n\t                    key = this.parseObjectPropertyKey();\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */) {\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\n\t                kind = 'get';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                this.context.allowYield = false;\n\t                value = this.parseGetterMethod();\n\t            }\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\n\t                kind = 'set';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                value = this.parseSetterMethod();\n\t            }\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        if (!kind && key && this.match('(')) {\n\t            kind = 'init';\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t            method = true;\n\t        }\n\t        if (!kind) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        if (kind === 'init') {\n\t            kind = 'method';\n\t        }\n\t        if (!computed) {\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n\t            }\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n\t                }\n\t                if (hasConstructor.value) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n\t                }\n\t                else {\n\t                    hasConstructor.value = true;\n\t                }\n\t                kind = 'constructor';\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n\t    };\n\t    Parser.prototype.parseClassElementList = function () {\n\t        var body = [];\n\t        var hasConstructor = { value: false };\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t            else {\n\t                body.push(this.parseClassElement(hasConstructor));\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return body;\n\t    };\n\t    Parser.prototype.parseClassBody = function () {\n\t        var node = this.createNode();\n\t        var elementList = this.parseClassElementList();\n\t        return this.finalize(node, new Node.ClassBody(elementList));\n\t    };\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n\t    };\n\t    Parser.prototype.parseClassExpression = function () {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-scripts\n\t    // https://tc39.github.io/ecma262/#sec-modules\n\t    Parser.prototype.parseModule = function () {\n\t        this.context.strict = true;\n\t        this.context.isModule = true;\n\t        this.scanner.isModule = true;\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Module(body));\n\t    };\n\t    Parser.prototype.parseScript = function () {\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Script(body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-imports\n\t    Parser.prototype.parseModuleSpecifier = function () {\n\t        var node = this.createNode();\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n\t        }\n\t        var token = this.nextToken();\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    // import {<foo as bar>} ...;\n\t    Parser.prototype.parseImportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var imported;\n\t        var local;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            imported = this.parseVariableIdentifier();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t        }\n\t        else {\n\t            imported = this.parseIdentifierName();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\n\t    };\n\t    // {foo, bar as bas}\n\t    Parser.prototype.parseNamedImports = function () {\n\t        this.expect('{');\n\t        var specifiers = [];\n\t        while (!this.match('}')) {\n\t            specifiers.push(this.parseImportSpecifier());\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return specifiers;\n\t    };\n\t    // import <foo> ...;\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n\t    };\n\t    // import <* as foo> ...;\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\n\t        var node = this.createNode();\n\t        this.expect('*');\n\t        if (!this.matchContextualKeyword('as')) {\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n\t        }\n\t        this.nextToken();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n\t    };\n\t    Parser.prototype.parseImportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('import');\n\t        var src;\n\t        var specifiers = [];\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\n\t            // import 'foo';\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        else {\n\t            if (this.match('{')) {\n\t                // import {bar}\n\t                specifiers = specifiers.concat(this.parseNamedImports());\n\t            }\n\t            else if (this.match('*')) {\n\t                // import * as foo\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\n\t            }\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n\t                // import foo\n\t                specifiers.push(this.parseImportDefaultSpecifier());\n\t                if (this.match(',')) {\n\t                    this.nextToken();\n\t                    if (this.match('*')) {\n\t                        // import foo, * as foo\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\n\t                    }\n\t                    else if (this.match('{')) {\n\t                        // import foo, {bar}\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\n\t                    }\n\t                    else {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exports\n\t    Parser.prototype.parseExportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        var exported = local;\n\t        if (this.matchContextualKeyword('as')) {\n\t            this.nextToken();\n\t            exported = this.parseIdentifierName();\n\t        }\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\n\t    };\n\t    Parser.prototype.parseExportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('export');\n\t        var exportDeclaration;\n\t        if (this.matchKeyword('default')) {\n\t            // export default ...\n\t            this.nextToken();\n\t            if (this.matchKeyword('function')) {\n\t                // export default function foo () {}\n\t                // export default function () {}\n\t                var declaration = this.parseFunctionDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchKeyword('class')) {\n\t                // export default class foo {}\n\t                var declaration = this.parseClassDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchContextualKeyword('async')) {\n\t                // export default async function f () {}\n\t                // export default async function () {}\n\t                // export default async x => x\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else {\n\t                if (this.matchContextualKeyword('from')) {\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n\t                }\n\t                // export default {};\n\t                // export default [];\n\t                // export default (1 + 2);\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n\t                this.consumeSemicolon();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t        }\n\t        else if (this.match('*')) {\n\t            // export * from 'foo';\n\t            this.nextToken();\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            var src = this.parseModuleSpecifier();\n\t            this.consumeSemicolon();\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n\t        }\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\n\t            // export var f = 1;\n\t            var declaration = void 0;\n\t            switch (this.lookahead.value) {\n\t                case 'let':\n\t                case 'const':\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'var':\n\t                case 'class':\n\t                case 'function':\n\t                    declaration = this.parseStatementListItem();\n\t                    break;\n\t                default:\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else if (this.matchAsyncFunction()) {\n\t            var declaration = this.parseFunctionDeclaration();\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else {\n\t            var specifiers = [];\n\t            var source = null;\n\t            var isExportFromIdentifier = false;\n\t            this.expect('{');\n\t            while (!this.match('}')) {\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n\t                specifiers.push(this.parseExportSpecifier());\n\t                if (!this.match('}')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t            this.expect('}');\n\t            if (this.matchContextualKeyword('from')) {\n\t                // export {default} from 'foo';\n\t                // export {foo} from 'foo';\n\t                this.nextToken();\n\t                source = this.parseModuleSpecifier();\n\t                this.consumeSemicolon();\n\t            }\n\t            else if (isExportFromIdentifier) {\n\t                // export {default}; // missing fromClause\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            else {\n\t                // export {foo};\n\t                this.consumeSemicolon();\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n\t        }\n\t        return exportDeclaration;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Ensure the condition is true, otherwise throw an error.\n\t// This is only to have a better contract semantic, i.e. another safety net\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\n\t// Do NOT use this to enforce a certain condition on any user input.\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction assert(condition, message) {\n\t    /* istanbul ignore if */\n\t    if (!condition) {\n\t        throw new Error('ASSERT: ' + message);\n\t    }\n\t}\n\texports.assert = assert;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/* tslint:disable:max-classes-per-file */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar ErrorHandler = (function () {\n\t    function ErrorHandler() {\n\t        this.errors = [];\n\t        this.tolerant = false;\n\t    }\n\t    ErrorHandler.prototype.recordError = function (error) {\n\t        this.errors.push(error);\n\t    };\n\t    ErrorHandler.prototype.tolerate = function (error) {\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\n\t        var error = new Error(msg);\n\t        try {\n\t            throw error;\n\t        }\n\t        catch (base) {\n\t            /* istanbul ignore else */\n\t            if (Object.create && Object.defineProperty) {\n\t                error = Object.create(base);\n\t                Object.defineProperty(error, 'column', { value: column });\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\n\t        var msg = 'Line ' + line + ': ' + description;\n\t        var error = this.constructError(msg, col);\n\t        error.index = index;\n\t        error.lineNumber = line;\n\t        error.description = description;\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\n\t        throw this.createError(index, line, col, description);\n\t    };\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n\t        var error = this.createError(index, line, col, description);\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    return ErrorHandler;\n\t}());\n\texports.ErrorHandler = ErrorHandler;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Error messages should be identical to V8.\n\texports.Messages = {\n\t    BadGetterArity: 'Getter must not have any formal parameters',\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n\t    DefaultRestParameter: 'Unexpected token =',\n\t    DuplicateBinding: 'Duplicate binding %0',\n\t    DuplicateConstructor: 'A class may only have one constructor',\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n\t    IllegalBreak: 'Illegal break statement',\n\t    IllegalContinue: 'Illegal continue statement',\n\t    IllegalExportDeclaration: 'Unexpected token',\n\t    IllegalImportDeclaration: 'Unexpected token',\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n\t    IllegalReturn: 'Illegal return statement',\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n\t    InvalidModuleSpecifier: 'Unexpected token',\n\t    InvalidRegExp: 'Invalid regular expression',\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n\t    MissingFromClause: 'Unexpected token',\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t    NewlineAfterThrow: 'Illegal newline after throw',\n\t    NoAsAfterImportNamespace: 'Unexpected token',\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\n\t    StaticPrototype: 'Classes may not have static property named prototype',\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n\t    UnexpectedEOS: 'Unexpected end of input',\n\t    UnexpectedIdentifier: 'Unexpected identifier',\n\t    UnexpectedNumber: 'Unexpected number',\n\t    UnexpectedReserved: 'Unexpected reserved word',\n\t    UnexpectedString: 'Unexpected string',\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\n\t    UnexpectedToken: 'Unexpected token %0',\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar character_1 = __webpack_require__(4);\n\tvar messages_1 = __webpack_require__(11);\n\tfunction hexValue(ch) {\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t}\n\tfunction octalValue(ch) {\n\t    return '01234567'.indexOf(ch);\n\t}\n\tvar Scanner = (function () {\n\t    function Scanner(code, handler) {\n\t        this.source = code;\n\t        this.errorHandler = handler;\n\t        this.trackComment = false;\n\t        this.isModule = false;\n\t        this.length = code.length;\n\t        this.index = 0;\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\n\t        this.lineStart = 0;\n\t        this.curlyStack = [];\n\t    }\n\t    Scanner.prototype.saveState = function () {\n\t        return {\n\t            index: this.index,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart\n\t        };\n\t    };\n\t    Scanner.prototype.restoreState = function (state) {\n\t        this.index = state.index;\n\t        this.lineNumber = state.lineNumber;\n\t        this.lineStart = state.lineStart;\n\t    };\n\t    Scanner.prototype.eof = function () {\n\t        return this.index >= this.length;\n\t    };\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comments\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - offset;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - offset\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            ++this.index;\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (this.trackComment) {\n\t                    loc.end = {\n\t                        line: this.lineNumber,\n\t                        column: this.index - this.lineStart - 1\n\t                    };\n\t                    var entry = {\n\t                        multiLine: false,\n\t                        slice: [start + offset, this.index - 1],\n\t                        range: [start, this.index - 1],\n\t                        loc: loc\n\t                    };\n\t                    comments.push(entry);\n\t                }\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                return comments;\n\t            }\n\t        }\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: false,\n\t                slice: [start + offset, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        return comments;\n\t    };\n\t    Scanner.prototype.skipMultiLineComment = function () {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - 2\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                ++this.index;\n\t                this.lineStart = this.index;\n\t            }\n\t            else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n\t                    this.index += 2;\n\t                    if (this.trackComment) {\n\t                        loc.end = {\n\t                            line: this.lineNumber,\n\t                            column: this.index - this.lineStart\n\t                        };\n\t                        var entry = {\n\t                            multiLine: true,\n\t                            slice: [start + 2, this.index - 2],\n\t                            range: [start, this.index],\n\t                            loc: loc\n\t                        };\n\t                        comments.push(entry);\n\t                    }\n\t                    return comments;\n\t                }\n\t                ++this.index;\n\t            }\n\t            else {\n\t                ++this.index;\n\t            }\n\t        }\n\t        // Ran off the end of the file - the whole thing is a comment\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: true,\n\t                slice: [start + 2, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        this.tolerateUnexpectedToken();\n\t        return comments;\n\t    };\n\t    Scanner.prototype.scanComments = function () {\n\t        var comments;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t        }\n\t        var start = (this.index === 0);\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isWhiteSpace(ch)) {\n\t                ++this.index;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch)) {\n\t                ++this.index;\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                start = true;\n\t            }\n\t            else if (ch === 0x2F) {\n\t                ch = this.source.charCodeAt(this.index + 1);\n\t                if (ch === 0x2F) {\n\t                    this.index += 2;\n\t                    var comment = this.skipSingleLineComment(2);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                    start = true;\n\t                }\n\t                else if (ch === 0x2A) {\n\t                    this.index += 2;\n\t                    var comment = this.skipMultiLineComment();\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (start && ch === 0x2D) {\n\t                // U+003E is '>'\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    this.index += 3;\n\t                    var comment = this.skipSingleLineComment(3);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (ch === 0x3C && !this.isModule) {\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n\t                    this.index += 4; // `<!--`\n\t                    var comment = this.skipSingleLineComment(4);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return comments;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'enum':\n\t            case 'export':\n\t            case 'import':\n\t            case 'super':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'implements':\n\t            case 'interface':\n\t            case 'package':\n\t            case 'private':\n\t            case 'protected':\n\t            case 'public':\n\t            case 'static':\n\t            case 'yield':\n\t            case 'let':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isRestrictedWord = function (id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-keywords\n\t    Scanner.prototype.isKeyword = function (id) {\n\t        switch (id.length) {\n\t            case 2:\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\n\t            case 3:\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                    (id === 'try') || (id === 'let');\n\t            case 4:\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\n\t            case 5:\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                    (id === 'class') || (id === 'super');\n\t            case 6:\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\n\t            case 7:\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t            case 8:\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t            case 10:\n\t                return (id === 'instanceof');\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.codePointAt = function (i) {\n\t        var cp = this.source.charCodeAt(i);\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\n\t            var second = this.source.charCodeAt(i + 1);\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\n\t                var first = cp;\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t            }\n\t        }\n\t        return cp;\n\t    };\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\n\t        var len = (prefix === 'u') ? 4 : 2;\n\t        var code = 0;\n\t        for (var i = 0; i < len; ++i) {\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 16 + hexValue(this.source[this.index++]);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    };\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\n\t        var ch = this.source[this.index];\n\t        var code = 0;\n\t        // At least, one hex digit is required.\n\t        if (ch === '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            code = code * 16 + hexValue(ch);\n\t        }\n\t        if (code > 0x10FFFF || ch !== '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return character_1.Character.fromCodePoint(code);\n\t    };\n\t    Scanner.prototype.getIdentifier = function () {\n\t        var start = this.index++;\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\n\t                // Need to handle surrogate pairs.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            if (character_1.Character.isIdentifierPart(ch)) {\n\t                ++this.index;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return this.source.slice(start, this.index);\n\t    };\n\t    Scanner.prototype.getComplexIdentifier = function () {\n\t        var cp = this.codePointAt(this.index);\n\t        var id = character_1.Character.fromCodePoint(cp);\n\t        this.index += id.length;\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        var ch;\n\t        if (cp === 0x5C) {\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t            ++this.index;\n\t            if (this.source[this.index] === '{') {\n\t                ++this.index;\n\t                ch = this.scanUnicodeCodePointEscape();\n\t            }\n\t            else {\n\t                ch = this.scanHexEscape('u');\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t            }\n\t            id = ch;\n\t        }\n\t        while (!this.eof()) {\n\t            cp = this.codePointAt(this.index);\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\n\t                break;\n\t            }\n\t            ch = character_1.Character.fromCodePoint(cp);\n\t            id += ch;\n\t            this.index += ch.length;\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (cp === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t                ++this.index;\n\t                if (this.source[this.index] === '{') {\n\t                    ++this.index;\n\t                    ch = this.scanUnicodeCodePointEscape();\n\t                }\n\t                else {\n\t                    ch = this.scanHexEscape('u');\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                        this.throwUnexpectedToken();\n\t                    }\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t        return id;\n\t    };\n\t    Scanner.prototype.octalToDecimal = function (ch) {\n\t        // \\0 is not octal escape sequence\n\t        var octal = (ch !== '0');\n\t        var code = octalValue(ch);\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t            octal = true;\n\t            code = code * 8 + octalValue(this.source[this.index++]);\n\t            // 3 digits are only allowed when string starts\n\t            // with 0, 1, 2, 3\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 8 + octalValue(this.source[this.index++]);\n\t            }\n\t        }\n\t        return {\n\t            code: code,\n\t            octal: octal\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    Scanner.prototype.scanIdentifier = function () {\n\t        var type;\n\t        var start = this.index;\n\t        // Backslash (U+005C) starts an escaped character.\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        else if (this.isKeyword(id)) {\n\t            type = 4 /* Keyword */;\n\t        }\n\t        else if (id === 'null') {\n\t            type = 5 /* NullLiteral */;\n\t        }\n\t        else if (id === 'true' || id === 'false') {\n\t            type = 1 /* BooleanLiteral */;\n\t        }\n\t        else {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\n\t            var restore = this.index;\n\t            this.index = start;\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n\t            this.index = restore;\n\t        }\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\n\t    Scanner.prototype.scanPunctuator = function () {\n\t        var start = this.index;\n\t        // Check for most common single-character punctuators.\n\t        var str = this.source[this.index];\n\t        switch (str) {\n\t            case '(':\n\t            case '{':\n\t                if (str === '{') {\n\t                    this.curlyStack.push('{');\n\t                }\n\t                ++this.index;\n\t                break;\n\t            case '.':\n\t                ++this.index;\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n\t                    // Spread operator: ...\n\t                    this.index += 2;\n\t                    str = '...';\n\t                }\n\t                break;\n\t            case '}':\n\t                ++this.index;\n\t                this.curlyStack.pop();\n\t                break;\n\t            case ')':\n\t            case ';':\n\t            case ',':\n\t            case '[':\n\t            case ']':\n\t            case ':':\n\t            case '?':\n\t            case '~':\n\t                ++this.index;\n\t                break;\n\t            default:\n\t                // 4-character punctuator.\n\t                str = this.source.substr(this.index, 4);\n\t                if (str === '>>>=') {\n\t                    this.index += 4;\n\t                }\n\t                else {\n\t                    // 3-character punctuators.\n\t                    str = str.substr(0, 3);\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\n\t                        this.index += 3;\n\t                    }\n\t                    else {\n\t                        // 2-character punctuators.\n\t                        str = str.substr(0, 2);\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\n\t                            this.index += 2;\n\t                        }\n\t                        else {\n\t                            // 1-character punctuators.\n\t                            str = this.source[this.index];\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n\t                                ++this.index;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t        }\n\t        if (this.index === start) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 7 /* Punctuator */,\n\t            value: str,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    Scanner.prototype.scanHexLiteral = function (start) {\n\t        var num = '';\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt('0x' + num, 16),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\n\t        var num = '';\n\t        var ch;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index];\n\t            if (ch !== '0' && ch !== '1') {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            // only 0b or 0B\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!this.eof()) {\n\t            ch = this.source.charCodeAt(this.index);\n\t            /* istanbul ignore else */\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 2),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n\t        var num = '';\n\t        var octal = false;\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n\t            octal = true;\n\t            num = '0' + this.source[this.index++];\n\t        }\n\t        else {\n\t            ++this.index;\n\t        }\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (!octal && num.length === 0) {\n\t            // only 0o or 0O\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 8),\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (var i = this.index + 1; i < this.length; ++i) {\n\t            var ch = this.source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                return true;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Scanner.prototype.scanNumericLiteral = function () {\n\t        var start = this.index;\n\t        var ch = this.source[start];\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\n\t        var num = '';\n\t        if (ch !== '.') {\n\t            num = this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            // Octal number in ES6 starts with '0o'.\n\t            // Binary number in ES6 starts with '0b'.\n\t            if (num === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++this.index;\n\t                    return this.scanHexLiteral(start);\n\t                }\n\t                if (ch === 'b' || ch === 'B') {\n\t                    ++this.index;\n\t                    return this.scanBinaryLiteral(start);\n\t                }\n\t                if (ch === 'o' || ch === 'O') {\n\t                    return this.scanOctalLiteral(ch, start);\n\t                }\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                    if (this.isImplicitOctalLiteral()) {\n\t                        return this.scanOctalLiteral(ch, start);\n\t                    }\n\t                }\n\t            }\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === '.') {\n\t            num += this.source[this.index++];\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            num += this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            if (ch === '+' || ch === '-') {\n\t                num += this.source[this.index++];\n\t            }\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                    num += this.source[this.index++];\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseFloat(num),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\t    Scanner.prototype.scanStringLiteral = function () {\n\t        var start = this.index;\n\t        var quote = this.source[start];\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\n\t        ++this.index;\n\t        var octal = false;\n\t        var str = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                str += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var unescaped_1 = this.scanHexEscape(ch);\n\t                                if (unescaped_1 === null) {\n\t                                    this.throwUnexpectedToken();\n\t                                }\n\t                                str += unescaped_1;\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            str += unescaped;\n\t                            break;\n\t                        case 'n':\n\t                            str += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            str += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            str += '\\t';\n\t                            break;\n\t                        case 'b':\n\t                            str += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            str += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            str += '\\x0B';\n\t                            break;\n\t                        case '8':\n\t                        case '9':\n\t                            str += ch;\n\t                            this.tolerateUnexpectedToken();\n\t                            break;\n\t                        default:\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                var octToDec = this.octalToDecimal(ch);\n\t                                octal = octToDec.octal || octal;\n\t                                str += String.fromCharCode(octToDec.code);\n\t                            }\n\t                            else {\n\t                                str += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            else {\n\t                str += ch;\n\t            }\n\t        }\n\t        if (quote !== '') {\n\t            this.index = start;\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 8 /* StringLiteral */,\n\t            value: str,\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\t    Scanner.prototype.scanTemplate = function () {\n\t        var cooked = '';\n\t        var terminated = false;\n\t        var start = this.index;\n\t        var head = (this.source[start] === '`');\n\t        var tail = false;\n\t        var rawOffset = 2;\n\t        ++this.index;\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === '`') {\n\t                rawOffset = 1;\n\t                tail = true;\n\t                terminated = true;\n\t                break;\n\t            }\n\t            else if (ch === '$') {\n\t                if (this.source[this.index] === '{') {\n\t                    this.curlyStack.push('${');\n\t                    ++this.index;\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                cooked += ch;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'n':\n\t                            cooked += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            cooked += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            cooked += '\\t';\n\t                            break;\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                cooked += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var restore = this.index;\n\t                                var unescaped_2 = this.scanHexEscape(ch);\n\t                                if (unescaped_2 !== null) {\n\t                                    cooked += unescaped_2;\n\t                                }\n\t                                else {\n\t                                    this.index = restore;\n\t                                    cooked += ch;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            cooked += unescaped;\n\t                            break;\n\t                        case 'b':\n\t                            cooked += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            cooked += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            cooked += '\\v';\n\t                            break;\n\t                        default:\n\t                            if (ch === '0') {\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                                    // Illegal: \\01 \\02 and so on\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                                }\n\t                                cooked += '\\0';\n\t                            }\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                // Illegal: \\1 \\2\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                            }\n\t                            else {\n\t                                cooked += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.lineNumber;\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                    ++this.index;\n\t                }\n\t                this.lineStart = this.index;\n\t                cooked += '\\n';\n\t            }\n\t            else {\n\t                cooked += ch;\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!head) {\n\t            this.curlyStack.pop();\n\t        }\n\t        return {\n\t            type: 10 /* Template */,\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\n\t            cooked: cooked,\n\t            head: head,\n\t            tail: tail,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\n\t        // The BMP character to use as a replacement for astral symbols when\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n\t        // approximation.\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n\t        // pattern that would not be detected by this substitution.\n\t        var astralSubstitute = '\\uFFFF';\n\t        var tmp = pattern;\n\t        var self = this;\n\t        if (flags.indexOf('u') >= 0) {\n\t            tmp = tmp\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n\t                var codePoint = parseInt($1 || $2, 16);\n\t                if (codePoint > 0x10FFFF) {\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t                }\n\t                if (codePoint <= 0xFFFF) {\n\t                    return String.fromCharCode(codePoint);\n\t                }\n\t                return astralSubstitute;\n\t            })\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n\t        }\n\t        // First, detect invalid regular expressions.\n\t        try {\n\t            RegExp(tmp);\n\t        }\n\t        catch (e) {\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t        }\n\t        // Return a regular expression object for this pattern-flag pair, or\n\t        // `null` in case the current environment doesn't support the flags it\n\t        // uses.\n\t        try {\n\t            return new RegExp(pattern, flags);\n\t        }\n\t        catch (exception) {\n\t            /* istanbul ignore next */\n\t            return null;\n\t        }\n\t    };\n\t    Scanner.prototype.scanRegExpBody = function () {\n\t        var ch = this.source[this.index];\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        var str = this.source[this.index++];\n\t        var classMarker = false;\n\t        var terminated = false;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t            }\n\t            else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            }\n\t            else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t        }\n\t        // Exclude leading and trailing slash.\n\t        return str.substr(1, str.length - 2);\n\t    };\n\t    Scanner.prototype.scanRegExpFlags = function () {\n\t        var str = '';\n\t        var flags = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index];\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            ++this.index;\n\t            if (ch === '\\\\' && !this.eof()) {\n\t                ch = this.source[this.index];\n\t                if (ch === 'u') {\n\t                    ++this.index;\n\t                    var restore = this.index;\n\t                    var char = this.scanHexEscape('u');\n\t                    if (char !== null) {\n\t                        flags += char;\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\n\t                            str += this.source[restore];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t                else {\n\t                    str += '\\\\';\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t            }\n\t            else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t        return flags;\n\t    };\n\t    Scanner.prototype.scanRegExp = function () {\n\t        var start = this.index;\n\t        var pattern = this.scanRegExpBody();\n\t        var flags = this.scanRegExpFlags();\n\t        var value = this.testRegExp(pattern, flags);\n\t        return {\n\t            type: 9 /* RegularExpression */,\n\t            value: '',\n\t            pattern: pattern,\n\t            flags: flags,\n\t            regex: value,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.lex = function () {\n\t        if (this.eof()) {\n\t            return {\n\t                type: 2 /* EOF */,\n\t                value: '',\n\t                lineNumber: this.lineNumber,\n\t                lineStart: this.lineStart,\n\t                start: this.index,\n\t                end: this.index\n\t            };\n\t        }\n\t        var cp = this.source.charCodeAt(this.index);\n\t        if (character_1.Character.isIdentifierStart(cp)) {\n\t            return this.scanIdentifier();\n\t        }\n\t        // Very common: ( and ) and ;\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n\t            return this.scanPunctuator();\n\t        }\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (cp === 0x27 || cp === 0x22) {\n\t            return this.scanStringLiteral();\n\t        }\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (cp === 0x2E) {\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n\t                return this.scanNumericLiteral();\n\t            }\n\t            return this.scanPunctuator();\n\t        }\n\t        if (character_1.Character.isDecimalDigit(cp)) {\n\t            return this.scanNumericLiteral();\n\t        }\n\t        // Template literals start with ` (U+0060) for template head\n\t        // or } (U+007D) for template middle or template tail.\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\n\t            return this.scanTemplate();\n\t        }\n\t        // Possible identifier start in a surrogate pair.\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n\t                return this.scanIdentifier();\n\t            }\n\t        }\n\t        return this.scanPunctuator();\n\t    };\n\t    return Scanner;\n\t}());\n\texports.Scanner = Scanner;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.TokenName = {};\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\n\texports.TokenName[2 /* EOF */] = '<end>';\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\n\texports.TokenName[8 /* StringLiteral */] = 'String';\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\n\texports.TokenName[10 /* Template */] = 'Template';\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.XHTMLEntities = {\n\t    quot: '\\u0022',\n\t    amp: '\\u0026',\n\t    apos: '\\u0027',\n\t    gt: '\\u003E',\n\t    nbsp: '\\u00A0',\n\t    iexcl: '\\u00A1',\n\t    cent: '\\u00A2',\n\t    pound: '\\u00A3',\n\t    curren: '\\u00A4',\n\t    yen: '\\u00A5',\n\t    brvbar: '\\u00A6',\n\t    sect: '\\u00A7',\n\t    uml: '\\u00A8',\n\t    copy: '\\u00A9',\n\t    ordf: '\\u00AA',\n\t    laquo: '\\u00AB',\n\t    not: '\\u00AC',\n\t    shy: '\\u00AD',\n\t    reg: '\\u00AE',\n\t    macr: '\\u00AF',\n\t    deg: '\\u00B0',\n\t    plusmn: '\\u00B1',\n\t    sup2: '\\u00B2',\n\t    sup3: '\\u00B3',\n\t    acute: '\\u00B4',\n\t    micro: '\\u00B5',\n\t    para: '\\u00B6',\n\t    middot: '\\u00B7',\n\t    cedil: '\\u00B8',\n\t    sup1: '\\u00B9',\n\t    ordm: '\\u00BA',\n\t    raquo: '\\u00BB',\n\t    frac14: '\\u00BC',\n\t    frac12: '\\u00BD',\n\t    frac34: '\\u00BE',\n\t    iquest: '\\u00BF',\n\t    Agrave: '\\u00C0',\n\t    Aacute: '\\u00C1',\n\t    Acirc: '\\u00C2',\n\t    Atilde: '\\u00C3',\n\t    Auml: '\\u00C4',\n\t    Aring: '\\u00C5',\n\t    AElig: '\\u00C6',\n\t    Ccedil: '\\u00C7',\n\t    Egrave: '\\u00C8',\n\t    Eacute: '\\u00C9',\n\t    Ecirc: '\\u00CA',\n\t    Euml: '\\u00CB',\n\t    Igrave: '\\u00CC',\n\t    Iacute: '\\u00CD',\n\t    Icirc: '\\u00CE',\n\t    Iuml: '\\u00CF',\n\t    ETH: '\\u00D0',\n\t    Ntilde: '\\u00D1',\n\t    Ograve: '\\u00D2',\n\t    Oacute: '\\u00D3',\n\t    Ocirc: '\\u00D4',\n\t    Otilde: '\\u00D5',\n\t    Ouml: '\\u00D6',\n\t    times: '\\u00D7',\n\t    Oslash: '\\u00D8',\n\t    Ugrave: '\\u00D9',\n\t    Uacute: '\\u00DA',\n\t    Ucirc: '\\u00DB',\n\t    Uuml: '\\u00DC',\n\t    Yacute: '\\u00DD',\n\t    THORN: '\\u00DE',\n\t    szlig: '\\u00DF',\n\t    agrave: '\\u00E0',\n\t    aacute: '\\u00E1',\n\t    acirc: '\\u00E2',\n\t    atilde: '\\u00E3',\n\t    auml: '\\u00E4',\n\t    aring: '\\u00E5',\n\t    aelig: '\\u00E6',\n\t    ccedil: '\\u00E7',\n\t    egrave: '\\u00E8',\n\t    eacute: '\\u00E9',\n\t    ecirc: '\\u00EA',\n\t    euml: '\\u00EB',\n\t    igrave: '\\u00EC',\n\t    iacute: '\\u00ED',\n\t    icirc: '\\u00EE',\n\t    iuml: '\\u00EF',\n\t    eth: '\\u00F0',\n\t    ntilde: '\\u00F1',\n\t    ograve: '\\u00F2',\n\t    oacute: '\\u00F3',\n\t    ocirc: '\\u00F4',\n\t    otilde: '\\u00F5',\n\t    ouml: '\\u00F6',\n\t    divide: '\\u00F7',\n\t    oslash: '\\u00F8',\n\t    ugrave: '\\u00F9',\n\t    uacute: '\\u00FA',\n\t    ucirc: '\\u00FB',\n\t    uuml: '\\u00FC',\n\t    yacute: '\\u00FD',\n\t    thorn: '\\u00FE',\n\t    yuml: '\\u00FF',\n\t    OElig: '\\u0152',\n\t    oelig: '\\u0153',\n\t    Scaron: '\\u0160',\n\t    scaron: '\\u0161',\n\t    Yuml: '\\u0178',\n\t    fnof: '\\u0192',\n\t    circ: '\\u02C6',\n\t    tilde: '\\u02DC',\n\t    Alpha: '\\u0391',\n\t    Beta: '\\u0392',\n\t    Gamma: '\\u0393',\n\t    Delta: '\\u0394',\n\t    Epsilon: '\\u0395',\n\t    Zeta: '\\u0396',\n\t    Eta: '\\u0397',\n\t    Theta: '\\u0398',\n\t    Iota: '\\u0399',\n\t    Kappa: '\\u039A',\n\t    Lambda: '\\u039B',\n\t    Mu: '\\u039C',\n\t    Nu: '\\u039D',\n\t    Xi: '\\u039E',\n\t    Omicron: '\\u039F',\n\t    Pi: '\\u03A0',\n\t    Rho: '\\u03A1',\n\t    Sigma: '\\u03A3',\n\t    Tau: '\\u03A4',\n\t    Upsilon: '\\u03A5',\n\t    Phi: '\\u03A6',\n\t    Chi: '\\u03A7',\n\t    Psi: '\\u03A8',\n\t    Omega: '\\u03A9',\n\t    alpha: '\\u03B1',\n\t    beta: '\\u03B2',\n\t    gamma: '\\u03B3',\n\t    delta: '\\u03B4',\n\t    epsilon: '\\u03B5',\n\t    zeta: '\\u03B6',\n\t    eta: '\\u03B7',\n\t    theta: '\\u03B8',\n\t    iota: '\\u03B9',\n\t    kappa: '\\u03BA',\n\t    lambda: '\\u03BB',\n\t    mu: '\\u03BC',\n\t    nu: '\\u03BD',\n\t    xi: '\\u03BE',\n\t    omicron: '\\u03BF',\n\t    pi: '\\u03C0',\n\t    rho: '\\u03C1',\n\t    sigmaf: '\\u03C2',\n\t    sigma: '\\u03C3',\n\t    tau: '\\u03C4',\n\t    upsilon: '\\u03C5',\n\t    phi: '\\u03C6',\n\t    chi: '\\u03C7',\n\t    psi: '\\u03C8',\n\t    omega: '\\u03C9',\n\t    thetasym: '\\u03D1',\n\t    upsih: '\\u03D2',\n\t    piv: '\\u03D6',\n\t    ensp: '\\u2002',\n\t    emsp: '\\u2003',\n\t    thinsp: '\\u2009',\n\t    zwnj: '\\u200C',\n\t    zwj: '\\u200D',\n\t    lrm: '\\u200E',\n\t    rlm: '\\u200F',\n\t    ndash: '\\u2013',\n\t    mdash: '\\u2014',\n\t    lsquo: '\\u2018',\n\t    rsquo: '\\u2019',\n\t    sbquo: '\\u201A',\n\t    ldquo: '\\u201C',\n\t    rdquo: '\\u201D',\n\t    bdquo: '\\u201E',\n\t    dagger: '\\u2020',\n\t    Dagger: '\\u2021',\n\t    bull: '\\u2022',\n\t    hellip: '\\u2026',\n\t    permil: '\\u2030',\n\t    prime: '\\u2032',\n\t    Prime: '\\u2033',\n\t    lsaquo: '\\u2039',\n\t    rsaquo: '\\u203A',\n\t    oline: '\\u203E',\n\t    frasl: '\\u2044',\n\t    euro: '\\u20AC',\n\t    image: '\\u2111',\n\t    weierp: '\\u2118',\n\t    real: '\\u211C',\n\t    trade: '\\u2122',\n\t    alefsym: '\\u2135',\n\t    larr: '\\u2190',\n\t    uarr: '\\u2191',\n\t    rarr: '\\u2192',\n\t    darr: '\\u2193',\n\t    harr: '\\u2194',\n\t    crarr: '\\u21B5',\n\t    lArr: '\\u21D0',\n\t    uArr: '\\u21D1',\n\t    rArr: '\\u21D2',\n\t    dArr: '\\u21D3',\n\t    hArr: '\\u21D4',\n\t    forall: '\\u2200',\n\t    part: '\\u2202',\n\t    exist: '\\u2203',\n\t    empty: '\\u2205',\n\t    nabla: '\\u2207',\n\t    isin: '\\u2208',\n\t    notin: '\\u2209',\n\t    ni: '\\u220B',\n\t    prod: '\\u220F',\n\t    sum: '\\u2211',\n\t    minus: '\\u2212',\n\t    lowast: '\\u2217',\n\t    radic: '\\u221A',\n\t    prop: '\\u221D',\n\t    infin: '\\u221E',\n\t    ang: '\\u2220',\n\t    and: '\\u2227',\n\t    or: '\\u2228',\n\t    cap: '\\u2229',\n\t    cup: '\\u222A',\n\t    int: '\\u222B',\n\t    there4: '\\u2234',\n\t    sim: '\\u223C',\n\t    cong: '\\u2245',\n\t    asymp: '\\u2248',\n\t    ne: '\\u2260',\n\t    equiv: '\\u2261',\n\t    le: '\\u2264',\n\t    ge: '\\u2265',\n\t    sub: '\\u2282',\n\t    sup: '\\u2283',\n\t    nsub: '\\u2284',\n\t    sube: '\\u2286',\n\t    supe: '\\u2287',\n\t    oplus: '\\u2295',\n\t    otimes: '\\u2297',\n\t    perp: '\\u22A5',\n\t    sdot: '\\u22C5',\n\t    lceil: '\\u2308',\n\t    rceil: '\\u2309',\n\t    lfloor: '\\u230A',\n\t    rfloor: '\\u230B',\n\t    loz: '\\u25CA',\n\t    spades: '\\u2660',\n\t    clubs: '\\u2663',\n\t    hearts: '\\u2665',\n\t    diams: '\\u2666',\n\t    lang: '\\u27E8',\n\t    rang: '\\u27E9'\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar token_1 = __webpack_require__(13);\n\tvar Reader = (function () {\n\t    function Reader() {\n\t        this.values = [];\n\t        this.curly = this.paren = -1;\n\t    }\n\t    // A function following one of those tokens is an expression.\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t            'return', 'case', 'delete', 'throw', 'void',\n\t            // assignment operators\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t            '&=', '|=', '^=', ',',\n\t            // binary/unary operators\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n\t    };\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\n\t    // https://github.com/mozilla/sweet.js/wiki/design\n\t    Reader.prototype.isRegexStart = function () {\n\t        var previous = this.values[this.values.length - 1];\n\t        var regex = (previous !== null);\n\t        switch (previous) {\n\t            case 'this':\n\t            case ']':\n\t                regex = false;\n\t                break;\n\t            case ')':\n\t                var keyword = this.values[this.paren - 1];\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\n\t                break;\n\t            case '}':\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                regex = false;\n\t                if (this.values[this.curly - 3] === 'function') {\n\t                    // Anonymous function, e.g. function(){} /42\n\t                    var check = this.values[this.curly - 4];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\n\t                }\n\t                else if (this.values[this.curly - 4] === 'function') {\n\t                    // Named function, e.g. function f(){} /42/\n\t                    var check = this.values[this.curly - 5];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return regex;\n\t    };\n\t    Reader.prototype.push = function (token) {\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n\t            if (token.value === '{') {\n\t                this.curly = this.values.length;\n\t            }\n\t            else if (token.value === '(') {\n\t                this.paren = this.values.length;\n\t            }\n\t            this.values.push(token.value);\n\t        }\n\t        else {\n\t            this.values.push(null);\n\t        }\n\t    };\n\t    return Reader;\n\t}());\n\tvar Tokenizer = (function () {\n\t    function Tokenizer(code, config) {\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\n\t        this.buffer = [];\n\t        this.reader = new Reader();\n\t    }\n\t    Tokenizer.prototype.errors = function () {\n\t        return this.errorHandler.errors;\n\t    };\n\t    Tokenizer.prototype.getNextToken = function () {\n\t        if (this.buffer.length === 0) {\n\t            var comments = this.scanner.scanComments();\n\t            if (this.scanner.trackComment) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n\t                    var comment = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: value\n\t                    };\n\t                    if (this.trackRange) {\n\t                        comment.range = e.range;\n\t                    }\n\t                    if (this.trackLoc) {\n\t                        comment.loc = e.loc;\n\t                    }\n\t                    this.buffer.push(comment);\n\t                }\n\t            }\n\t            if (!this.scanner.eof()) {\n\t                var loc = void 0;\n\t                if (this.trackLoc) {\n\t                    loc = {\n\t                        start: {\n\t                            line: this.scanner.lineNumber,\n\t                            column: this.scanner.index - this.scanner.lineStart\n\t                        },\n\t                        end: {}\n\t                    };\n\t                }\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n\t                this.reader.push(token);\n\t                var entry = {\n\t                    type: token_1.TokenName[token.type],\n\t                    value: this.scanner.source.slice(token.start, token.end)\n\t                };\n\t                if (this.trackRange) {\n\t                    entry.range = [token.start, token.end];\n\t                }\n\t                if (this.trackLoc) {\n\t                    loc.end = {\n\t                        line: this.scanner.lineNumber,\n\t                        column: this.scanner.index - this.scanner.lineStart\n\t                    };\n\t                    entry.loc = loc;\n\t                }\n\t                if (token.type === 9 /* RegularExpression */) {\n\t                    var pattern = token.pattern;\n\t                    var flags = token.flags;\n\t                    entry.regex = { pattern: pattern, flags: flags };\n\t                }\n\t                this.buffer.push(entry);\n\t            }\n\t        }\n\t        return this.buffer.shift();\n\t    };\n\t    return Tokenizer;\n\t}());\n\texports.Tokenizer = Tokenizer;\n\n\n/***/ }\n/******/ ])\n});\n;","/**\n * @author Kate\n */\n\nvar tracery = function() {\n\n    var TraceryNode = function(parent, childIndex, settings) {\n        this.errors = [];\n\n        // No input? Add an error, but continue anyways\n        if (settings.raw === undefined) {\n            this.errors.push(\"Empty input for node\");\n            settings.raw = \"\";\n        }\n\n        // If the root node of an expansion, it will have the grammar passed as the 'parent'\n        //  set the grammar from the 'parent', and set all other values for a root node\n        if ( parent instanceof tracery.Grammar) {\n            this.grammar = parent;\n            this.parent = null;\n            this.depth = 0;\n            this.childIndex = 0;\n        } else {\n            this.grammar = parent.grammar;\n            this.parent = parent;\n            this.depth = parent.depth + 1;\n            this.childIndex = childIndex;\n        }\n\n        this.raw = settings.raw;\n        this.type = settings.type;\n        this.isExpanded = false;\n\n        if (!this.grammar) {\n            this.errors.push(\"No grammar specified for this node \" + this);\n        }\n\n    };\n\n    TraceryNode.prototype.toString = function() {\n        return \"Node('\" + this.raw + \"' \" + this.type + \" d:\" + this.depth + \")\";\n    };\n\n    // Expand the node (with the given child rule)\n    //  Make children if the node has any\n    TraceryNode.prototype.expandChildren = function(childRule, preventRecursion) {\n        this.children = [];\n        this.finishedText = \"\";\n\n        // Set the rule for making children,\n        // and expand it into section\n        this.childRule = childRule;\n        if (this.childRule !== undefined) {\n            var sections = tracery.parse(childRule);\n\n            // Add errors to this\n            if (sections.errors.length > 0) {\n                this.errors = this.errors.concat(sections.errors);\n\n            }\n\n            for (var i = 0; i < sections.length; i++) {\n                this.children[i] = new TraceryNode(this, i, sections[i]);\n                if (!preventRecursion)\n                    this.children[i].expand(preventRecursion);\n\n                // Add in the finished text\n                this.finishedText += this.children[i].finishedText;\n            }\n        } else {\n            // In normal operation, this shouldn't ever happen\n            this.errors.push(\"No child rule provided, can't expand children\");\n        }\n    };\n\n    // Expand this rule (possibly creating children)\n    TraceryNode.prototype.expand = function(preventRecursion) {\n\n        if (!this.isExpanded) {\n            this.isExpanded = true;\n\n            this.expansionErrors = [];\n\n            // Types of nodes\n            // -1: raw, needs parsing\n            //  0: Plaintext\n            //  1: Tag (\"#symbol.mod.mod2.mod3#\" or \"#[pushTarget:pushRule]symbol.mod\")\n            //  2: Action (\"[pushTarget:pushRule], [pushTarget:POP]\", more in the future)\n\n            switch(this.type) {\n            // Raw rule\n            case -1:\n\n                this.expandChildren(this.raw, preventRecursion);\n                break;\n\n            // plaintext, do nothing but copy text into finsihed text\n            case 0:\n                this.finishedText = this.raw;\n                break;\n\n            // Tag\n            case 1:\n                // Parse to find any actions, and figure out what the symbol is\n                this.preactions = [];\n                this.postactions = [];\n\n                var parsed = tracery.parseTag(this.raw);\n\n                // Break into symbol actions and modifiers\n                this.symbol = parsed.symbol;\n                this.modifiers = parsed.modifiers;\n\n                // Create all the preactions from the raw syntax\n                for (var i = 0; i < parsed.preactions.length; i++) {\n                    this.preactions[i] = new NodeAction(this, parsed.preactions[i].raw);\n                }\n                for (var i = 0; i < parsed.postactions.length; i++) {\n                    //   this.postactions[i] = new NodeAction(this, parsed.postactions[i].raw);\n                }\n\n                // Make undo actions for all preactions (pops for each push)\n                for (var i = 0; i < this.preactions.length; i++) {\n                    if (this.preactions[i].type === 0)\n                        this.postactions.push(this.preactions[i].createUndo());\n                }\n\n                // Activate all the preactions\n                for (var i = 0; i < this.preactions.length; i++) {\n                    this.preactions[i].activate();\n                }\n\n                this.finishedText = this.raw;\n\n                // Expand (passing the node, this allows tracking of recursion depth)\n\n                var selectedRule = this.grammar.selectRule(this.symbol, this, this.errors);\n\n                this.expandChildren(selectedRule, preventRecursion);\n\n                // Apply modifiers\n                // TODO: Update parse function to not trigger on hashtags within parenthesis within tags,\n                //   so that modifier parameters can contain tags \"#story.replace(#protagonist#, #newCharacter#)#\"\n                for (var i = 0; i < this.modifiers.length; i++) {\n                    var modName = this.modifiers[i];\n                    var modParams = [];\n                    if (modName.indexOf(\"(\") > 0) {\n                        var regExp = /\\(([^)]+)\\)/;\n\n                        // Todo: ignore any escaped commas.  For now, commas always split\n                        var results = regExp.exec(this.modifiers[i]);\n                        if (!results || results.length < 2) {\n                        } else {\n                            var modParams = results[1].split(\",\");\n                            modName = this.modifiers[i].substring(0, modName.indexOf(\"(\"));\n                        }\n\n                    }\n\n                    var mod = this.grammar.modifiers[modName];\n\n                    // Missing modifier?\n                    if (!mod) {\n                        this.errors.push(\"Missing modifier \" + modName);\n                        this.finishedText += \"((.\" + modName + \"))\";\n                    } else {\n                        this.finishedText = mod(this.finishedText, modParams);\n\n                    }\n\n                }\n\n                // Perform post-actions\n                for (var i = 0; i < this.postactions.length; i++) {\n                    this.postactions[i].activate();\n                }\n                break;\n            case 2:\n\n                // Just a bare action?  Expand it!\n                this.action = new NodeAction(this, this.raw);\n                this.action.activate();\n\n                // No visible text for an action\n                // TODO: some visible text for if there is a failure to perform the action?\n                this.finishedText = \"\";\n                break;\n\n            }\n\n        } else {\n            //console.warn(\"Already expanded \" + this);\n        }\n\n    };\n\n    TraceryNode.prototype.clearEscapeChars = function() {\n\n        this.finishedText = this.finishedText.replace(/\\\\\\\\/g, \"DOUBLEBACKSLASH\").replace(/\\\\/g, \"\").replace(/DOUBLEBACKSLASH/g, \"\\\\\");\n    };\n\n    // An action that occurs when a node is expanded\n    // Types of actions:\n    // 0 Push: [key:rule]\n    // 1 Pop: [key:POP]\n    // 2 function: [functionName(param0,param1)] (TODO!)\n    function NodeAction(node, raw) {\n        /*\n         if (!node)\n         console.warn(\"No node for NodeAction\");\n         if (!raw)\n         console.warn(\"No raw commands for NodeAction\");\n         */\n\n        this.node = node;\n\n        var sections = raw.split(\":\");\n        this.target = sections[0];\n\n        // No colon? A function!\n        if (sections.length === 1) {\n            this.type = 2;\n\n        }\n\n        // Colon? It's either a push or a pop\n        else {\n            this.rule = sections[1];\n            if (this.rule === \"POP\") {\n                this.type = 1;\n            } else {\n                this.type = 0;\n            }\n        }\n    }\n\n\n    NodeAction.prototype.createUndo = function() {\n        if (this.type === 0) {\n            return new NodeAction(this.node, this.target + \":POP\");\n        }\n        // TODO Not sure how to make Undo actions for functions or POPs\n        return null;\n    };\n\n    NodeAction.prototype.activate = function() {\n        var grammar = this.node.grammar;\n        switch(this.type) {\n        case 0:\n            // split into sections (the way to denote an array of rules)\n            this.ruleSections = this.rule.split(\",\");\n            this.finishedRules = [];\n            this.ruleNodes = [];\n            for (var i = 0; i < this.ruleSections.length; i++) {\n                var n = new TraceryNode(grammar, 0, {\n                    type : -1,\n                    raw : this.ruleSections[i]\n                });\n\n                n.expand();\n\n                this.finishedRules.push(n.finishedText);\n            }\n\n            // TODO: escape commas properly\n            grammar.pushRules(this.target, this.finishedRules, this);\n            break;\n        case 1:\n            grammar.popRules(this.target);\n            break;\n        case 2:\n            grammar.flatten(this.target, true);\n            break;\n        }\n\n    };\n\n    NodeAction.prototype.toText = function() {\n        switch(this.type) {\n        case 0:\n            return this.target + \":\" + this.rule;\n        case 1:\n            return this.target + \":POP\";\n        case 2:\n            return \"((some function))\";\n        default:\n            return \"((Unknown Action))\";\n        }\n    };\n\n    // Sets of rules\n    // Can also contain conditional or fallback sets of rulesets)\n    function RuleSet(grammar, raw) {\n        this.raw = raw;\n        this.grammar = grammar;\n        this.falloff = 1;\n\n        if (Array.isArray(raw)) {\n            this.defaultRules = raw;\n        } else if ( typeof raw === 'string' || raw instanceof String) {\n            this.defaultRules = [raw];\n        } else if (raw === 'object') {\n            // TODO: support for conditional and hierarchical rule sets\n        }\n\n    };\n\n    RuleSet.prototype.selectRule = function(errors) {\n        // console.log(\"Get rule\", this.raw);\n        // Is there a conditional?\n        if (this.conditionalRule) {\n            var value = this.grammar.expand(this.conditionalRule, true);\n            // does this value match any of the conditionals?\n            if (this.conditionalValues[value]) {\n                var v = this.conditionalValues[value].selectRule(errors);\n                if (v !== null && v !== undefined)\n                    return v;\n            }\n            // No returned value?\n        }\n\n        // Is there a ranked order?\n        if (this.ranking) {\n            for (var i = 0; i < this.ranking.length; i++) {\n                var v = this.ranking.selectRule();\n                if (v !== null && v !== undefined)\n                    return v;\n            }\n\n            // Still no returned value?\n        }\n\n        if (this.defaultRules !== undefined) {\n            var index = 0;\n            // Select from this basic array of rules\n\n            // Get the distribution from the grammar if there is no other\n            var distribution = this.distribution;\n            if (!distribution)\n                distribution = this.grammar.distribution;\n\n            switch(distribution) {\n            case \"shuffle\":\n\n                // create a shuffle desk\n                if (!this.shuffledDeck || this.shuffledDeck.length === 0) {\n                    // make an array\n                    this.shuffledDeck = fyshuffle(Array.apply(null, {\n                        length : this.defaultRules.length\n                    }).map(Number.call, Number), this.falloff);\n\n                }\n\n                index = this.shuffledDeck.pop();\n\n                break;\n            case \"weighted\":\n                errors.push(\"Weighted distribution not yet implemented\");\n                break;\n            case \"falloff\":\n                errors.push(\"Falloff distribution not yet implemented\");\n                break;\n            default:\n\n                index = Math.floor(Math.pow(Math.random(), this.falloff) * this.defaultRules.length);\n                break;\n            }\n\n            if (!this.defaultUses)\n                this.defaultUses = [];\n            this.defaultUses[index] = ++this.defaultUses[index] || 1;\n            return this.defaultRules[index];\n        }\n\n        errors.push(\"No default rules defined for \" + this);\n        return null;\n\n    };\n\n    RuleSet.prototype.clearState = function() {\n\n        if (this.defaultUses) {\n            this.defaultUses = [];\n        }\n    };\n\n    function fyshuffle(array, falloff) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    var Symbol = function(grammar, key, rawRules) {\n        // Symbols can be made with a single value, and array, or array of objects of (conditions/values)\n        this.key = key;\n        this.grammar = grammar;\n        this.rawRules = rawRules;\n\n        this.baseRules = new RuleSet(this.grammar, rawRules);\n        this.clearState();\n\n    };\n\n    Symbol.prototype.clearState = function() {\n\n        // Clear the stack and clear all ruleset usages\n        this.stack = [this.baseRules];\n\n        this.uses = [];\n        this.baseRules.clearState();\n    };\n\n    Symbol.prototype.pushRules = function(rawRules) {\n        var rules = new RuleSet(this.grammar, rawRules);\n        this.stack.push(rules);\n    };\n\n    Symbol.prototype.popRules = function() {\n        this.stack.pop();\n    };\n\n    Symbol.prototype.selectRule = function(node, errors) {\n        this.uses.push({\n            node : node\n        });\n\n        if (this.stack.length === 0) {\n            errors.push(\"The rule stack for '\" + this.key + \"' is empty, too many pops?\");\n            return \"((\" + this.key + \"))\";\n        }\n\n        return this.stack[this.stack.length - 1].selectRule();\n    };\n\n    Symbol.prototype.getActiveRules = function() {\n        if (this.stack.length === 0) {\n            return null;\n        }\n        return this.stack[this.stack.length - 1].selectRule();\n    };\n\n    Symbol.prototype.rulesToJSON = function() {\n        return JSON.stringify(this.rawRules);\n    };\n\n    var Grammar = function(raw, settings) {\n        this.modifiers = {};\n        this.loadFromRawObj(raw);\n    };\n\n    Grammar.prototype.clearState = function() {\n        var keys = Object.keys(this.symbols);\n        for (var i = 0; i < keys.length; i++) {\n            this.symbols[keys[i]].clearState();\n        }\n    };\n\n    Grammar.prototype.addModifiers = function(mods) {\n\n        // copy over the base modifiers\n        for (var key in mods) {\n            if (mods.hasOwnProperty(key)) {\n                this.modifiers[key] = mods[key];\n            }\n        };\n\n    };\n\n    Grammar.prototype.loadFromRawObj = function(raw) {\n\n        this.raw = raw;\n        this.symbols = {};\n        this.subgrammars = [];\n\n        if (this.raw) {\n            // Add all rules to the grammar\n            for (var key in this.raw) {\n                if (this.raw.hasOwnProperty(key)) {\n                    this.symbols[key] = new Symbol(this, key, this.raw[key]);\n                }\n            }\n        }\n    };\n\n    Grammar.prototype.createRoot = function(rule) {\n        // Create a node and subnodes\n        var root = new TraceryNode(this, 0, {\n            type : -1,\n            raw : rule,\n        });\n\n        return root;\n    };\n\n    Grammar.prototype.expand = function(rule, allowEscapeChars) {\n        var root = this.createRoot(rule);\n        root.expand();\n        if (!allowEscapeChars)\n            root.clearEscapeChars();\n\n        return root;\n    };\n\n    Grammar.prototype.flatten = function(rule, allowEscapeChars) {\n        var root = this.expand(rule, allowEscapeChars);\n\n        return root.finishedText;\n    };\n\n    Grammar.prototype.toJSON = function() {\n        var keys = Object.keys(this.symbols);\n        var symbolJSON = [];\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            symbolJSON.push(' \"' + key + '\" : ' + this.symbols[key].rulesToJSON());\n        }\n        return \"{\\n\" + symbolJSON.join(\",\\n\") + \"\\n}\";\n    };\n\n    // Create or push rules\n    Grammar.prototype.pushRules = function(key, rawRules, sourceAction) {\n\n        if (this.symbols[key] === undefined) {\n            this.symbols[key] = new Symbol(this, key, rawRules);\n            if (sourceAction)\n                this.symbols[key].isDynamic = true;\n        } else {\n            this.symbols[key].pushRules(rawRules);\n        }\n    };\n\n    Grammar.prototype.popRules = function(key) {\n        if (!this.symbols[key])\n            this.errors.push(\"Can't pop: no symbol for key \" + key);\n        this.symbols[key].popRules();\n    };\n\n    Grammar.prototype.selectRule = function(key, node, errors) {\n        if (this.symbols[key]) {\n            var rule = this.symbols[key].selectRule(node, errors);\n\n            return rule;\n        }\n\n        // Failover to alternative subgrammars\n        for (var i = 0; i < this.subgrammars.length; i++) {\n\n            if (this.subgrammars[i].symbols[key])\n                return this.subgrammars[i].symbols[key].selectRule();\n        }\n\n        // No symbol?\n        errors.push(\"No symbol for '\" + key + \"'\");\n        return \"((\" + key + \"))\";\n    };\n\n    // Parses a plaintext rule in the tracery syntax\n    tracery = {\n\n        createGrammar : function(raw) {\n            return new Grammar(raw);\n        },\n\n        // Parse the contents of a tag\n        parseTag : function(tagContents) {\n\n            var parsed = {\n                symbol : undefined,\n                preactions : [],\n                postactions : [],\n                modifiers : []\n            };\n            var sections = tracery.parse(tagContents);\n            var symbolSection = undefined;\n            for (var i = 0; i < sections.length; i++) {\n                if (sections[i].type === 0) {\n                    if (symbolSection === undefined) {\n                        symbolSection = sections[i].raw;\n                    } else {\n                        throw (\"multiple main sections in \" + tagContents);\n                    }\n                } else {\n                    parsed.preactions.push(sections[i]);\n                }\n            }\n\n            if (symbolSection === undefined) {\n                //   throw (\"no main section in \" + tagContents);\n            } else {\n                var components = symbolSection.split(\".\");\n                parsed.symbol = components[0];\n                parsed.modifiers = components.slice(1);\n            }\n            return parsed;\n        },\n\n        parse : function(rule) {\n            var depth = 0;\n            var inTag = false;\n            var sections = [];\n            var escaped = false;\n\n            var errors = [];\n            var start = 0;\n\n            var escapedSubstring = \"\";\n            var lastEscapedChar = undefined;\n\n            if (rule === null) {\n                var sections = [];\n                sections.errors = errors;\n\n                return sections;\n            }\n\n            function createSection(start, end, type) {\n                if (end - start < 1) {\n                    if (type === 1)\n                        errors.push(start + \": empty tag\");\n                    if (type === 2)\n                        errors.push(start + \": empty action\");\n\n                }\n                var rawSubstring;\n                if (lastEscapedChar !== undefined) {\n                    rawSubstring = escapedSubstring + \"\\\\\" + rule.substring(lastEscapedChar + 1, end);\n\n                } else {\n                    rawSubstring = rule.substring(start, end);\n                }\n                sections.push({\n                    type : type,\n                    raw : rawSubstring\n                });\n                lastEscapedChar = undefined;\n                escapedSubstring = \"\";\n            };\n\n            for (var i = 0; i < rule.length; i++) {\n\n                if (!escaped) {\n                    var c = rule.charAt(i);\n\n                    switch(c) {\n\n                    // Enter a deeper bracketed section\n                    case '[':\n                        if (depth === 0 && !inTag) {\n                            if (start < i)\n                                createSection(start, i, 0);\n                            start = i + 1;\n                        }\n                        depth++;\n                        break;\n\n                    case ']':\n                        depth--;\n\n                        // End a bracketed section\n                        if (depth === 0 && !inTag) {\n                            createSection(start, i, 2);\n                            start = i + 1;\n                        }\n                        break;\n\n                    // Hashtag\n                    //   ignore if not at depth 0, that means we are in a bracket\n                    case '#':\n                        if (depth === 0) {\n                            if (inTag) {\n                                createSection(start, i, 1);\n                                start = i + 1;\n                            } else {\n                                if (start < i)\n                                    createSection(start, i, 0);\n                                start = i + 1;\n                            }\n                            inTag = !inTag;\n                        }\n                        break;\n\n                    case '\\\\':\n                        escaped = true;\n                        escapedSubstring = escapedSubstring + rule.substring(start, i);\n                        start = i + 1;\n                        lastEscapedChar = i;\n                        break;\n                    }\n                } else {\n                    escaped = false;\n                }\n            }\n            if (start < rule.length)\n                createSection(start, rule.length, 0);\n\n            if (inTag) {\n                errors.push(\"Unclosed tag\");\n            }\n            if (depth > 0) {\n                errors.push(\"Too many [\");\n            }\n            if (depth < 0) {\n                errors.push(\"Too many ]\");\n            }\n\n            // Strip out empty plaintext sections\n\n            sections = sections.filter(function(section) {\n                if (section.type === 0 && section.raw.length === 0)\n                    return false;\n                return true;\n            });\n            sections.errors = errors;\n            return sections;\n        },\n    };\n\n    function isVowel(c) {\n        var c2 = c.toLowerCase();\n        return (c2 === 'a') || (c2 === 'e') || (c2 === 'i') || (c2 === 'o') || (c2 === 'u');\n    };\n\n    function isAlphaNum(c) {\n        return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9');\n    };\n    function escapeRegExp(str) {\n        return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n    }\n\n    var baseEngModifiers = {\n\n        replace : function(s, params) {\n            //http://stackoverflow.com/questions/1144783/replacing-all-occurrences-of-a-string-in-javascript\n            return s.replace(new RegExp(escapeRegExp(params[0]), 'g'), params[1]);\n        },\n\n        capitalizeAll : function(s) {\n            var s2 = \"\";\n            var capNext = true;\n            for (var i = 0; i < s.length; i++) {\n\n                if (!isAlphaNum(s.charAt(i))) {\n                    capNext = true;\n                    s2 += s.charAt(i);\n                } else {\n                    if (!capNext) {\n                        s2 += s.charAt(i);\n                    } else {\n                        s2 += s.charAt(i).toUpperCase();\n                        capNext = false;\n                    }\n\n                }\n            }\n            return s2;\n        },\n\n        capitalize : function(s) {\n            return s.charAt(0).toUpperCase() + s.substring(1);\n        },\n\n        a : function(s) {\n            if (s.length > 0) {\n                if (s.charAt(0).toLowerCase() === 'u') {\n                    if (s.length > 2) {\n                        if (s.charAt(2).toLowerCase() === 'i')\n                            return \"a \" + s;\n                    }\n                }\n\n                if (isVowel(s.charAt(0))) {\n                    return \"an \" + s;\n                }\n            }\n\n            return \"a \" + s;\n\n        },\n\n        firstS : function(s) {\n            console.log(s);\n            var s2 = s.split(\" \");\n\n            var finished = baseEngModifiers.s(s2[0]) + \" \" + s2.slice(1).join(\" \");\n            console.log(finished);\n            return finished;\n        },\n\n        s : function(s) {\n            switch (s.charAt(s.length -1)) {\n            case 's':\n                return s + \"es\";\n                break;\n            case 'h':\n                return s + \"es\";\n                break;\n            case 'x':\n                return s + \"es\";\n                break;\n            case 'y':\n                if (!isVowel(s.charAt(s.length - 2)))\n                    return s.substring(0, s.length - 1) + \"ies\";\n                else\n                    return s + \"s\";\n                break;\n            default:\n                return s + \"s\";\n            }\n        },\n        ed : function(s) {\n            switch (s.charAt(s.length -1)) {\n            case 's':\n                return s + \"ed\";\n                break;\n            case 'e':\n                return s + \"d\";\n                break;\n            case 'h':\n                return s + \"ed\";\n                break;\n            case 'x':\n                return s + \"ed\";\n                break;\n            case 'y':\n                if (!isVowel(s.charAt(s.length - 2)))\n                    return s.substring(0, s.length - 1) + \"ied\";\n                else\n                    return s + \"d\";\n                break;\n            default:\n                return s + \"ed\";\n            }\n        }\n    };\n\n    tracery.baseEngModifiers = baseEngModifiers; \n    // Externalize\n    tracery.TraceryNode = TraceryNode;\n\n    tracery.Grammar = Grammar;\n    tracery.Symbol = Symbol;\n    tracery.RuleSet = RuleSet;\n    return tracery;\n}();\n\nmodule.exports = tracery; ","import { randInt, interpolate, limNumber, randFloat } from \"./math-functions\";\r\n\r\nexport class Rgba {\r\n    private static readonly MAX_DIF = 255 * 4;\r\n    static randRgb(): Rgba {\r\n        return new Rgba(randInt(0, 256), randInt(0, 256), randInt(0, 256), 255);\r\n    }\r\n    constructor(\r\n        readonly red: number,\r\n        readonly green: number,\r\n        readonly blue: number,\r\n        readonly alpha: number\r\n    ) { }\r\n    interpolate(other: Rgba, t: number): Rgba {\r\n        return new Rgba(\r\n            interpolate(this.red, other.red, t),\r\n            interpolate(this.green, other.green, t),\r\n            interpolate(this.blue, other.blue, t),\r\n            interpolate(this.alpha, other.alpha, t)\r\n        );\r\n    }\r\n    normalise(): Rgba {\r\n        return new Rgba(\r\n            limNumber(0, 255, this.red),\r\n            limNumber(0, 255, this.green),\r\n            limNumber(0, 255, this.blue),\r\n            limNumber(0, 255, this.alpha)\r\n        );\r\n    }\r\n    mutateRgb(value: number): Rgba {\r\n        return new Rgba(\r\n            this.red + randFloat(-value, value),\r\n            this.green + randFloat(-value, value),\r\n            this.blue + randFloat(-value, value),\r\n            this.alpha\r\n        ).normalise();\r\n    }\r\n    difference(other: Rgba): number {\r\n        return ((\r\n            Math.abs(this.red - other.red) +\r\n            Math.abs(this.green - other.green) +\r\n            Math.abs(this.blue - other.blue) +\r\n            Math.abs(this.alpha - other.alpha)\r\n        ) / Rgba.MAX_DIF);\r\n    }\r\n}\r\n\r\nexport class Canvas {\r\n    readonly node: HTMLCanvasElement;\r\n    readonly ctx: CanvasRenderingContext2D;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        this.node = node || document.createElement(\"canvas\");\r\n        this.node.width = width;\r\n        this.node.height = height;\r\n        this.ctx = this.node.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    }\r\n}\r\n\r\nexport class PixelsData extends Canvas {\r\n    readonly data: ImageData;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        super(width, height, node);\r\n        this.data = this.ctx.createImageData(\r\n            this.node.width,\r\n            this.node.height\r\n        );\r\n    }\r\n    setPixel(x: number, y: number, color: Rgba) {\r\n        const POINTER = (y * this.data.width + x) * 4;\r\n        this.data.data[POINTER] = color.red;\r\n        this.data.data[POINTER + 1] = color.green;\r\n        this.data.data[POINTER + 2] = color.blue;\r\n        this.data.data[POINTER + 3] = color.alpha;\r\n    }\r\n    update() {\r\n        this.ctx.putImageData(this.data, 0, 0);\r\n        return this;\r\n    }\r\n}","export function* range(from: number, to: number) {\r\n    while (from < to) {\r\n        yield from++;\r\n    }\r\n}\r\n\r\nexport function randFloat(bottom: number, top: number) {\r\n    return Math.random() * (top - bottom) + bottom;\r\n}\r\n\r\nexport function randInt(bottom: number, top: number) {\r\n    return Math.floor(randFloat(bottom, top));\r\n}\r\n\r\nexport function randChoice<T>(arr: T[]): T {\r\n    return arr[randInt(0, arr.length)];\r\n}\r\n\r\nexport function fixNumber(min: number, max: number, number: number): number {\r\n    return number >= min ? number % max : max - (-number % max);\r\n}\r\n\r\nexport function normalizeNumber(\r\n    min: number,\r\n    max: number,\r\n    number: number\r\n): number {\r\n    return (number - min) / (max - min);\r\n}\r\n\r\nexport function limNumber(min: number, max: number, number: number): number {\r\n    return Math.max(Math.min(number, max), min);\r\n}\r\n\r\nexport function interpolate(a: number, b: number, t: number): number {\r\n    return a + (b - a) * t;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Canvas, PixelsData, Rgba } from \"./drawing\";\r\nimport { createGrammar } from 'tracery-grammar';\r\nimport { parseScript } from 'esprima';\r\nimport { normalizeNumber } from \"./math-functions\";\r\n\r\ntype Formula = (x: number, y: number, t: number) => number;\r\n\r\ntype GenerationResult = ReturnType<typeof generateData>;\r\n\r\nfunction isValidFormula(formula: string) {\r\n    let valid = true;\r\n    try {\r\n        parseScript(formula);\r\n    } catch {\r\n        valid = false;\r\n    }\r\n    return formula.length > 0 ? valid : false;\r\n}\r\n\r\nfunction getDrawingFunction(textFormula: string): Formula {\r\n    return isValidFormula(textFormula)\r\n        ? eval(`(x, y, t) => {\r\n            let output = ${textFormula};\r\n            switch (output) {\r\n                case Infinity: return Number.MAX_VALUE;\r\n                case -Infinity: return Number.MIN_VALUE;\r\n                case NaN: return 0;\r\n                default: return output;\r\n            }\r\n        }`)\r\n        : (_x, _y, _t) => 0;\r\n}\r\n\r\nfunction normalizeData(result: GenerationResult): number[][] {\r\n    const newData: number[][] = [];\r\n    for (let x = 0; x < result.data.length; x++) {\r\n        newData[x] = [];\r\n        for (let y = 0; y < result.data[0].length; y++) {\r\n            newData[x][y] = normalizeNumber(result.min, result.max, result.data[x][y]);\r\n        }\r\n    }\r\n    return newData;\r\n}\r\n\r\nfunction generateData(\r\n    width: number,\r\n    height: number,\r\n    time: number,\r\n    formula: Formula\r\n) {\r\n    const resultData: number[][] = [];\r\n    let min = Infinity;\r\n    let max = -Infinity;\r\n    let resultText = 'Ok!';\r\n    outer: for (let x = 0; x < width; x++) {\r\n        resultData[x] = [];\r\n        for (let y = 0; y < height; y++) {\r\n            let result: number;\r\n            try {\r\n                result = formula(\r\n                    (x - W / 2) || 1,\r\n                    (y - H / 2) || 1,\r\n                    time || 1\r\n                );\r\n            } catch (error) {\r\n                for (let x2 = x; x2 < width; x2++) {\r\n                    resultData[x] = [];\r\n                    for (let y2 = 0; y2 < height; y2++) {\r\n                        resultData[x][y] = 0;\r\n                    }\r\n                }\r\n                resultText = error;\r\n                break outer;\r\n            }\r\n            resultData[x][y] = result;\r\n            min = Math.min(min, result);\r\n            max = Math.max(max, result);\r\n        }\r\n    }\r\n    return { data: resultData, min, max, resultText };\r\n}\r\n\r\nfunction dataToImage(data: number[][]) {\r\n    const pixels = new PixelsData(data.length, data[0].length);\r\n    for (let x = 0; x < data.length; x++) {\r\n        for (let y = 0; y < data[0].length; y++) {\r\n            const B = data[x][y] * 255;\r\n            pixels.setPixel(x, y, new Rgba(B, B, B, 255));\r\n        }\r\n    }\r\n    pixels.update();\r\n    return pixels;\r\n}\r\n\r\nfunction generateFormula(min: number) {\r\n    let result: string;\r\n    do {\r\n        result = grammar.flatten('#initial#');\r\n    } while (\r\n        result.length < min || result.length > 200\r\n    );\r\n    return result;\r\n}\r\n\r\nfunction copyToBuffer() {\r\n    const formulaInputNode = document\r\n        .querySelector<HTMLInputElement>('#formula')!;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    searchParams.delete(\"formula\");\r\n    searchParams.append(\"formula\", encodeURI(formulaInputNode.value));\r\n    navigator.clipboard.writeText(\r\n        window.location.hostname +\r\n        (window.location.port.length ? \":\" : \"\") +\r\n        window.location.port +\r\n        window.location.pathname + \"?\" +\r\n        searchParams.toString()\r\n    ).then(function () {\r\n        console.log('Async: Copying to clipboard was successful!');\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n\r\nconst W = 256;\r\nconst H = 256;\r\nconst PX = 2;\r\n\r\nconst sin = Math.sin;\r\nconst asin = Math.asin;\r\nconst cos = Math.cos;\r\nconst acos = Math.acos;\r\nconst tan = Math.tan;\r\nconst tanh = Math.tanh;\r\nconst atan = Math.atan;\r\nconst atan2 = Math.atan2;\r\nconst hypot = Math.hypot;\r\nconst round = Math.round;\r\nconst ceil = Math.ceil;\r\nconst floor = Math.floor;\r\nconst rand = Math.random;\r\nconst abs = Math.abs;\r\nconst sqrt = Math.sqrt;\r\nconst cbrt = Math.cbrt;\r\n\r\nconst avg = (...args: number[]) => args.reduce((a, b) => a + b) / args.length;\r\n\r\nconst grammar = createGrammar({\r\n    'initial': ['#function#', '#number#'],\r\n    'function': [\r\n        '#func-1#(#initial#)',\r\n        '#func-2#(#initial#, #initial#)',\r\n        '#func-3#(#initial#, #initial#, #initial#)',\r\n        '#initial# #operand# #initial#',\r\n        '(#initial#)'\r\n    ],\r\n    'func-1': [\r\n        'sin',\r\n        'cos',\r\n        'tan',\r\n        'tanh',\r\n        // 'asin',\r\n        // 'atan',\r\n        'round',\r\n        'abs',\r\n        'avg'\r\n    ],\r\n    'func-2': ['hypot', 'avg', 'atan2'],\r\n    'func-3': ['hypot', 'avg'],\r\n    'operand': [\r\n        '+',\r\n        '-',\r\n        '*',\r\n        '/',\r\n        '&',\r\n        '|',\r\n        '^',\r\n        '&&',\r\n        '||',\r\n        '<<',\r\n        '>>',\r\n        '%',\r\n        '>',\r\n        '<',\r\n        '=='\r\n    ],\r\n    'number': ['x', 'y', 't']\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n    function onInputFormula() {\r\n        formula = getDrawingFunction(formulaInputNode.value);\r\n        time = 0;\r\n    }\r\n\r\n    const canvas = new Canvas(\r\n        W * PX,\r\n        H * PX,\r\n        document.querySelector<HTMLCanvasElement>('#img')!\r\n    );\r\n    canvas.ctx.imageSmoothingEnabled = false;\r\n    const formulaInputNode = document.querySelector<HTMLTextAreaElement>('#formula')!;\r\n    formulaInputNode.addEventListener('input', onInputFormula);\r\n\r\n    const generateRandom = document.querySelector<HTMLButtonElement>('#generate-random')!;\r\n    generateRandom.addEventListener('click', () => {\r\n        const randFormula = generateFormula(100);\r\n        formulaInputNode.value = randFormula;\r\n        onInputFormula();\r\n    });\r\n    document.querySelector<HTMLButtonElement>('#share')!\r\n        .addEventListener('click', copyToBuffer);\r\n\r\n    const minOutput = document.querySelector('#min')!;\r\n    const maxOutput = document.querySelector('#max')!;\r\n    const timeOutput = document.querySelector('#time')!;\r\n    const resultOutput = document.querySelector('#result')!;\r\n\r\n    let formula = getDrawingFunction(formulaInputNode.value);\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    if (urlParams.has(\"formula\")) {\r\n        formulaInputNode.value = decodeURI(urlParams.get(\"formula\")!);\r\n        formula = getDrawingFunction(decodeURI(urlParams.get(\"formula\")!));\r\n    } else {\r\n        formula = getDrawingFunction(formulaInputNode.value);\r\n    }\r\n\r\n    let time = 0;\r\n    setInterval(() => {\r\n        const result = generateData(W, H, time, formula);\r\n        minOutput.innerHTML = result.min.toString();\r\n        maxOutput.innerHTML = result.max.toString();\r\n        timeOutput.innerHTML = time.toString();\r\n        resultOutput.innerHTML = result.resultText;\r\n        const pixels = dataToImage(normalizeData(result));\r\n        canvas.ctx.drawImage(\r\n            pixels.node,\r\n            0,\r\n            0,\r\n            canvas.node.width, canvas.node.height\r\n        );\r\n        time++;\r\n    });\r\n});"],"sourceRoot":""}